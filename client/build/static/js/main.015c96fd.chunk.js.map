{"version":3,"sources":["graphql/mutations/updateConditions.js","graphql/queries/getExercise.js","graphql/queries/getSetById.js","graphql/queries/getWorkoutById.js","graphql/queries/getUserById.js","components/navbar/WorkoutCreationLink.js","components/navbar/Logout.js","components/navbar/NavBar.js","components/ProtectedRoute.js","utils/formatInputLabel.js","graphql/mutations/deleteSet.js","pages/display_workout/display_set/Set.js","components/Loader.js","pages/display_workout/Workout.js","pages/front_page/TodaysWorkout.js","pages/front_page/FrontPage.js","components/NumberInputField.js","components/TextInputField.js","pages/execute_workout/execute_set/Mutations.js","pages/execute_workout/execute_set/CustomExerciseFieldInput.js","pages/execute_workout/execute_set/ExecuteSetFields.js","pages/execute_workout/execute_set/Checkbox.js","pages/execute_workout/execute_set/ExecuteSet.js","pages/execute_workout/Mutations.js","pages/execute_workout/WorkoutConditions.js","graphql/mutations/updateUserDefinedDataForWorkout.js","pages/execute_workout/UserDefinedDataForWorkout.js","components/Modal(improved).js","components/Collection.js","pages/execute_workout/ExecuteWorkout.js","components/TextAreaField.js","pages/create_program/Success.js","components/SuccessWrapper.js","pages/create_program/Mutations.js","pages/create_program/CreateProgram.js","components/Datepicker.js","graphql/mutations/deleteExercise.js","pages/create_workout/Mutations.js","pages/create_workout/SetupWorkout.js","pages/create_workout/ExerciseList.js","graphql/mutations/updateExerciseName.js","graphql/mutations/updateExerciseDescription.js","pages/create_workout/ExerciseDescription.js","pages/create_workout/create_set/CreateSetButtonsPanel.js","pages/create_workout/AddCustomDataToWorkout.js","pages/create_workout/CreateWorkout.js","pages/create_exercise/CreateNewField.js","pages/create_exercise/ExerciseFields.js","pages/create_exercise/Success.js","pages/create_exercise/Mutations.js","pages/create_exercise/CreateExercise.js","pages/create_workout/create_set/Mutations.js","pages/create_workout/create_set/CreateSet.js","pages/carousel/DropdownNotCompleted.js","pages/carousel/Mutations.js","pages/carousel/RepeatWorkout.js","pages/carousel/DropdownCompleted.js","graphql/mutations/deleteWorkout.js","graphql/mutations/updateWorkoutDate.js","pages/carousel/CarouselWorkout.js","pages/carousel/AllWorkouts.js","utils/getStartAndEndOfMonthAsUTC.js","pages/calendar/CalendarControls.js","pages/calendar/CalendarModal.js","pages/calendar/CalendarCell.js","pages/calendar/Calendar.js","graphql/queries/getWorkoutsByDate.js","pages/calendar/AllWorkoutsCalendar.js","pages/login_signup/Signup.js","pages/login_signup/Form.js","pages/login_signup/Login.js","Routes.js","components/ErrorBoundary.js","App.js","keys.js","serviceWorker.js","index.js"],"names":["conditionsFieldsFragment","gql","_templateObject","_templateObject2","exerciseFieldsFragment","getExercise_templateObject","getExercise_templateObject2","setFieldsFragment","getSetById_templateObject","getSetById_templateObject2","workoutFieldsFragment","getWorkoutById_templateObject","getWorkoutById_templateObject2","getUserById_templateObject","WorkoutCreationLink","id","localStorage","getItem","react_default","a","createElement","react_apollo_esm","query","GET_USER_QUERY","variables","_ref","loading","User","data","currentProgram","programs","length","renderLink","concat","name","programId","Fragment","className","text","state","react_router_dom","to","pathname","Logout","onClick","removeItem","withRouter","props","useEffect","M","AutoInit","location","href","data-target","userId","map","link","i","key","ProtectedRoute","Component","component","rest","Object","objectWithoutProperties","react_router","assign","render","formatLabel","label","replace","str","toUpperCase","deleteSet","deleteSet_templateObject","graphql","editable","set","setNumber","numSets","setNumSets","notes","exercise","then","err","console","log","style","display","justifyContent","alignItems","flexWrap","_ref2","value","margin","Wrapper","styled","div","Loader_templateObject","Anchor","Loader_templateObject2","bounce","keyframes","_templateObject3","colorize","_templateObject4","Ball","span","_templateObject5","Loader","GET_WORKOUT_QUERY","options","workoutId","sets","Workout","_useState","useState","_useState2","slicedToArray","idx","display_set_Set","TodaysWorkout","workoutsForToday","workouts","filter","workout","date","Date","today","getDate","getMonth","getFullYear","isToday","completed","getWorkoutsForToday","multiple","description","display_workout_Workout","FrontPage","lastLocation","useLastLocation","NumberInputField","defaultValue","icon","onChange","onBlur","htmlFor","type","TextInputField","UPDATE_SET_DATA_FIELD_MUTATION","Mutations_templateObject","ADD_FIELD_TO_EXERCISE_MUTATION","Mutations_templateObject2","ADD_DATA_FIELD_TO_SET_MUTATION","Mutations_templateObject3","UPDATE_SET_COMPLETED_MUTATION","Mutations_templateObject4","compose","getExercise","_props$getExercise","Exercise","newField","setNewField","fields","onSubmit","e","preventDefault","find","elem","toast","html","Promise","all","addFieldToExercise","exerciseId","refetchQueries","addFieldToSet","setId","GET_SET_QUERY","_ref2$1$data$createSe","createSetDataField","dispatch","document","getElementById","components_TextInputField","target","disabled","reducer","action","objectSpread","defineProperty","Number","Error","GET_EXERCISE_QUERY","updateSetDataField","showAddField","setShowAddField","initialState","toConsumableArray","reduce","acc","field","_useReducer","useReducer","_useReducer2","entries","_ref3","_ref4","_ref4$","components_NumberInputField","previousSibling","classList","remove","res","handleBlur","CustomExerciseFieldInput","checkboxStyles","width","height","uncheckedStyles","border","checkedStyles","checkmarkStyles","fontSize","position","top","left","setCompleted","updateSetCompleted","getSetById","number","skip","Set","_useState3","_useState4","skipped","setSkipped","_useState5","_useState6","showExerciseDetails","setShowExerciseDetails","execute_set_Checkbox","execute_set_ExecuteSetFields","UPDATE_WORKOUT_COMPLETED_MUTATION","execute_workout_Mutations_templateObject","UPDATE_CONDITIONS_MUTATION","execute_workout_Mutations_templateObject2","getWorkoutById","conditions","Array","from","children","forEach","child","firstChild","nextSibling","nodeName","blur","updateConditions","keys","condition","updateUserDefinedDataForWorkout","updateUserDefinedDataForWorkout_templateObject","datum","_props$getWorkoutById","v","refetch","catch","handleSubmit","Modal","actions","content","labels","proceed","cancel","Collection","collapsible","header","items","collapsed","setCollapsed","match","params","user","done","setDone","skippedSets","setSkippedSets","modalText","nullConditions","incompleteSets","findIndex","s","everythingComplete","setEverythingComplete","c","formatModalText","updateSkippedSets","some","completeWorkout","updateWorkoutCompleted","String","setTimeout","history","push","execute_workout_WorkoutConditions","toLocaleDateString","execute_set_ExecuteSet","execute_workout_UserDefinedDataForWorkout","TextAreaField","Success","newProgram","SuccessWrapper","ADD_PROGRAM_TO_USER_MUTATION","create_program_Mutations_templateObject","CREATE_PROGRAM_MUTATION","create_program_Mutations_templateObject2","createProgram","addProgramToUser","setName","setDescription","setNewProgram","_useState7","_useState8","setLoading","_useState9","_useState10","success","setSuccess","_useState11","_useState12","addToUserPrograms","programsProgram","components_TextAreaField","Datepicker","inline","setDate","instance","init","querySelector","onSelect","newDate","getTime","defaultDate","setDefaultDate","destroy","deleteExercise","deleteExercise_templateObject","CREATE_WORKOUT_MUTATION","create_workout_Mutations_templateObject","CREATE_WORKOUT_FIELD_MUTATION","create_workout_Mutations_templateObject2","ADD_FIELD_TO_WORKOUT_MUTATION","create_workout_Mutations_templateObject3","DELETE_WORKOUT_DATA_FIELD_MUTATION","create_workout_Mutations_templateObject4","now","canceled","setCanceled","setWorkout","createWorkout","components_Datepicker","DELETE_EXERCISE_MUTATION","getUserById","setExercise","listVisible","setListVisible","exercises","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","updateExerciseName","updateExerciseName_templateObject","updateExerciseDescription","updateExerciseDescription_templateObject","getExerciseQuery","_props$data","react_contenteditable_default","textContent","CreateSetButtonsPanel","showForm","setShowForm","handleRemove","deleteField","createField","addFieldToWorkout","fieldId","createWorkoutData","create_workout_ExerciseDescription","create_set_CreateSetButtonsPanel","create_workout_ExerciseList","AddCustomDataToWorkout","CreateNewField","forwardedRef","ref","ExerciseFields","setFields","defaultFields","modalInput","useRef","removeField","f","previousElementSibling","current","create_exercise_Success","newExercise","CREATE_EXERCISE_MUTATION","create_exercise_Mutations_templateObject","CREATE_EXERCISE_FIELD_MUTATION","create_exercise_Mutations_templateObject2","ADD_EXERCISE_TO_USER_MUTATION","create_exercise_Mutations_templateObject3","ADD_FIELDS_TO_EXERCISE_MUTATION","create_exercise_Mutations_templateObject4","setNewExercise","_useState13","_useState14","goBack","createdExercise","createExercise","createdFields","toArray","slice","createExerciseField","addExerciseToUser","userid","addFieldsToExercise","CREATE_SET_MUTATION","create_set_Mutations_templateObject","_props$location$state","setNotes","numberOfSets","setNumberOfSets","ps","createSet","updatedFields","dropdownId","dropdownTriggers","querySelectorAll","instances","Dropdown","coverTrigger","constrainWidth","closeOnClick","setUpdateDateMode","tabIndex","carousel_Mutations_templateObject","RepeatWorkout","moment","valueOf","toString","clonedWorkoutData","x","unit","clonedSets","y","mutation","REPEAT_WORKOUT_MUTATION","repeatWorkout","deleteWorkout","deleteWorkout_templateObject","updateWorkoutDate_templateObject","updateWorkoutDate","peers","setPeers","updateDateMode","changeWorkoutDate","sort","p1","p2","format","DropdownCompleted","DropdownNotCompleted","p","carouselStyles","scrollSnapPointsY","scrollSnapType","overflowX","itemStyles","padding","minWidth","scrollSnapAlign","textAlign","buttonStyles","bottom","right","ownChildren","setOwnChildren","CarouselWorkout","getStartAndEndOfMonthAsUTC","month","year","daysInMonth","calInitState","calReducer","CalendarControls","_ref$state","flex","CalendarCell","_ref$date","numDays","isValidDate","currentMonth","currentYear","isPast","borderRadius","backgroundColor","calendar_CalendarModal","days","Calendar","firstDay","day","marginTop","dates","_loop","w","getDates","getWorkoutsByDate_templateObject","_useReducer2$","_getUTCDateRange","getUTCDateRange","_getUTCDateRange2","startDate","endDate","getWorkoutsByDate","error","allWorkouts","message","SIGNUP_USER","Signup_templateObject","withApollo","client","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setError","loggedIn","setLoggedIn","signupUser","setItem","token","includes","required","autoComplete","Form","buttonText","inputs","node","new","AUTHENTICATE_USER","Login_templateObject","emailInput","passwordInput","authenticateUser","Routes","path","Signup","Signin","exact","ExecuteWorkout","CreateProgram","SetupWorkout","CreateWorkout","CreateExercise","CreateSet","AllWorkouts","AllWorkoutsCalendar","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","React","ApolloClient","uri","request","operation","setContext","headers","authorization","App","dist","ErrorBoundary_ErrorBoundary","NavBar","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.015c96fd.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\n\nexport const conditionsFieldsFragment = gql`\n  fragment conditionsFields on Conditions {\n    id\n    sleep\n    nutrition\n    stress\n    dayOfCycle\n    selfAssessmentBefore\n    selfAssessmentAfter\n  }\n`\n\nexport default gql`\n  mutation updateConditions(\n    $sleep: Int\n    $nutrition: Int\n    $stress: Int\n    $dayOfCycle: Int\n    $selfAssessmentBefore: Int\n    $selfAssessmentAfter: Int\n    $workoutId: ID!\n  ) {\n    updateConditions(\n      sleep: $sleep\n      nutrition: $nutrition\n      stress: $stress\n      dayOfCycle: $dayOfCycle\n      selfAssessmentBefore: $selfAssessmentBefore\n      selfAssessmentAfter: $selfAssessmentAfter\n      workoutId: $workoutId\n    ) {\n      id\n      conditions {\n        ...conditionsFields\n      }\n    }\n  }\n  ${conditionsFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\n\nexport const exerciseFieldsFragment = gql`\n  fragment exerciseFields on Exercise {\n    id\n    name\n    description\n    fields {\n      id\n      name\n    }\n  }\n`\n\nexport default gql`\n  query GET_EXERCISE_QUERY($id: ID) {\n    Exercise(id: $id) {\n      ...exerciseFields\n    }\n  }\n  ${exerciseFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\nimport { exerciseFieldsFragment } from './getExercise'\n\nexport const setFieldsFragment = gql`\n  fragment setFields on Set {\n    id\n    number\n    data {\n      id\n      name\n      value\n    }\n    notes\n    exercise {\n      ...exerciseFields\n    }\n    completed\n    workout {\n      id\n    }\n  }\n  ${exerciseFieldsFragment}\n`\n\nexport default gql`\n  query GET_SET_QUERY($id: ID) {\n    Set(id: $id) {\n      ...setFields\n    }\n  }\n  ${setFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\nimport { conditionsFieldsFragment } from '../mutations/updateConditions'\nimport { setFieldsFragment } from './getSetById'\n\nexport const workoutFieldsFragment = gql`\n  fragment workoutFields on Workout {\n    completed\n    conditions {\n      ...conditionsFields\n    }\n    date\n    description\n    id\n    program {\n      id\n    }\n    sets {\n      ...setFields\n    }\n    user {\n      id\n    }\n    data {\n      id\n      name\n      value\n    }\n  }\n  ${conditionsFieldsFragment}\n  ${setFieldsFragment}\n`\n\nexport default gql`\n  query GET_WORKOUT_QUERY($id: ID) {\n    Workout(id: $id) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from './getWorkoutById'\nimport { exerciseFieldsFragment } from './getExercise'\n\nexport default gql`\n  query GET_USER_QUERY($id: ID) {\n    User(id: $id) {\n      id\n      name\n      # preferences {\n      #   trackCycle\n      # }\n      programs {\n        id\n        name\n        # startDate\n      }\n      workouts(orderBy: date_ASC) {\n        ...workoutFields\n      }\n      exercises {\n        ...exerciseFields\n      }\n    }\n  }\n  ${workoutFieldsFragment}\n  ${exerciseFieldsFragment}\n`\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { NavLink } from 'react-router-dom'\n\nimport GET_USER_QUERY from '../../graphql/queries/getUserById'\n\nexport default () => {\n  const id = localStorage.getItem('id')\n  if (!id) return null\n  return (\n    <Query query={GET_USER_QUERY} variables={{ id }}>\n      {({ loading, data: { User } }) => {\n        if (loading) return <span>loading....</span>\n        if (!User) return null\n        const currentProgram = User.programs[User.programs.length - 1]\n\n        return currentProgram ? (\n          renderLink(`Add a new workout to \"${currentProgram.name}\"`, {\n            User,\n            programId: currentProgram.id,\n          })\n        ) : (\n          <>\n            <li className='subheader section'>\n              Looks like you don't have any programs yet.\n            </li>\n            {renderLink('Create a standalone workout?', { User })}\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction renderLink(text, state) {\n  return (\n    <li className='section'>\n      <NavLink\n        className='sidenav-close'\n        to={{\n          pathname: '/create/setup',\n          state,\n        }}\n      >\n        {text}\n      </NavLink>\n    </li>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default () => {\n  const handleClick = () => {\n    localStorage.removeItem('id')\n    localStorage.removeItem('token')\n  }\n  return (\n    <li onClick={handleClick}>\n      <NavLink className='sidenav-close' to={'/signin'}>\n        Logout\n      </NavLink>\n    </li>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport M from 'materialize-css'\nimport './Navbar.css'\n\nimport WorkoutCreationLink from './WorkoutCreationLink'\nimport Logout from './Logout'\n\nexport default withRouter(props => {\n  const id = localStorage.getItem('id')\n\n  useEffect(() => {\n    M.AutoInit()\n  }, [props.location])\n\n  const links = [\n    { to: '/create/program', text: 'Start a new Program' },\n    { to: '/create/exercise', text: 'Create a new exercise' },\n    { to: '/workouts', text: 'My workouts' },\n  ]\n\n  return (\n    <nav className='nav-wrapper red darken-3 left-align'>\n      <div className='container'>\n        <NavLink to='/' className='brand-logo'>\n          Training Log\n        </NavLink>\n        {id && (\n          <>\n            <a\n              href='#!'\n              data-target='mobile-nav'\n              className='sidenav-trigger right show-on-large'\n            >\n              <i className='material-icons'>menu</i>\n            </a>\n\n            <ul className='sidenav grey lighten-3' id='mobile-nav'>\n              <li>\n                <div className='user-view grey darken-3 white-text z-depth-3'>\n                  <h4 className='center-align'>Main Menu</h4>\n                </div>\n              </li>\n              <WorkoutCreationLink userId={id} />\n              {links.map((link, i) => (\n                <li key={i} className='section'>\n                  <NavLink className='sidenav-close' to={link.to}>\n                    {link.text}\n                  </NavLink>\n                </li>\n              ))}\n              <Logout />\n            </ul>\n          </>\n        )}\n      </div>\n    </nav>\n  )\n})\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport default ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      const userId = localStorage.getItem('id')\n      return userId ? <Component {...props} userId={userId} /> : <Redirect to='/signin' />\n    }}\n  />\n)\n","export default function formatLabel(label) {\n  return label\n    .replace( /([A-Z])/g, ' $1' )\n    .replace( /^./, str => str.toUpperCase() )\n}","import { gql } from 'apollo-boost'\n\n\n const deleteSet = gql`\n  mutation ($id: ID!) {\n    deleteSet(id: $id) {\n      id\n    }\n  }\n`\n\nexport default deleteSet","import React from 'react'\nimport { graphql } from 'react-apollo'\nimport formatLabel from '../../../utils/formatInputLabel'\n\nimport deleteSet from '../../../graphql/mutations/deleteSet'\n\nfunction Set({ editable, set, setNumber, deleteSet, numSets, setNumSets }) {\n  const { data, notes } = set\n\n  const removeSet = id => {\n    deleteSet({\n      variables: { id },\n    }).then(() => setNumSets(numSets - 1), err => console.log(err))\n  }\n\n  const displayData = ({ id, name, value }) => {\n    if (value) {\n      return (\n        <div key={id} style={{ margin: '1rem' }}>\n          <p>{formatLabel(name)}:</p>\n          <p>{value}</p>\n        </div>\n      )\n    } else return null\n  }\n\n  return (\n    <li className='collection-item'>\n      <div className='row valign-wrapper'>\n        <div className='col s1'>{setNumber}</div>\n        <div className='col s10'>\n          <h6>{set.exercise.name}</h6>\n        </div>\n        <div className='col s1'>\n          {editable && (\n            <i className='material-icons' onClick={() => removeSet(set.id)}>\n              close\n            </i>\n          )}\n        </div>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexWrap: 'wrap',\n        }}\n      >\n        {data.map(displayData)}\n      </div>\n      <div className='row'>{notes && `Notes: ${notes}`}</div>\n    </li>\n  )\n}\n\nexport default graphql(deleteSet, { name: 'deleteSet' })(Set)\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst BALL_DIAMETER = '20px'\nconst BOUNCE_HEIGHT = 2\nconst SPREAD = 2\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 6rem;\n`\nconst Anchor = styled.div`\n  height: ${BALL_DIAMETER};\n  width: ${BALL_DIAMETER};\n  background: transparent;\n  position: relative;\n`\nconst bounce = keyframes`\n0%, 100% {\n  transform: translateY(calc(${BALL_DIAMETER} * ${BOUNCE_HEIGHT}));\n} \n50% {\n  transform: translateY(calc(${BALL_DIAMETER} * -${BOUNCE_HEIGHT}));\n}\n`\nconst colorize = keyframes`\n0%, 20% {\n  background: #ddd;\n}\n10% {\n  background: #c62828;\n}\n`\nconst Ball = styled.span`\n  display: block;\n  height: ${BALL_DIAMETER};\n  width: ${BALL_DIAMETER};\n  background: #ccc;\n  border-radius: 50%;\n  position: absolute;\n  top: 0;\n  transform-origin: center;\n  &:nth-child(1) {\n    left: calc(${BALL_DIAMETER} * -${SPREAD} * 2);\n    animation: ${bounce} 0.8s ease-in-out -0.2s infinite,\n      ${colorize} 0.8s ease-in-out -0.2s infinite;\n  }\n  &:nth-child(2) {\n    left: calc(${BALL_DIAMETER} * -${SPREAD});\n    animation: ${bounce} 0.8s ease-in-out -0.1s infinite,\n      ${colorize} 0.8s ease-in-out -0.1s infinite;\n  }\n  &:nth-child(3) {\n    animation: ${bounce} 0.8s ease-in-out 0s infinite,\n      ${colorize} 0.8s ease-in-out 0s infinite;\n  }\n  &:nth-child(4) {\n    left: calc(${BALL_DIAMETER} * ${SPREAD});\n    animation: ${bounce} 0.8s ease-in-out 0.1s infinite,\n      ${colorize} 0.8s ease-in-out 0.1s infinite;\n  }\n  &:nth-child(5) {\n    left: calc(${BALL_DIAMETER} * ${SPREAD} * 2);\n    animation: ${bounce} 0.8s ease-in-out 0.2s infinite,\n      ${colorize} 0.8s ease-in-out 0.2s infinite;\n  }\n`\n\nexport default () => (\n  <div className='container'>\n    <Wrapper>\n      <Anchor>\n        <Ball />\n        <Ball />\n        <Ball />\n        <Ball />\n        <Ball />\n      </Anchor>\n    </Wrapper>\n  </div>\n)\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\n\n// Components\nimport Set from './display_set/Set'\nimport Loader from '../../components/Loader'\n\nimport GET_WORKOUT_QUERY from '../../graphql/queries/getWorkoutById'\n\nfunction Workout(props) {\n  if (props.data.loading) return <Loader />\n\n  const { sets } = props.data.Workout\n  const [numSets, setNumSets] = useState(sets.length)\n\n  return (\n    <ul className='collection with-header z-depth-1'>\n      <li className='collection-header grey darken-3 white-text left-align'>\n        {!sets || sets.length === 0 ? 'No Sets Yet' : 'Workout:'}\n      </li>\n\n      {sets.map((set, idx) => (\n        <Set\n          editable={props.editable}\n          key={set.id}\n          set={set}\n          setNumber={idx + 1}\n          numSets={numSets}\n          setNumSets={setNumSets}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default graphql(GET_WORKOUT_QUERY, {\n  options: props => {\n    return {\n      variables: {\n        id: props.workoutId,\n      },\n    }\n  },\n})(Workout)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Workout from '../display_workout/Workout'\n\nexport default ({ workouts }) => {\n  const getWorkoutsForToday = workouts => {\n    return workouts.filter(workout => isToday(workout.date) && !workout.completed)\n\n    function isToday(date) {\n      date = new Date(+date)\n      const today = new Date()\n\n      return (\n        date.getDate() === today.getDate() &&\n        date.getMonth() === today.getMonth() &&\n        date.getFullYear() === today.getFullYear()\n      )\n    }\n  }\n\n  const workoutsForToday = getWorkoutsForToday(workouts)\n  const multiple = workoutsForToday.length > 1\n\n  return (\n    <>\n      {workoutsForToday.length ? (\n        <h3>Today's Workout{multiple && 's'}:</h3>\n      ) : (\n        <h5>No workout scheduled today</h5>\n      )}\n      {workoutsForToday.map(workout => (\n        <div className='card grey lighten-3' key={workout.id}>\n          <div className='card-content'>\n            <p>{workout.description}</p>\n            <Workout workoutId={workout.id} />\n          </div>\n          <div className='card-action'>\n            <Link to={`/workout/${workout.id}`}>Let's go!</Link>\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { useLastLocation } from 'react-router-last-location'\n\nimport TodaysWorkout from './TodaysWorkout'\nimport Loader from '../../components/Loader'\n\nimport GET_USER_QUERY from '../../graphql/queries/getUserById'\n\nexport default ({ userId: id }) => {\n  const lastLocation = useLastLocation()\n\n  return (\n    <Query query={GET_USER_QUERY} variables={{ id }}>\n      {({ loading, data: { User } }) => {\n        if (loading) return <Loader />\n        return (\n          <div className='container'>\n            <h1>\n              Welcome\n              {lastLocation && lastLocation.pathname === '/signup' ? ', ' : ' back, '}\n              {User.name}!\n            </h1>\n            <TodaysWorkout workouts={User.workouts || []} />\n          </div>\n        )\n      }}\n    </Query>\n  )\n}\n","import React from 'react'\n\n\nfunction NumberInputField({ defaultValue, icon, id, label, onChange, onBlur }) {\n  return (\n    <div className=\"input-field\">\n      {\n        icon &&\n        <i className=\"material-icons prefix\">{ icon }</i>\n      }\n      \n      <label htmlFor={ id }>{ label }</label>\n      <input\n        defaultValue={defaultValue}\n        type=\"number\"\n        id={ id }\n        onChange={onChange}\n        onBlur={onBlur}\n      >\n      </input>\n    </div>\n  )\n}\n\n\nexport default NumberInputField","import React from 'react'\n\n\nfunction TextInputField({ icon, id, label, onChange }) {\n  \n  return (\n    <div className=\"input-field\">\n      { \n        icon &&\n        <i className=\"material-icons prefix\">{ icon }</i>\n      }\n\n      <label htmlFor={ id }>{ label }</label>\n      \n      <input\n        id={ id }\n        type=\"text\"\n        onChange={ onChange }\n      >\n      </input>\n    </div>\n  )\n}\n\n\nexport default TextInputField","import { gql } from 'apollo-boost'\n\nexport const UPDATE_SET_DATA_FIELD_MUTATION = gql`\n  mutation UPDATE_SET_DATA_FIELD_MUTATION($id: ID!, $value: Float) {\n    updateSetDataField(id: $id, value: $value) {\n      id\n      name\n      value\n    }\n  }\n`\n\nexport const ADD_FIELD_TO_EXERCISE_MUTATION = gql`\n  mutation ADD_FIELD_TO_EXERCISE_MUTATION($exerciseId: ID!, $name: String!) {\n    createExerciseField(exerciseId: $exerciseId, name: $name) {\n      id\n      name\n      exercise {\n        id\n      }\n    }\n  }\n`\n\nexport const ADD_DATA_FIELD_TO_SET_MUTATION = gql`\n  mutation ADD_DATA_FIELD_TO_SET_MUTATION($setId: ID!, $name: String!) {\n    createSetDataField(setId: $setId, name: $name) {\n      id\n      name\n      set {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_SET_COMPLETED_MUTATION = gql`\n  mutation UPDATE_SET_COMPLETED_MUTATION($id: ID!, $completed: Boolean) {\n    updateSet(id: $id, completed: $completed) {\n      id\n      completed\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\nimport M from 'materialize-css'\n\n// Components\nimport TextInputField from '../../../components/TextInputField'\nimport Loader from '../../../components/Loader'\n\n// Queries\nimport {\n  ADD_FIELD_TO_EXERCISE_MUTATION,\n  ADD_DATA_FIELD_TO_SET_MUTATION,\n} from './Mutations'\nimport getExercise from '../../../graphql/queries/getExercise'\nimport GET_SET_QUERY from '../../../graphql/queries/getSetById'\n\nfunction AddCustomExerciseFields(props) {\n  const { loading, Exercise: exercise } = props.getExercise\n  if (loading) return <Loader />\n\n  const [newField, setNewField] = useState(null)\n  console.log('fields from CustomExerciseInput:', exercise.fields)\n  console.log('set from CustomExerciseInput:', props.set)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    // check for name duplication\n    if (exercise.fields.find(elem => elem.name === newField)) {\n      return M.toast({\n        html: `A field named \"${newField}\" already exists on this exercise! Please give your new field a unique name.`,\n      })\n    }\n    Promise.all([\n      props.addFieldToExercise({\n        variables: {\n          name: newField,\n          exerciseId: exercise.id,\n        },\n        refetchQueries: [{ query: getExercise, variables: { id: exercise.id } }],\n      }),\n      props.addFieldToSet({\n        variables: {\n          name: newField,\n          setId: props.set.id,\n        },\n        refetchQueries: [{ query: GET_SET_QUERY, variables: { id: props.set.id } }],\n      }),\n    ]).then(\n      ([\n        ,\n        {\n          data: {\n            createSetDataField: { name, id },\n          },\n        },\n      ]) => {\n        M.toast({\n          html: `Successfully created field: \"${name}!\"`,\n        })\n        setNewField(null)\n        props.dispatch({ type: 'NEW_FIELD', name, id })\n        document.getElementById('field-name').value = null\n      },\n      err => console.log(err)\n    )\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextInputField\n        id='field-name'\n        label='New field'\n        onChange={e => setNewField(e.target.value)}\n      />\n\n      {newField == null ? <button disabled>Save</button> : <button>Save</button>}\n    </form>\n  )\n}\n\nexport default withRouter(\n  compose(\n    graphql(ADD_FIELD_TO_EXERCISE_MUTATION, { name: 'addFieldToExercise' }),\n    graphql(ADD_DATA_FIELD_TO_SET_MUTATION, { name: 'addFieldToSet' }),\n    graphql(getExercise, {\n      options: props => {\n        return {\n          variables: {\n            id: props.set.exercise.id,\n          },\n        }\n      },\n      name: 'getExercise',\n    })\n  )(AddCustomExerciseFields)\n)\n","import React, { useReducer, useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport formatLabel from '../../../utils/formatInputLabel'\n\nimport NumberInputField from '../../../components/NumberInputField'\nimport CustomExerciseFieldInput from './CustomExerciseFieldInput'\n\nimport {\n  UPDATE_SET_DATA_FIELD_MUTATION,\n  // ADD_DATA_FIELD_TO_SET_MUTATION,\n} from './Mutations'\n// import GET_SET_QUERY from '../../../graphql/queries/getSetById'\nimport GET_EXERCISE_QUERY from './../../../graphql/queries/getExercise'\n\nfunction reducer(fields, action) {\n  switch (action.type) {\n    case 'UPDATE_VALUE':\n      return {\n        ...fields,\n        [action.name]: { ...fields[action.name], value: Number(action.value) },\n      }\n    case 'NEW_FIELD':\n      return {\n        ...fields,\n        [action.name]: { id: action.id, value: null },\n      }\n    default:\n      throw new Error('invalid action type on execute set fields reducer')\n  }\n}\n\nfunction ExecuteSetFields({ set, updateSetDataField, getExercise }) {\n  if (getExercise.loading) return null\n\n  const [showAddField, setShowAddField] = useState(false)\n  const initialState = [...getExercise.Exercise.fields, ...set.data].reduce(\n    (acc, field) => {\n      return {\n        ...acc,\n        [field.name]: { id: field.id, value: field.value },\n      }\n    },\n    {}\n  )\n\n  const [fields, dispatch] = useReducer(reducer, initialState)\n\n  const handleBlur = (e, { name, id, value }) => {\n    // gross, fix\n    e.target.value = null\n    e.target.previousSibling.classList.remove('active')\n\n    updateSetDataField({\n      variables: {\n        id,\n        value,\n      },\n    }).then(res => console.log(res), err => console.log(err))\n  }\n\n  return (\n    <>\n      {Object.entries(fields).map(([name, { id, value }]) => (\n        <NumberInputField\n          key={id}\n          id={name}\n          label={value ? `${formatLabel(name)}: ${value}` : formatLabel(name)}\n          onChange={e => dispatch({ type: 'UPDATE_VALUE', name, value: e.target.value })}\n          onBlur={e => handleBlur(e, { name, id, value })}\n        />\n      ))}\n      {showAddField && <CustomExerciseFieldInput dispatch={dispatch} set={set} />}\n      <i\n        className='align-right material-icons grey-text'\n        onClick={() => setShowAddField(!showAddField)}\n      >\n        {showAddField ? 'keyboard_arrow_up' : 'add'}\n      </i>\n    </>\n  )\n}\n\nexport default compose(\n  graphql(GET_EXERCISE_QUERY, {\n    name: 'getExercise',\n    options: props => {\n      return {\n        variables: {\n          id: props.set.exercise.id,\n        },\n      }\n    },\n  }),\n  // graphql(GET_SET_QUERY, { name: 'get set' }),\n  graphql(UPDATE_SET_DATA_FIELD_MUTATION, { name: 'updateSetDataField' })\n  // graphql(ADD_DATA_FIELD_TO_SET_MUTATION, { name: 'addDataFieldToSet' })\n)(ExecuteSetFields)\n","import React from 'react'\nimport { graphql } from 'react-apollo'\n\nimport { UPDATE_SET_COMPLETED_MUTATION } from './Mutations'\n\nconst checkboxStyles = {\n  width: '1.5rem',\n  height: '1.5rem',\n  margin: '0.5rem',\n}\n\nconst uncheckedStyles = {\n  border: '1px solid #c62828',\n  ...checkboxStyles,\n}\n\nconst checkedStyles = {\n  border: '1px solid #4caf50',\n  ...checkboxStyles,\n}\n\nconst checkmarkStyles = {\n  fontSize: '3rem',\n  position: 'relative',\n  top: '-1.25rem',\n  left: '-0.5rem',\n}\n\nconst Checkbox = ({ set, completed, setCompleted, updateSetCompleted }) => {\n  const { id } = set\n\n  const handleClick = () => {\n    updateSetCompleted({\n      variables: {\n        id,\n        completed: !completed,\n      },\n    }).then(() => setCompleted(!completed), err => console.log(err))\n  }\n\n  return (\n    <div\n      className='checkbox z-depth-2'\n      onClick={handleClick}\n      style={completed ? checkedStyles : uncheckedStyles}\n    >\n      {completed && (\n        <i className='material-icons green-text medium' style={checkmarkStyles}>\n          check\n        </i>\n      )}\n    </div>\n  )\n}\n\nexport default graphql(UPDATE_SET_COMPLETED_MUTATION, { name: 'updateSetCompleted' })(\n  Checkbox\n)\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport ExecuteSetFields from './ExecuteSetFields'\nimport Checkbox from './Checkbox'\n\n// Queries\nimport getSetById from '../../../graphql/queries/getSetById'\n\nfunction ExecuteSet({ set, getSetById, number, skip }) {\n  if (getSetById.loading) return null\n\n  const [completed, setCompleted] = useState(getSetById.Set.completed)\n  const [skipped, setSkipped] = useState(false)\n  const [showExerciseDetails, setShowExerciseDetails] = useState(false)\n\n  return (\n    <li className='collection-item'>\n      {skipped && (\n        <div\n          className='skipped-set grey-text text-darken-3'\n          onClick={() => {\n            setSkipped(false)\n            skip(set)\n          }}\n        >\n          -- Skipped --\n        </div>\n      )}\n\n      <div className='row valign-wrapper'>\n        <div className='col s2 pull-s1'>\n          {number}\n          <Checkbox set={set} completed={completed} setCompleted={setCompleted} />\n        </div>\n\n        <div className='col s9'>\n          <h6 onClick={() => setShowExerciseDetails(!showExerciseDetails)}>\n            {set.exercise.name}\n          </h6>\n        </div>\n\n        <div\n          className='col s1'\n          onClick={() => {\n            setSkipped(true)\n            skip(set)\n          }}\n        >\n          {!skipped && <i className='material-icons grey-text'>close</i>}\n        </div>\n      </div>\n\n      {showExerciseDetails && <div>{set.exercise.description}</div>}\n\n      <div className='row'>\n        <ExecuteSetFields set={set} />\n      </div>\n    </li>\n  )\n}\n\nexport default withRouter(\n  graphql(getSetById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.set.id,\n        },\n      }\n    },\n    name: 'getSetById',\n  })(ExecuteSet)\n)\n","import { gql } from 'apollo-boost'\n\nexport const UPDATE_WORKOUT_COMPLETED_MUTATION = gql`\n  mutation UPDATE_WORKOUT_COMPLETED_MUTATION($id: ID!, $completed: Boolean) {\n    updateWorkout(id: $id, completed: $completed) {\n      id\n      completed\n    }\n  }\n`\n\nexport const UPDATE_CONDITIONS_MUTATION = gql`\n  mutation UPDATE_CONDITIONS_MUTATION(\n    $id: ID!\n    $sleep: Int\n    $nutrition: Int\n    $stress: Int\n    $dayOfCycle: Int\n    $selfAssessmentBefore: Int\n    $selfAssessmentAfter: Int\n  ) {\n    updateConditions(\n      id: $id\n      sleep: $sleep\n      nutrition: $nutrition\n      stress: $stress\n      dayOfCycle: $dayOfCycle\n      selfAssessmentBefore: $selfAssessmentBefore\n      selfAssessmentAfter: $selfAssessmentAfter\n    ) {\n      id\n      sleep\n      nutrition\n      stress\n      dayOfCycle\n      selfAssessmentBefore\n      selfAssessmentAfter\n      workoutId {\n        id\n      }\n    }\n  }\n`\n","import React, { useEffect, useReducer } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport formatLabel from '../../utils/formatInputLabel'\n\n// Components\nimport NumberInputField from '../../components/NumberInputField'\n\n// Queries\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport { UPDATE_CONDITIONS_MUTATION } from './Mutations'\n\nfunction reducer(state, action) {\n  return {\n    ...state,\n    [action.type]: Number(action.value),\n  }\n}\n\nfunction WorkoutConditions(props) {\n  const { loading } = props.getWorkoutById\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  const { conditions } = props.getWorkoutById.Workout\n  const initialState = conditions\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    e.target.value = null\n    Array.from(e.target.children).forEach(child => {\n      const label = child.firstChild\n      const field = label.nextSibling\n      if (label && label.nodeName === 'LABEL') {\n        label.classList.remove('active')\n        field.blur()\n        field.value = null\n      }\n    })\n    props\n      .updateConditions({\n        variables: {\n          ...state,\n          id: props.workout.conditions.id,\n        },\n        refetchQueries: ['GET_WORKOUT_QUERY'],\n      })\n      .then(\n        res => {\n          console.log(res)\n        }, //props.setConditionsVisible(false),\n        err => console.log(err)\n      )\n  }\n\n  return (\n    <li className='collection-header grey darken-3 white-text'>\n      <form className='container' onSubmit={handleSubmit}>\n        {conditions &&\n          Object.keys(conditions)\n            .filter(name => name[0] !== '_' && name !== 'id')\n            .map((condition, i) => (\n              <NumberInputField\n                key={i}\n                label={\n                  conditions[condition]\n                    ? `${formatLabel(condition)}: ${conditions[condition]}`\n                    : formatLabel(condition)\n                }\n                id={condition}\n                onChange={e =>\n                  dispatch({\n                    type: condition,\n                    value: e.target.value,\n                  })\n                }\n              />\n            ))}\n\n        <button className='white-text'>Save</button>\n      </form>\n    </li>\n  )\n}\n\nexport default compose(\n  graphql(getWorkoutById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.workout.id,\n        },\n      }\n    },\n    name: 'getWorkoutById',\n  }),\n  graphql(UPDATE_CONDITIONS_MUTATION, { name: 'updateConditions' })\n)(WorkoutConditions)\n","import { gql } from 'apollo-boost'\n\n\nconst updateUserDefinedDataForWorkout = gql`\n  mutation ( $id: ID!, $datum: Float! ) {\n    updateUserDefinedDataForWorkout( id: $id, datum: $datum ) {\n      id\n      name\n      datum\n    }\n  }\n`\n\nexport default updateUserDefinedDataForWorkout","import React, { useEffect, useReducer } from 'react'\nimport { graphql, compose } from 'react-apollo'\n\n// Components\nimport NumberInputField from '../../components/NumberInputField'\n\n// Queries\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport updateUserDefinedDataForWorkout from '../../graphql/mutations/updateUserDefinedDataForWorkout'\n\nfunction reducer(state, action) {\n  return {\n    ...state,\n    [action.id]: { name: action.name, datum: Number(action.datum) },\n  }\n}\n\nfunction UserDefinedDataForWorkout(props) {\n  const { loading, Workout: workout } = props.getWorkoutById\n  if (loading) return <p>Loading...</p>\n\n  const { data } = workout\n  const initialState = data.reduce(\n    (a, v) => ({ ...a, [v.id]: { name: v.name, datum: v.datum } }),\n    {}\n  )\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    props.getWorkoutById.refetch().catch(err => console.log(err))\n  }, [])\n\n  const handleSubmit = (e, id) => {\n    e.preventDefault()\n    props\n      .updateUserDefinedDataForWorkout({\n        variables: {\n          id,\n          datum: state[id].datum,\n        },\n      })\n      .then(res => console.log(res), err => console.log(err))\n  }\n\n  return (\n    <li className='collection-header grey darken-3 white-text'>\n      {data.length ? 'Custom Fields:' : 'No custom fields'}\n\n      {!!data.length &&\n        data\n          .filter(name => name[0] !== '_')\n          .map(({ id, name, datum }) => (\n            <form className='container' onSubmit={e => handleSubmit(e, id)} key={id}>\n              <div className='row valign-wrapper'>\n                <div className='col s9 pull-s1'>\n                  <NumberInputField\n                    label={datum ? `${name}: ${datum}` : name}\n                    id={id}\n                    onChange={e =>\n                      dispatch({\n                        id,\n                        name,\n                        datum: e.target.value,\n                      })\n                    }\n                  />\n                </div>\n                <button className='white-text secondary-content'>Save</button>\n              </div>\n            </form>\n          ))}\n    </li>\n  )\n}\n\nexport default compose(\n  graphql(getWorkoutById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.workout.id,\n        },\n      }\n    },\n    name: 'getWorkoutById',\n  }),\n  graphql(updateUserDefinedDataForWorkout, { name: 'updateUserDefinedDataForWorkout' })\n)(UserDefinedDataForWorkout)\n","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\n\nexport default function Modal({ actions, content, id, labels }) {\n  useEffect(() => {\n    M.AutoInit()\n  }, [])\n\n  return (\n    <>\n      <div className=\"modal\" id={id}>\n        <div className=\"modal-content\">\n          { content }\n          <div className=\"modal-footer\">\n            <button\n              className=\"modal-close btn-flat\"\n              onClick={ actions.proceed }\n            >\n              {labels.proceed}\n            </button>\n            <button className=\"modal-close btn-flat\">{labels.cancel}</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\n\nexport default ({ collapsible, header, items }) => {\n  const [collapsed, setCollapsed] = useState(false)\n  return (\n    <ul className=\"collection with-header z-depth-1\">\n      <li className=\"collection-header grey darken-3 white-text left-align\">\n\n        {header}\n\n        { collapsible && \n          <i\n            className=\"material-icons secondary-content white-text\"\n            onClick={ () => setCollapsed(!collapsed) }\n          >\n\n            { collapsed\n              ? <i className=\"material-icons\">keyboard_arrow_up</i>\n              : <i className=\"material-icons\">keyboard_arrow_down</i>\n            }\n\n          </i>\n        }\n\n      </li>\n\n      { collapsible\n        ? collapsed\n          ? null\n          : items\n        : items\n      }  \n\n    </ul>\n  )\n}","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport ExecuteSet from './execute_set/ExecuteSet'\nimport WorkoutConditions from './WorkoutConditions'\nimport UserDefinedDataForWorkout from './UserDefinedDataForWorkout'\nimport Modal from '../../components/Modal(improved)'\nimport Collection from '../../components/Collection'\n\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport { UPDATE_WORKOUT_COMPLETED_MUTATION } from './Mutations'\n\n// Convert Conditions and UserDefinedData to be in drawers/tabs\n\nfunction ExecuteWokout(props) {\n  const { loading, Workout: workout } = props.getWorkoutById\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  console.log(workout)\n\n  const userId = workout.user.id\n  const [done, setDone] = useState(false)\n  const { sets, conditions } = workout\n  const [skippedSets, setSkippedSets] = useState([])\n  const date = new Date()\n\n  let modalText = null\n\n  const nullConditions = conditions\n    ? Object.keys(workout.conditions).filter(key => workout.conditions[key] === null)\n    : []\n\n  const incompleteSets = workout.sets\n    .filter(set => !set.completed)\n    .filter(set => skippedSets.findIndex(s => s.id === set.id) === -1)\n\n  const [everythingComplete, setEverythingComplete] = useState(\n    !nullConditions.length && !incompleteSets.length\n  )\n\n  if (!incompleteSets.length && !nullConditions.length) {\n    if (!everythingComplete) {\n      setEverythingComplete(true)\n    }\n  } else {\n    let text = {}\n    if (nullConditions.length) text.nullConditions = nullConditions\n    if (incompleteSets.length) text.incompleteSets = incompleteSets\n    if (everythingComplete) setEverythingComplete(false)\n    modalText = formatModalText(text)\n  }\n\n  const updateSkippedSets = set => {\n    if (skippedSets.some(s => s.id === set.id)) {\n      setSkippedSets(skippedSets.filter(s => s.id !== set.id))\n    } else {\n      setSkippedSets([...skippedSets, set])\n    }\n  }\n\n  const editWorkout = () => {\n    props.history.push({\n      pathname: `/create/workout/${workout.id}`,\n      state: {\n        userId,\n        from: `/workout/${workout.id}`,\n      },\n    })\n  }\n\n  const completeWorkout = () => {\n    props\n      .updateWorkoutCompleted({\n        variables: {\n          id: workout.id,\n          completed: true,\n          date: String(date),\n        },\n      })\n      .then(\n        res => {\n          setDone(true)\n          console.log('result:', res)\n          setTimeout(() => props.history.push('/workouts'), 750)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (!sets || !sets.length) {\n    return <div className='container'>There's nothing here!</div>\n  }\n  return (\n    <div className='container execute-workout-container'>\n      <Modal\n        actions={{ proceed: completeWorkout }}\n        content={modalText}\n        id='modal'\n        labels={{ proceed: 'Proceed', cancel: 'Cancel' }}\n      />\n\n      {done && (\n        <div className='execute-workout-complete'>\n          <i className='material-icons'>done_outline</i>\n        </div>\n      )}\n\n      <Collection\n        collapsible\n        header='Conditions:'\n        items={<WorkoutConditions workout={workout} />}\n      />\n\n      <Collection\n        header={\n          <>\n            <p>{date.toLocaleDateString('en-US')}</p>\n            <p>{workout.description}</p>\n          </>\n        }\n        items={\n          <>\n            {sets.map((set, idx) => (\n              <ExecuteSet\n                key={set.id}\n                number={idx + 1}\n                set={set}\n                skip={updateSkippedSets}\n              />\n            ))}\n            <UserDefinedDataForWorkout workout={workout} />\n          </>\n        }\n      />\n\n      <button className='btn-flat' onClick={editWorkout}>\n        Edit Workout\n      </button>\n\n      {everythingComplete ? (\n        <button className='btn-flat' onClick={completeWorkout}>\n          Complete Workout\n        </button>\n      ) : (\n        <button className='modal-trigger btn-flat' data-target='modal'>\n          Complete Workout\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default withRouter(\n  compose(\n    graphql(getWorkoutById, {\n      options: props => {\n        return {\n          variables: {\n            id: props.match.params.id,\n          },\n        }\n      },\n      name: 'getWorkoutById',\n    }),\n    graphql(UPDATE_WORKOUT_COMPLETED_MUTATION, { name: 'updateWorkoutCompleted' })\n  )(ExecuteWokout)\n)\n\nfunction formatModalText(modalText) {\n  return (\n    <div className='left-align'>\n      {modalText.nullConditions && (\n        <ul>\n          You haven't entered data for these conditions:\n          {modalText.nullConditions.map((c, i) => (\n            <li key={i}>{c}</li>\n          ))}\n        </ul>\n      )}\n      {modalText.incompleteSets && <p>Not all sets are complete!</p>}\n      <p>Are you sure you want to continue?</p>\n    </div>\n  )\n}\n","import React from 'react'\n\n\nfunction TextAreaField({ icon, id, label, onChange }) {\n  \n  return (\n    <div className=\"input-field\">\n      <i className=\"material-icons prefix\">{ icon || 'notes' }</i>\n      <label htmlFor={ id }>{ label }</label>\n      <textarea\n        className=\"materialize-textarea\"\n        id={ id }\n        onChange={ onChange }\n      >\n      </textarea>\n    </div>\n  )\n}\n\n\nexport default TextAreaField","import React from 'react'\n\nexport default ({ newProgram, setDone }) => (\n  <>\n    <h4>{newProgram.name}</h4>\n    <p>{newProgram.description}</p>\n  </>\n)\n","import React from 'react'\n\nexport default props => (\n  <div className='container'>\n    <div className='card grey darken-3'>\n      <div className='card-content white-text'>\n        <span className='card-title'>Success!</span>\n        {props.children}\n      </div>\n      <div className='card-action'>\n        <button className='btn-flat' onClick={props.setDone}>\n          Done\n        </button>\n      </div>\n    </div>\n  </div>\n)\n","import { gql } from 'apollo-boost'\n\nexport const ADD_PROGRAM_TO_USER_MUTATION = gql`\n  mutation ADD_PROGRAM_TO_USER_MUTATION($programId: ID!, $userId: ID!) {\n    addToUserPrograms(programsProgramId: $programId, userUserId: $userId) {\n      programsProgram {\n        id\n        name\n        description\n      }\n    }\n  }\n`\n\nexport const CREATE_PROGRAM_MUTATION = gql`\n  mutation CREATE_PROGRAM_MUTATION($name: String!, $description: String) {\n    createProgram(name: $name, description: $description) {\n      name\n      description\n      id\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { Redirect } from 'react-router-dom'\n\n// Components\nimport TextInputField from '../../components/TextInputField'\nimport TextAreaField from '../../components/TextAreaField'\nimport Loader from '../../components/Loader'\nimport Success from './Success'\nimport Wrapper from '../../components/SuccessWrapper'\n\n// Queries\n// import addProgram from '../../graphql/mutations/addProgram'\nimport { ADD_PROGRAM_TO_USER_MUTATION, CREATE_PROGRAM_MUTATION } from './Mutations'\n\nfunction CreateProgram({ createProgram, addProgramToUser, userId }) {\n  const [name, setName] = useState(null)\n  const [description, setDescription] = useState(null)\n  const [newProgram, setNewProgram] = useState(null)\n\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [done, setDone] = useState(false)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setLoading(true)\n\n    createProgram({\n      variables: {\n        name,\n        description,\n      },\n    })\n      .then(({ data: { createProgram: { id: programId } } }) => {\n        // console.log(res)\n        return addProgramToUser({\n          variables: {\n            userId,\n            programId, //: res.data.createProgram.id,\n          },\n        })\n      })\n      .then(\n        ({\n          data: {\n            addToUserPrograms: { programsProgram: newProgram },\n          },\n        }) => {\n          console.log(newProgram)\n          setLoading(false)\n          setNewProgram(newProgram)\n          setSuccess(true)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (done) return <Redirect to='/' />\n  if (loading) return <Loader />\n  if (success)\n    return (\n      <Wrapper setDone={setDone}>\n        <Success newProgram={newProgram} />\n      </Wrapper>\n    )\n  return (\n    <div className='container'>\n      <form onSubmit={handleSubmit}>\n        <TextInputField\n          id='program-name'\n          label='Give your new program a name:'\n          onChange={e => setName(e.target.value)}\n        />\n\n        <TextAreaField\n          id='program-description'\n          label='Describe your new program (optional):'\n          onChange={e => setDescription(e.target.value)}\n        />\n\n        <button className='btn red darken-3'>Create!</button>\n      </form>\n\n      {/* <button onClick={() => setDone(true)}>Home</button> */}\n    </div>\n  )\n}\n\nexport default compose(\n  graphql(CREATE_PROGRAM_MUTATION, { name: 'createProgram' }),\n  graphql(ADD_PROGRAM_TO_USER_MUTATION, { name: 'addProgramToUser' })\n)(CreateProgram)\n","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\n\nfunction Datepicker({ id, inline, label, setDate }) {\n  useEffect(() => {\n    //let elem = document.querySelector('.datepicker');\n    const instance = M.Datepicker.init(document.querySelector('.datepicker'), {\n      onSelect: newDate => setDate(String(newDate.getTime())),\n      defaultDate: new Date(),\n      setDefaultDate: true,\n    })\n\n    return () => instance.destroy()\n  }, [])\n\n  return (\n    <>\n      <div className='input-field' style={inline && { display: 'inline-block' }}>\n        <i className='material-icons prefix'>calendar_today</i>\n        <label htmlFor={id}>{label}</label>\n        <input className='datepicker' id={id} type='text' />\n      </div>\n    </>\n  )\n}\n\nexport default Datepicker\n","import { gql } from 'apollo-boost'\n\n\n const deleteExercise = gql`\n  mutation ($id: ID!) {\n    deleteExercise(id: $id) {\n      id\n      name\n    }\n  }\n`\n\nexport default deleteExercise","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from '../../graphql/queries/getWorkoutById'\n\nexport {\n  default as DELETE_EXERCISE_MUTATION,\n} from '../../graphql/mutations/deleteExercise'\n\nexport const CREATE_WORKOUT_MUTATION = gql`\n  mutation CREATE_WORKOUT_MUTATION(\n    $date: String!\n    $description: String\n    $userId: ID\n    $programId: ID\n  ) {\n    createWorkout(\n      date: $date\n      description: $description\n      userId: $userId\n      programId: $programId\n      conditions: {}\n    ) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n\nexport const CREATE_WORKOUT_FIELD_MUTATION = gql`\n  mutation CREATE_WORKOUT_FIELD_MUTATION($name: String!) {\n    createWorkoutData(name: $name) {\n      id\n      name\n      value\n    }\n  }\n`\n\nexport const ADD_FIELD_TO_WORKOUT_MUTATION = gql`\n  mutation ADD_FIELD_TO_WORKOUT_MUTATION($workoutId: ID!, $fieldId: ID!) {\n    addToDataOnWorkout(dataWorkoutDataId: $fieldId, workoutWorkoutId: $workoutId) {\n      workoutWorkout {\n        id\n        data {\n          id\n          name\n          value\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_WORKOUT_DATA_FIELD_MUTATION = gql`\n  mutation DELETE_WORKOUT_DATA_FIELD_MUTATION($id: ID!) {\n    deleteWorkoutData(id: $id) {\n      id\n      name\n      value\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\nimport { Redirect, withRouter } from 'react-router-dom'\n\n// Components\nimport Datepicker from '../../components/Datepicker'\nimport TextAreaField from '../../components/TextAreaField'\n\nimport { CREATE_WORKOUT_MUTATION } from './Mutations'\n\nfunction SetupWorkout(props) {\n  const [description, setDescription] = useState(null)\n  const [date, setDate] = useState(String(Date.now()))\n  const [canceled, setCanceled] = useState(false)\n  const [workout, setWorkout] = useState(null)\n\n  const { userId } = props\n  const { programId } = props.location.state\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    props\n      .createWorkout({\n        variables: {\n          date,\n          description,\n          userId,\n          programId: programId || null,\n        },\n      })\n      .then(\n        ({ data: { createWorkout: workout } }) => {\n          console.log(workout)\n          setWorkout(workout)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (canceled) {\n    return <Redirect to='/create' />\n  } else if (workout) {\n    return (\n      <Redirect\n        to={{\n          pathname: `/create/workout/${workout.id}`,\n          state: { userId, workout },\n        }}\n      />\n    )\n  }\n  return (\n    <div className='container'>\n      <form className='container' onSubmit={handleSubmit}>\n        <p>{props.programId}</p>\n\n        <Datepicker id='date' label='Date (defaults to today)' setDate={setDate} />\n\n        <TextAreaField\n          id='workout-description'\n          label='Description (optional)'\n          onChange={e => setDescription(e.target.value)}\n        />\n\n        <button className='btn red darken-3'>Let's Go!</button>\n      </form>\n\n      <div className='section'>\n        <button className='btn grey' onClick={() => setCanceled(true)}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(\n  graphql(CREATE_WORKOUT_MUTATION, { name: 'createWorkout' })(SetupWorkout)\n)\n","import React, { useState } from 'react'\nimport { compose, graphql } from 'react-apollo'\nimport M from 'materialize-css'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport '../../ListTransitions.css'\n\nimport Modal from '../../components/Modal(improved)'\n\nimport getUserById from '../../graphql/queries/getUserById'\nimport { DELETE_EXERCISE_MUTATION } from './Mutations'\n\nfunction ExerciseList({ data, setExercise, deleteExercise }) {\n  if (data.loading) {\n    return <p className='container'>Loading...</p>\n  }\n\n  const [listVisible, setListVisible] = useState(true)\n\n  const { exercises } = data.User\n\n  const displayExercise = exercise => (\n    <li className='collection-item' key={exercise.id}>\n      <span onClick={() => setExercise(exercise)}>{exercise.name}</span>\n      <i\n        className='material-icons secondary-content grey-text modal-trigger'\n        data-target={`delete-exercise-${exercise.id}-modal`}\n      >\n        remove\n      </i>\n\n      <Modal\n        id={`delete-exercise-${exercise.id}-modal`}\n        content={`Are you sure you want to delete \"${\n          exercise.name\n        }?\" This action will remove the exercise everywhere, and it cannot be undone.`}\n        actions={{ proceed: () => handleRemove(exercise.id) }}\n        labels={{ proceed: 'Delete', cancel: 'Cancel' }}\n      />\n    </li>\n  )\n\n  function handleRemove(id) {\n    deleteExercise({\n      variables: { id },\n      refetchQueries: ['GET_USER_QUERY'],\n    }).then(\n      ({\n        data: {\n          deleteExercise: { name },\n        },\n      }) => M.toast({ html: `Successfully deleted exercise \"${name}.\"` }),\n      err => console.log(err)\n    )\n  }\n\n  return (\n    <>\n      <ul className='collection with-header z-depth-1'>\n        <li className='collection-header grey darken-3 white-text left-align'>\n          Or Select an Exercise:\n          <span\n            className='secondary-content'\n            onClick={() => setListVisible(!listVisible)}\n          >\n            {listVisible ? (\n              <i className='material-icons white-text'>keyboard_arrow_up</i>\n            ) : (\n              <i className='material-icons white-text'>keyboard_arrow_down</i>\n            )}\n          </span>\n        </li>\n        <ReactCSSTransitionGroup\n          transitionName='list-transition'\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {listVisible && exercises.map(displayExercise)}\n        </ReactCSSTransitionGroup>\n      </ul>\n    </>\n  )\n}\n\nexport default compose(\n  graphql(DELETE_EXERCISE_MUTATION, { name: 'deleteExercise' }),\n  graphql(getUserById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.userId,\n        },\n      }\n    },\n  })\n)(ExerciseList)\n","import { gql } from 'apollo-boost'\n\n\nconst updateExerciseName = gql`\n  mutation ($name: String!, $id: ID!) {\n    updateExerciseName(name: $name, id: $id) {\n      name\n      id\n      description\n    }\n  }\n`\n\nexport default updateExerciseName","import { gql } from 'apollo-boost'\n\n\nconst updateExerciseDescription = gql`\n  mutation ($description: String!, $id: ID!) {\n    updateExerciseDescription(description: $description, id: $id) {\n      name\n      id\n      description\n    }\n  }\n`\n\nexport default updateExerciseDescription","import React from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport ContentEditable from 'react-contenteditable'\nimport Loader from '../../components/Loader'\n\n// Queries\nimport getExerciseQuery from '../../graphql/queries/getExercise'\nimport updateExerciseName from '../../graphql/mutations/updateExerciseName'\nimport updateExerciseDescription from '../../graphql/mutations/updateExerciseDescription'\n\nfunction ExerciseDescription(props) {\n  const { loading, Exercise: exercise } = props.data\n  if (loading) return <Loader />\n\n  const handleNameBlur = e => {\n    props\n      .updateExerciseName({\n        variables: {\n          name: e.target.textContent,\n          id: props.exerciseId,\n        },\n        refetchQueries: ['GET_USER_QUERY'],\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleDescriptionBlur = e => {\n    props\n      .updateExerciseDescription({\n        variables: {\n          description: e.target.textContent,\n          id: props.exerciseId,\n        },\n        refetchQueries: ['GET_USER_QUERY'],\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div className='card grey lighten-3'>\n      <div className='card-content'>\n        {exercise ? (\n          <>\n            <ContentEditable\n              className='card-title'\n              onBlur={handleNameBlur}\n              html={exercise.name}\n            />\n\n            <ContentEditable\n              onBlur={handleDescriptionBlur}\n              html={exercise.description || ''}\n            />\n          </>\n        ) : (\n          <div className='card-title'>Loading...</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default compose(\n  graphql(getExerciseQuery, {\n    options: props => {\n      return {\n        variables: {\n          id: props.exerciseId,\n        },\n      }\n    },\n  }),\n  graphql(updateExerciseName, { name: 'updateExerciseName' }),\n  graphql(updateExerciseDescription, { name: 'updateExerciseDescription' })\n)(ExerciseDescription)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nfunction CreateSetButtonsPanel({ setNumber, workout, exercise, setExercise }) {\n  return (\n    <div className=\"card grey lighten-3\">\n      <div className=\"card-action\">\n\n        <Link to={{\n          pathname: '/create/set',\n          state: { exercise, setNumber, workout }\n        }}>Create a set</Link>\n        {/* <button\n          // className=\"waves-effect waves-light btn-small grey darken-3\"\n          onClick={ () => setCreateSet(true) }\n        >\n          Create a set\n        </button> */}\n        <button \n          // className=\"waves-effect waves-light btn-small grey darken-3\"\n          onClick={ () => setExercise(null) }\n        >\n          Close description\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateSetButtonsPanel","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport '../../ListTransitions.css'\n\n// Components\nimport TextInputField from '../../components/TextInputField'\nimport Loader from '../../components/Loader'\n\nimport {\n  CREATE_WORKOUT_FIELD_MUTATION,\n  ADD_FIELD_TO_WORKOUT_MUTATION,\n  DELETE_WORKOUT_DATA_FIELD_MUTATION,\n} from './Mutations'\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\n\nfunction AddCustomFieldsToWorkout(props) {\n  const [newField, setNewField] = useState(null)\n  const [showForm, setShowForm] = useState(false)\n\n  const { loading, Workout: workout } = props.getWorkoutById\n  if (loading) {\n    return <Loader />\n  }\n  const fields = workout.data\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    props\n      .createField({\n        variables: {\n          name: newField,\n        },\n      })\n      .then(res => {\n        console.log(res)\n        return props.addFieldToWorkout({\n          variables: {\n            fieldId: res.data.createWorkoutData.id,\n            workoutId: workout.id,\n          },\n          refetchQueries: ['GET_WORKOUT_QUERY'],\n        })\n      })\n      .then(\n        res => {\n          console.log(res)\n          document.getElementById('field-name').value = null\n        },\n        err => console.log(err)\n      )\n  }\n\n  const handleRemove = e => {\n    props\n      .deleteField({\n        variables: {\n          id: e.target.id,\n        },\n        refetchQueries: ['GET_WORKOUT_QUERY'],\n      })\n      .then(res => console.log('deleted:', res), err => console.log(err))\n  }\n\n  return (\n    <>\n      <ul className='collection with-header z-depth-1'>\n        <li className='collection-header grey darken-3 white-text left-align'>\n          {fields && fields.length\n            ? 'Custom fields for this workout:'\n            : 'No custom fields for this workout'}\n\n          <i\n            className='material-icons secondary-content white-text'\n            onClick={() => setShowForm(!showForm)}\n          >\n            {showForm ? 'keyboard_arrow_up' : 'add'}\n          </i>\n\n          {showForm && (\n            <>\n              <form onSubmit={handleSubmit}>\n                <TextInputField\n                  id='field-name'\n                  label='Name'\n                  onChange={e => setNewField(e.target.value)}\n                />\n\n                <button className='btn-flat white-text'>Save</button>\n              </form>\n            </>\n          )}\n        </li>\n        <ReactCSSTransitionGroup\n          transitionName='list-transition'\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {fields &&\n            fields.map(field => (\n              <li className='collection-item' key={field.id}>\n                {field.name}\n                <i\n                  id={field.id}\n                  className='material-icons secondary-content grey-text'\n                  onClick={handleRemove}\n                >\n                  remove\n                </i>\n              </li>\n            ))}\n        </ReactCSSTransitionGroup>\n      </ul>\n    </>\n  )\n}\n\nexport default compose(\n  graphql(CREATE_WORKOUT_FIELD_MUTATION, { name: 'createField' }),\n  graphql(ADD_FIELD_TO_WORKOUT_MUTATION, { name: 'addFieldToWorkout' }),\n  graphql(DELETE_WORKOUT_DATA_FIELD_MUTATION, { name: 'deleteField' }),\n  graphql(getWorkoutById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.workout.id,\n        },\n      }\n    },\n    name: 'getWorkoutById',\n  })\n)(AddCustomFieldsToWorkout)\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter, Link, Redirect } from 'react-router-dom'\n\n// Components\nimport ExerciseList from './ExerciseList'\nimport ExerciseDescription from './ExerciseDescription'\nimport CreateSetButtonsPanel from './create_set/CreateSetButtonsPanel'\nimport Workout from '../display_workout/Workout'\n\nimport getUserById from '../../graphql/queries/getUserById'\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport AddCustomFieldsToWorkout from './AddCustomDataToWorkout'\n\nfunction CreateWorkout(props) {\n  if (props.getUserById.loading || props.getWorkoutById.loading) {\n    return null\n  }\n\n  //console.log(props)\n  const [exercise, setExercise] = useState(props.location.state.exercise)\n  const [done, setDone] = useState(false)\n  const { Workout: workout } = props.getWorkoutById\n  const { userId } = props\n\n  if (done) {\n    if (props.location.state.from === `/workout/${workout.id}`) {\n      return <Redirect to={`/workout/${workout.id}`} />\n    }\n    return <Redirect to='/workouts' />\n  }\n  // return null\n  return (\n    <div className='container'>\n      <Workout editable workoutId={workout.id} />\n\n      {exercise && (\n        <>\n          <ExerciseDescription exerciseId={exercise.id} />\n          <CreateSetButtonsPanel\n            setExercise={setExercise}\n            exercise={exercise}\n            setNumber={workout.sets ? workout.sets.length : 0}\n            workout={workout}\n          />\n        </>\n      )}\n\n      <ul className='collection with-header z-depth-1'>\n        <li className='collection-header grey darken-3 white-text left-align'>\n          <Link\n            to={{\n              pathname: '/create/exercise',\n              state: { userId, workout },\n            }}\n          >\n            Create a new exercise\n          </Link>\n          <span className='secondary-content'>\n            <i className='material-icons white-text'>create</i>\n          </span>\n        </li>\n      </ul>\n\n      <ExerciseList userId={userId} setExercise={setExercise} />\n\n      <AddCustomFieldsToWorkout workout={workout} />\n\n      <button onClick={() => setDone(true)}>Done</button>\n    </div>\n  )\n}\n\nexport default withRouter(\n  compose(\n    graphql(getUserById, {\n      options: props => {\n        return {\n          variables: {\n            id: props.location.state.userId,\n          },\n        }\n      },\n      name: 'getUserById',\n    }),\n    graphql(getWorkoutById, {\n      options: props => {\n        return {\n          variables: {\n            id: props.match.params.id,\n          },\n        }\n      },\n      name: 'getWorkoutById',\n    })\n  )(CreateWorkout)\n)\n","import React from 'react'\n\nexport default ({ setNewField, forwardedRef }) => (\n  <>\n    <label htmlFor='name'>Name your custom field:</label>\n    <input type='text' ref={forwardedRef} onChange={e => setNewField(e.target.value)} />\n  </>\n)\n","import React, { useState, useRef } from 'react'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport '../../ListTransitions.css'\n\nimport Modal from '../../components/Modal(improved)'\nimport ModalContent from './CreateNewField'\n\nexport default ({ fields, setFields, defaultFields }) => {\n  const [newField, setNewField] = useState(null)\n  const modalInput = useRef(null)\n\n  const removeField = e => {\n    e.preventDefault()\n    setFields(fields.filter(f => f !== e.target.previousElementSibling.textContent))\n  }\n\n  const addField = e => {\n    e.preventDefault()\n    setFields([...fields, newField])\n    setNewField(null)\n    modalInput.current.value = null\n  }\n\n  const resetFields = e => {\n    e.preventDefault()\n    setFields(defaultFields)\n  }\n\n  return (\n    <div className='section'>\n      <ul className='container'>\n        <ReactCSSTransitionGroup\n          transitionName='list-transition'\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          <li className='row flow-text'>Fields to track for this exercise:</li>\n          {fields.map(field => (\n            <li key={field} className='row valign-wrapper'>\n              <span className='col s1'>-</span>\n              <span className='col s10 left-align'>{field}</span>\n              <i className='material-icons grey-text col s1' onClick={removeField}>\n                remove_circle_outline\n              </i>\n            </li>\n          ))}\n        </ReactCSSTransitionGroup>\n        <li className='row valign-wrapper'>\n          <span className='col s1'>-</span>\n          <span\n            className='col s10 left-align btn-flat modal-trigger'\n            data-target='new-field-modal'\n          >\n            Add custom field\n          </span>\n          <i className='material-icons grey-text col s1' onClick={resetFields}>\n            undo\n          </i>\n          {/* <button className='btn-flat'>Reset defaults</button> */}\n        </li>\n      </ul>\n\n      <Modal\n        id='new-field-modal'\n        actions={{ proceed: addField }}\n        content={<ModalContent setNewField={setNewField} forwardedRef={modalInput} />}\n        labels={{ proceed: 'Save', cancel: 'Cancel' }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ newExercise }) => (\n  <>\n    <h4>{newExercise.name}</h4>\n    <p>{newExercise.description}</p>\n    <ul>\n      {newExercise.fields.map(field => (\n        <li key={field}>{field}</li>\n      ))}\n    </ul>\n  </>\n)\n","import { gql } from 'apollo-boost'\n\nexport const CREATE_EXERCISE_MUTATION = gql`\n  mutation CREATE_EXERCISE_MUTATION($name: String!, $description: String) {\n    createExercise(name: $name, description: $description) {\n      name\n      description\n      id\n    }\n  }\n`\n\nexport const CREATE_EXERCISE_FIELD_MUTATION = gql`\n  mutation CREATE_EXERCISE_FIELD_MUTATION($name: String!) {\n    createExerciseField(name: $name) {\n      name\n      id\n    }\n  }\n`\n\nexport const ADD_EXERCISE_TO_USER_MUTATION = gql`\n  mutation ADD_EXERCISE_TO_USER_MUTATION($userId: ID!, $exerciseId: ID!) {\n    addToUserExercises(exercisesExerciseId: $exerciseId, userUserId: $userId) {\n      userUser {\n        name\n        id\n      }\n      exercisesExercise {\n        name\n        id\n      }\n    }\n  }\n`\n\nexport const ADD_FIELDS_TO_EXERCISE_MUTATION = gql`\n  mutation ADD_FIELDS_TO_EXERCISE_MUTATION($fieldId: ID!, $exerciseId: ID!) {\n    addToExerciseFieldsOnExercise(\n      fieldsExerciseFieldId: $fieldId\n      exerciseExerciseId: $exerciseId\n    ) {\n      exerciseExercise {\n        name\n        id\n      }\n      fieldsExerciseField {\n        name\n        id\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport TextInputField from '../../components/TextInputField'\nimport TextAreaField from '../../components/TextAreaField'\nimport ExerciseFields from './ExerciseFields'\nimport Loader from '../../components/Loader'\nimport Success from './Success'\nimport Wrapper from '../../components/SuccessWrapper'\n\nimport {\n  CREATE_EXERCISE_MUTATION,\n  CREATE_EXERCISE_FIELD_MUTATION,\n  ADD_EXERCISE_TO_USER_MUTATION,\n  ADD_FIELDS_TO_EXERCISE_MUTATION,\n} from './Mutations'\n\nfunction CreateExercise(props) {\n  const [name, setName] = useState(null)\n  const [description, setDescription] = useState(null)\n  const [newExercise, setNewExercise] = useState(null)\n  const defaultFields = ['Reps', 'Weight', 'Time']\n  const [fields, setFields] = useState(defaultFields)\n\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [done, setDone] = useState(false)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    console.log('submitting')\n    setLoading(true)\n    // create new exercise && create new exercise fields\n    const createdExercise = props.createExercise({\n      variables: {\n        name,\n        description,\n      },\n    })\n\n    const createdFields = fields.map(field =>\n      props.createField({\n        variables: {\n          name: field,\n        },\n      })\n    )\n\n    Promise.all([createdExercise, ...createdFields])\n      .then(\n        // link fields to exercise && link exercise to user\n        ([\n          {\n            data: { createExercise: exercise },\n          },\n          ...fields\n        ]) => {\n          setNewExercise({\n            name: exercise.name,\n            description: exercise.description,\n            fields: fields.map(f => f.data.createExerciseField.name),\n          })\n          return Promise.all([\n            props.addExerciseToUser({\n              variables: {\n                exerciseId: exercise.id,\n                userid: props.userId,\n              },\n            }),\n            ...fields.map(({ data: { createExerciseField: field } }) =>\n              props.addFieldsToExercise({\n                variables: {\n                  fieldId: field.id,\n                  exerciseId: exercise.id,\n                },\n              })\n            ),\n          ])\n        }\n      )\n      .then(\n        res => {\n          setLoading(false)\n          setSuccess(true)\n          console.log(newExercise)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (done) {\n    props.history.goBack()\n    return null\n  }\n  if (loading) return <Loader />\n  if (success)\n    return (\n      <Wrapper setDone={setDone}>\n        <Success newExercise={newExercise} />\n      </Wrapper>\n    )\n  else {\n    return (\n      <>\n        <form className='container' onSubmit={handleSubmit}>\n          <TextInputField\n            id='exercise-name'\n            label='Name'\n            onChange={e => setName(e.target.value)}\n          />\n\n          <TextAreaField\n            id='exercise-description'\n            label='Description (optional)'\n            onChange={e => setDescription(e.target.value)}\n          />\n\n          <ExerciseFields\n            fields={fields}\n            setFields={setFields}\n            defaultFields={defaultFields}\n          />\n          <button type='submit' className='btn red darken-3'>\n            Save\n          </button>\n        </form>\n\n        <div className='section'>\n          <button className='btn grey' onClick={() => setDone(true)}>\n            Cancel\n          </button>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(\n  compose(\n    graphql(CREATE_EXERCISE_MUTATION, { name: 'createExercise' }),\n    graphql(CREATE_EXERCISE_FIELD_MUTATION, { name: 'createField' }),\n    graphql(ADD_EXERCISE_TO_USER_MUTATION, { name: 'addExerciseToUser' }),\n    graphql(ADD_FIELDS_TO_EXERCISE_MUTATION, { name: 'addFieldsToExercise' })\n  )(CreateExercise)\n)\n","import { gql } from 'apollo-boost'\n\nexport const CREATE_SET_MUTATION = gql`\n  mutation CREATE_SET_MUTATION(\n    $number: Int!\n    $data: [SetdataSetDataField!]\n    $notes: String\n    $exerciseId: ID!\n    $workoutId: ID!\n  ) {\n    createSet(\n      number: $number\n      notes: $notes\n      exerciseId: $exerciseId\n      workoutId: $workoutId\n      data: $data\n    ) {\n      id\n      data {\n        id\n        name\n        value\n      }\n      number\n      notes\n      workout {\n        id\n      }\n      exercise {\n        id\n        name\n        description\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\nimport { withRouter, Redirect } from 'react-router-dom'\n\n// Components\nimport ExerciseDescription from '../ExerciseDescription'\nimport NumberInputField from '../../../components/NumberInputField'\nimport TextAreaField from '../../../components/TextAreaField'\n\nimport { CREATE_SET_MUTATION } from './Mutations'\n\nfunction CreateSet(props) {\n  const { exercise, setNumber, workout } = props.location.state\n\n  const [notes, setNotes] = useState(null)\n  const [fields, setFields] = useState(exercise.fields)\n  const [numberOfSets, setNumberOfSets] = useState(1)\n  const [done, setDone] = useState(false)\n\n  if (done) {\n    return (\n      <Redirect\n        to={{\n          pathname: `/create/workout/${workout.id}`,\n          state: { workout },\n        }}\n      />\n    )\n  }\n\n  function displayFields() {\n    return fields.map(({ name, id }, idx) => (\n      <div key={id}>\n        <NumberInputField\n          key={id}\n          id={`${name}-field`}\n          label={`${name} (optional)`}\n          onChange={e => {\n            const updatedFields = [...fields]\n            updatedFields[idx].value = Number(e.target.value)\n            setFields(updatedFields)\n          }}\n        />\n      </div>\n    ))\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    const ps = []\n    const data = fields.map(({ name, value }) => {\n      return { name, value }\n    })\n    for (let i = 0; i < numberOfSets; i++) {\n      ps[i] = props.createSet({\n        variables: {\n          number: setNumber + i + 1,\n          data,\n          notes,\n          exerciseId: exercise.id,\n          workoutId: workout.id,\n        },\n      })\n    }\n\n    Promise.all(ps).then(() => setDone(true), err => console.log(err))\n  }\n\n  return (\n    <div className='container'>\n      <ExerciseDescription exerciseId={exercise.id} />\n\n      <form className='container' onSubmit={handleSubmit}>\n        {displayFields()}\n\n        <TextAreaField\n          id='notes-field'\n          label='Notes (optional)'\n          onChange={e => setNotes(e.target.value)}\n        />\n\n        <div className='row valign-wrapper'>\n          <div className='col s2 pull-s1'>\n            <button>Create</button>\n          </div>\n          <div className='col s2 pull-s4'>\n            <NumberInputField\n              defaultValue={numberOfSets}\n              id='number-of-sets-field'\n              onChange={e => setNumberOfSets(e.target.value)}\n            />\n          </div>\n        </div>\n      </form>\n\n      <button onClick={() => setDone(true)}>Cancel</button>\n    </div>\n  )\n}\n\nexport default withRouter(graphql(CREATE_SET_MUTATION, { name: 'createSet' })(CreateSet))\n","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\nimport { withRouter } from 'react-router-dom'\n\nconst Dropdown = ({ workout, actions, history }) => {\n  const { id } = workout\n  const dropdownId = `dropdown-${id}`\n\n  useEffect(() => {\n    const dropdownTriggers = document.querySelectorAll('.dropdown-trigger')\n    const instances = M.Dropdown.init(dropdownTriggers, {\n      coverTrigger: false,\n      constrainWidth: false,\n      closeOnClick: false,\n    })\n    return () => instances.forEach(i => i.destroy())\n  }, [])\n\n  return (\n    <>\n      <i\n        className='dropdown-trigger material-icons secondary-content grey-text'\n        data-target={dropdownId}\n      >\n        arrow_drop_down_circle\n      </i>\n\n      <ul id={dropdownId} className='dropdown-content grey-text'>\n        <li onClick={() => history.push(`/workout/${id}`)}>Let's do this</li>\n\n        <li onClick={() => actions.setUpdateDateMode(true)}>Change date</li>\n\n        <li className='divider' tabIndex='-1' />\n        <li>Save as template (coming soon)</li>\n\n        <li className='divider' tabIndex='-1' />\n        <li>\n          <i className='material-icons grey-text modal-trigger' data-target={id}>\n            delete\n          </i>\n        </li>\n      </ul>\n    </>\n  )\n}\n\nexport default withRouter(Dropdown)\n","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from '../../graphql/queries/getWorkoutById'\n\nexport default gql`\n  mutation REPEAT_WORKOUT_MUTATION(\n    $date: String!\n    $description: String\n    $userId: ID\n    $programId: ID\n    $data: [WorkoutdataWorkoutData!]\n    $sets: [WorkoutsetsSet!]\n  ) {\n    createWorkout(\n      date: $date\n      description: $description\n      userId: $userId\n      programId: $programId\n      sets: $sets\n      data: $data\n      conditions: {}\n    ) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\nimport moment from 'moment'\n\nimport REPEAT_WORKOUT_MUTATION from './Mutations'\n\nexport default ({ workout, history }) => {\n  const date = moment()\n    .valueOf()\n    .toString()\n\n  const clonedWorkoutData = workout.data.map(x => ({\n    name: x.name,\n    value: x.value,\n    unit: x.unit,\n  }))\n\n  const clonedSets = workout.sets.map(x => ({\n    number: x.number,\n    notes: x.notes,\n    completed: false,\n    exerciseId: x.exercise.id,\n    data: x.data.map(y => ({ name: y.name, value: y.value })),\n  }))\n\n  return (\n    <Mutation mutation={REPEAT_WORKOUT_MUTATION}>\n      {repeatWorkout => (\n        <span\n          onClick={() => {\n            repeatWorkout({\n              variables: {\n                date,\n                description: workout.description,\n                userId: workout.user.id,\n                programId: null, // get current program\n                data: clonedWorkoutData,\n                sets: clonedSets,\n              },\n            }).then(\n              ({\n                data: {\n                  createWorkout: { id },\n                },\n              }) => history.push(`/workout/${id}`),\n              err => console.log(err)\n            )\n          }}\n        >\n          Repeat this workout\n        </span>\n      )}\n    </Mutation>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport M from 'materialize-css'\nimport RepeatWorkout from './RepeatWorkout'\n\nexport default withRouter(({ workout, history }) => {\n  const dropdownId = `dropdown-${workout.id}`\n\n  useEffect(() => {\n    const dropdownTriggers = document.querySelectorAll('.dropdown-trigger')\n    const instances = M.Dropdown.init(dropdownTriggers, {\n      coverTrigger: false,\n      constrainWidth: false,\n      closeOnClick: false,\n    })\n    return () => instances.forEach(i => i.destroy())\n  }, [])\n\n  return (\n    <>\n      <i\n        className='dropdown-trigger material-icons secondary-content green-text'\n        data-target={dropdownId}\n      >\n        check\n      </i>\n\n      <ul id={dropdownId} className='dropdown-content grey-text'>\n        <RepeatWorkout workout={workout} history={history} />\n\n        <li className='divider' tabIndex='-1' />\n        <li>Save as template</li>\n      </ul>\n    </>\n  )\n})\n","import { gql } from 'apollo-boost'\n\n\n const deleteWorkout = gql`\n  mutation ($id: ID!) {\n    deleteWorkout(id: $id) {\n      id\n    }\n  }\n`\n\nexport default deleteWorkout","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from '../queries/getWorkoutById'\n\nexport default gql`\n  mutation UPDATE_WORKOUT_DATE_MUTATION($id: ID!, $date: String!) {\n    updateWorkout(id: $id, date: $date) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport moment from 'moment'\n\nimport Modal from '../../components/Modal(improved)'\nimport Workout from '../display_workout/Workout'\nimport DropdownNotCompleted from './DropdownNotCompleted'\nimport DropdownCompleted from './DropdownCompleted'\nimport Datepicker from '../../components/Datepicker'\n\nimport deleteWorkout from '../../graphql/mutations/deleteWorkout'\nimport getUserById from '../../graphql/queries/getUserById'\nimport updateWorkoutDate from '../../graphql/mutations/updateWorkoutDate'\n\nfunction WorkoutScheduled({\n  workout,\n  deleteWorkout,\n  peers,\n  setPeers,\n  updateWorkoutDate,\n}) {\n  const [date, setDate] = useState(workout.date)\n  const [updateDateMode, setUpdateDateMode] = useState(false)\n\n  const removeWorkout = id => {\n    deleteWorkout({\n      variables: { id },\n      refetchQueries: ['GET_USER_QUERY'],\n    }).then(\n      ({ data: { deleteWorkout } }) => {\n        console.log('deleted:', deleteWorkout)\n        setPeers(peers.filter(p => p.id !== deleteWorkout.id))\n      },\n      err => console.log(err)\n    )\n  }\n\n  const changeWorkoutDate = (id, date) => {\n    updateWorkoutDate({\n      variables: {\n        id,\n        date,\n      },\n      refetchQueries: [{ query: getUserById }],\n    }).then(\n      res => {\n        console.log(res)\n        setDate(date)\n        setUpdateDateMode(false)\n        setPeers(peers.sort((p1, p2) => Number(p1.date) - Number(p2.date)))\n        console.log(peers)\n      },\n      err => console.log(err)\n    )\n  }\n\n  return (\n    <div className='card grey lighten-3' key={workout.id}>\n      <div className='card-content'>\n        <div className='card-title'>\n          {updateDateMode ? (\n            <Datepicker inline setDate={date => changeWorkoutDate(workout.id, date)} />\n          ) : (\n            moment(Number(date)).format('LL')\n          )}\n          {workout.completed ? (\n            <DropdownCompleted workout={workout} />\n          ) : (\n            <DropdownNotCompleted workout={workout} actions={{ setUpdateDateMode }} />\n          )}\n        </div>\n\n        <p>{workout.description}</p>\n\n        <Workout workoutId={workout.id} />\n      </div>\n\n      <Modal\n        actions={{ proceed: () => removeWorkout(workout.id) }}\n        content={`Are you sure you want to delete workout for ${moment(\n          Number(date)\n        ).format('LL')}? This cannot be undone.`}\n        id={workout.id}\n        labels={{ proceed: 'Delete', cancel: 'Cancel' }}\n      />\n    </div>\n  )\n}\n\nexport default compose(\n  graphql(deleteWorkout, { name: 'deleteWorkout' }),\n  graphql(updateWorkoutDate, { name: 'updateWorkoutDate' })\n)(WorkoutScheduled)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { graphql } from 'react-apollo'\n\nimport getUserById from '../../graphql/queries/getUserById'\n\nimport CarouselWorkout from './CarouselWorkout'\nimport Loader from '../../components/Loader'\n\nconst carouselStyles = {\n  // scrollSnapType: 'mandatory',\n  scrollSnapPointsY: 'repeat(100vw)',\n  scrollSnapType: 'x mandatory',\n  display: 'flex',\n  overflowX: 'scroll',\n}\n\nconst itemStyles = {\n  padding: '1rem',\n  minWidth: '100vw',\n  //height: '100vh',\n  scrollSnapAlign: 'start',\n  textAlign: 'center',\n  position: 'relative',\n}\n\nexport const buttonStyles = {\n  position: 'fixed',\n  bottom: '1.5rem',\n  right: '1.5rem',\n}\n\nfunction AllWorkouts({ getUserById, history }) {\n  const { loading, User: user } = getUserById\n  if (loading) return <Loader />\n\n  const { workouts } = user\n  //const workoutIds = workouts.map(workout => workout.id)\n  const [ownChildren, setOwnChildren] = useState(workouts)\n\n  useEffect(() => {\n    getUserById.refetch()\n  }, [ownChildren])\n\n  return (\n    <>\n      <div style={carouselStyles}>\n        {workouts.map(workout => (\n          <div key={workout.id} style={itemStyles}>\n            <CarouselWorkout\n              workout={workout}\n              peers={ownChildren}\n              setPeers={setOwnChildren}\n            />\n          </div>\n        ))}\n      </div>\n\n      <button\n        className='btn-floating red darken-3 z-depth-2'\n        style={buttonStyles}\n        onClick={() => history.push('/workouts/calendar')}\n      >\n        <i className='material-icons'>calendar_today</i>\n      </button>\n    </>\n  )\n}\n\nexport default withRouter(\n  graphql(getUserById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.userId,\n        },\n      }\n    },\n    name: 'getUserById',\n  })(AllWorkouts)\n)\n","import moment from 'moment'\n\nexport default ({ month, year }) => {\n  const startDate = moment([year, month, 1])\n    .valueOf()\n    .toString()\n  const endDate = moment([\n    year,\n    month,\n    moment([year, month]).daysInMonth(),\n    23,\n    59,\n    59,\n    999,\n  ])\n    .valueOf()\n    .toString()\n\n  return [startDate, endDate]\n}\n","import React from 'react'\nimport moment from 'moment'\n\n\nexport const calInitState = { month: moment().month(), year: moment().year() }\n\nexport const calReducer = (state, action) => {\n  switch(action) {\n    case 'inc_month':\n      if (state.month === 11) return { month: 0, year: state.year + 1 }\n      else return { ...state, month: state.month + 1 }\n    case 'dec_month':\n      if (state.month === 0) return { month: 11, year: state.year - 1}\n      else return { ...state, month: state.month - 1 }\n    case 'inc_year':\n      return { ...state, year: state.year + 1 }\n    case 'dec_year':\n      return { ...state, year: state.year - 1 }\n    case 'reset':\n      return calInitState\n    default:\n      return state\n  }\n}\n\nexport default ({ state: { month, year }, dispatch }) => (\n  <>   \n    <div\n      className=\"valign-wrapper\"\n      style={{ padding: '1rem 1rem 0 1rem' }}\n    >\n      <i className=\"material-icons\" onClick={ () => dispatch('dec_year') } style={{flex: '10%'}}>\n        keyboard_arrow_left\n      </i>\n      <span style={{ flex: '10%' }}></span>\n      <h6 style={{flex: '60%'}}>{year}</h6>\n      <span style={{ flex: '10%' }}>{\n        month === calInitState.month && year === calInitState.year ? \n          null : \n          <i\n            className=\"material-icons white-text\"\n            \n            onClick={ () => dispatch('reset') }\n          >\n            refresh\n          </i>\n      }</span>\n      <i\n        className=\"material-icons\" onClick={ () => dispatch('inc_year') } style={{flex: '10%'}}>\n        keyboard_arrow_right\n      </i>\n    </div>\n\n    <div\n      className=\"valign-wrapper\"\n      style={{ padding: '1rem', position: 'relative' }}\n    >\n      <i\n        className=\"material-icons\"\n        onClick={ () => dispatch('dec_month') }\n        style={{ flex: '10%' }}\n      >\n        keyboard_arrow_left\n      </i>\n      <h4 style={{ flex: '80%' }}>{ moment().month(month).format('MMMM') }</h4>\n      <i\n        className=\"material-icons\"\n        onClick={ () => dispatch('inc_month') }\n        style={{ flex: '10%' }}\n      >\n        keyboard_arrow_right\n      </i>\n    </div>\n  </>\n)","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\nimport { withRouter } from 'react-router-dom'\n\nimport RepeatWorkout from '../carousel/RepeatWorkout'\n\nconst CalendarModal = ({ content, history, id, workout }) => {\n  useEffect(() => {\n    M.AutoInit()\n  }, [])\n\n  return (\n    <>\n      <div className='modal' id={id}>\n        <div className='modal-content'>\n          {content}\n          <div className='modal-footer'>\n            <button className='modal-close btn-flat'>\n              {workout.completed ? (\n                <RepeatWorkout workout={workout} history={history} />\n              ) : (\n                <span onClick={() => history.push(`/workout/${id}`)}>Let's do this</span>\n              )}\n            </button>\n            <button className='modal-close btn-flat'>Close</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(CalendarModal)\n","import React from 'react'\nimport moment from 'moment'\n\nimport Modal from './CalendarModal'\nimport Workout from '../display_workout/Workout'\n\nexport default ({ date: { date, workout }, numDays }) => {\n  const isValidDate = date.date > 0 && numDays >= date.date\n  const currentMonth = moment().month()\n  const currentYear = moment().year()\n  const isPast =\n    (date.date < moment().date() &&\n      date.month <= currentMonth &&\n      date.year <= currentYear) ||\n    (date.month < currentMonth && date.year <= currentYear) ||\n    date.year < currentYear\n\n  return (\n    <>\n      <div\n        data-target={workout.id}\n        className={`left-align ${workout && 'modal-trigger'}`}\n        style={{\n          height: '6rem',\n          border: isValidDate ? '1px solid #424242' : '1px solid #bdbdbd',\n          borderRadius: '5%',\n          padding: '0 0.25em',\n          flex: 'calc(100% / 7)',\n          backgroundColor: !workout\n            ? 'none'\n            : workout.completed\n            ? '#a5d6a7'\n            : isPast\n            ? '#bdbdbd'\n            : '#ef9a9a',\n        }}\n      >\n        {isValidDate && date.date}\n      </div>\n\n      {workout && (\n        <Modal\n          id={workout.id}\n          content={\n            <>\n              <div>{workout.description}</div>\n              <Workout workoutId={workout.id} />\n            </>\n          }\n          workout={workout}\n        />\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\n\nimport CalendarControls from './CalendarControls'\nimport CalendarCell from './CalendarCell'\n\n\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\n\nexport default ({ state: { month, year }, dispatch, workouts }) => {\n  const firstDay = moment().year(year).month(month).date(1).day()\n  const numDays = moment({ year, month }).daysInMonth()\n\n  const getDates = () => {\n    const dates = []\n    for (let i = 0; i < numDays + firstDay || dates.length % 7 !== 0; i++) {\n      dates[i] = { date: { date: i + 1 - firstDay, month, year }, workout: false }\n      const workout = workouts.find(w =>\n        moment(+w.date).date() === dates[i].date.date\n      )\n      if (workout) dates[i].workout = workout\n    }\n    return dates\n  }\n\n  return (\n    <div className=\"z-depth-2\" style={{ marginTop: '1rem'}}>\n      \n      <div className=\"grey darken-3 white-text\">\n        <CalendarControls state={{ month, year }} dispatch={dispatch} />\n\n        <div style={{ display: 'flex' }}>{ \n          days.map(day =>\n            <div key={day} style={{ flex: 'calc(100% / 7)' }}>{day}</div>\n          )\n        }</div>\n      </div>\n      \n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>{\n        getDates().map(date => (\n          <CalendarCell\n            key={date.workout? date.workout.id : date.date.date}\n            date={date}\n            numDays={numDays}\n          />\n        ))\n      }</div>\n\n    </div>\n  )\n}\n","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from './getWorkoutById'\n\nexport default gql`\n  query GET_WORKOUTS_BY_DATE_RANGE($userId: ID!, $startDate: String!, $endDate: String!) {\n    allWorkouts(\n      filter: {\n        AND: [{ user: { id: $userId } }, { date_gte: $startDate }, { date_lte: $endDate }]\n      }\n    ) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import React, { useReducer } from 'react'\nimport { Query } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\nimport getUTCDateRange from '../../utils/getStartAndEndOfMonthAsUTC'\n\nimport Calendar from './Calendar'\nimport Loader from '../../components/Loader'\nimport { calReducer, calInitState } from './CalendarControls'\nimport { buttonStyles } from '../carousel/AllWorkouts'\n\nimport getWorkoutsByDate from '../../graphql/queries/getWorkoutsByDate'\n\nfunction AllWorkoutsCalendar({ history, userId }) {\n  const [{ month, year }, dispatch] = useReducer(calReducer, calInitState)\n  const [startDate, endDate] = getUTCDateRange({ month, year })\n\n  return (\n    <Query query={getWorkoutsByDate} variables={{ userId, startDate, endDate }}>\n      {({ loading, error, data: { allWorkouts } }) => {\n        if (loading) return <Loader />\n        if (error) return `Error! ${error.message}`\n        return (\n          <div className='container'>\n            <Calendar\n              state={{ month, year }}\n              dispatch={dispatch}\n              workouts={allWorkouts}\n            />\n\n            <button\n              className='btn-floating red darken-3 z-depth-2'\n              style={buttonStyles}\n              onClick={() => history.push('/workouts')}\n            >\n              <i className='material-icons'>view_carousel</i>\n            </button>\n          </div>\n        )\n      }}\n    </Query>\n  )\n}\n\nexport default withRouter(AllWorkoutsCalendar)\n","import React, { useState } from 'react'\nimport { gql } from 'apollo-boost'\nimport { Mutation, withApollo } from 'react-apollo'\nimport { Redirect, Link } from 'react-router-dom'\nimport Loader from '../../components/Loader'\n\nconst SIGNUP_USER = gql`\n  mutation signupUserMutation($email: String!, $name: String!, $password: String!) {\n    signupUser(email: $email, name: $name, password: $password) {\n      id\n      token\n    }\n  }\n`\n\nexport default withApollo(({ client }) => {\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const [error, setError] = useState(null)\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('id'))\n\n  if (loggedIn) return <Redirect to='./' />\n\n  return (\n    <Mutation mutation={SIGNUP_USER}>\n      {(signupUser, { loading }) => {\n        const handleSubmit = e => {\n          e.preventDefault()\n          if (password !== confirmPassword) {\n            setError(\"Passwords don't match!\")\n            return\n          }\n          signupUser({\n            variables: {\n              email,\n              name,\n              password,\n            },\n          }).then(\n            ({ data: { signupUser } }) => {\n              setEmail('')\n              setName('')\n              setPassword('')\n              setConfirmPassword('')\n              localStorage.setItem('id', signupUser.id)\n              localStorage.setItem('token', signupUser.token)\n              setLoggedIn(true)\n            },\n            err => {\n              console.log(err.message)\n              if (err.message.includes('Email already in use')) {\n                setError('Email already in use')\n              }\n            }\n          )\n        }\n        if (loading) return <Loader />\n        return (\n          <div className='container'>\n            {error && <h5>{error}</h5>}\n            <form onSubmit={handleSubmit}>\n              <div className='input-field'>\n                <label htmlFor='email' className={email && 'active'}>\n                  Email\n                </label>\n                <input\n                  required\n                  id='email'\n                  type='email'\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                  autoComplete='username'\n                />\n              </div>\n\n              <div className='input-field'>\n                <label htmlFor='name' className={name && 'active'}>\n                  Name\n                </label>\n                <input\n                  required\n                  id='name'\n                  type='text'\n                  value={name}\n                  onChange={e => setName(e.target.value)}\n                />\n              </div>\n\n              <div className='input-field'>\n                <label htmlFor='password' className={password && 'active'}>\n                  Password\n                </label>\n                <input\n                  required\n                  id='password'\n                  type='password'\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                  autoComplete='new-password'\n                />\n              </div>\n\n              <div className='input-field'>\n                <label htmlFor='confirm' className={confirmPassword && 'active'}>\n                  Confirm password\n                </label>\n                <input\n                  required\n                  id='confirm'\n                  type='password'\n                  value={confirmPassword}\n                  onChange={e => setConfirmPassword(e.target.value)}\n                  autoComplete='new-password'\n                />\n              </div>\n              <button className='btn red darken-3' type='submit'>\n                Submit\n              </button>\n            </form>\n            <p>\n              Already have an account?\n              <Link className='btn-flat' to='./signin'>\n                Log in here\n              </Link>\n            </p>\n          </div>\n        )\n      }}\n    </Mutation>\n  )\n})\n","import React from 'react'\n\nexport default ({ buttonText, handleSubmit, inputs }) => (\n  <form onSubmit={handleSubmit}>\n    {inputs.map((i, idx) => (\n      <div key={idx} className='input-field'>\n        <label htmlFor={`input-${idx}`}>{i.label || i.type}</label>\n\n        <input\n          required\n          id={`input-${idx}`}\n          type={i.type}\n          ref={node => (i.node = node)}\n          autoComplete={\n            i.type === 'email'\n              ? 'username'\n              : i.type === 'password' && i.new\n              ? 'new-password'\n              : i.type === 'password'\n              ? 'current-password'\n              : null\n          }\n        />\n      </div>\n    ))}\n\n    <button className='btn red darken-3' type='submit'>\n      {buttonText}\n    </button>\n  </form>\n)\n","import React, { useState } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport { withApollo, Mutation } from 'react-apollo'\nimport { gql } from 'apollo-boost'\nimport Form from './Form'\nimport Loader from '../../components/Loader'\n\nconst AUTHENTICATE_USER = gql`\n  mutation authenticateUserMutation($email: String!, $password: String!) {\n    authenticateUser(email: $email, password: $password) {\n      id\n      token\n    }\n  }\n`\n\nexport default withApollo(({ client }) => {\n  const emailInput = { type: 'email', node: null },\n    passwordInput = { type: 'password', node: null }\n\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('id'))\n\n  if (loggedIn) return <Redirect to='./' />\n\n  return (\n    <div className='container'>\n      <Mutation mutation={AUTHENTICATE_USER}>\n        {(authenticateUser, { loading }) => {\n          const handleSubmit = e => {\n            e.preventDefault()\n            authenticateUser({\n              variables: {\n                email: emailInput.node.value,\n                password: passwordInput.node.value,\n              },\n            }).then(\n              ({ data: { authenticateUser } }) => {\n                emailInput.node.value = passwordInput.node.value = null\n                localStorage.setItem('id', authenticateUser.id)\n                localStorage.setItem('token', authenticateUser.token)\n                setLoggedIn(true)\n              },\n              err => console.log(err)\n            )\n          }\n          if (loading) return <Loader />\n          return (\n            <div className='container'>\n              <Form\n                handleSubmit={handleSubmit}\n                inputs={[emailInput, passwordInput]}\n                buttonText='Sign in'\n              />\n              <p>\n                Don't have an account yet?\n                <Link className='btn-flat' to='./signup'>\n                  Sign up here\n                </Link>\n              </p>\n            </div>\n          )\n        }}\n      </Mutation>\n    </div>\n  )\n})\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport PRoute from './components/ProtectedRoute'\n\n// Components\nimport FrontPage from './pages/front_page/FrontPage'\nimport ExecuteWorkout from './pages/execute_workout/ExecuteWorkout'\nimport CreateProgram from './pages/create_program/CreateProgram'\nimport SetupWorkout from './pages/create_workout/SetupWorkout'\nimport CreateWorkout from './pages/create_workout/CreateWorkout'\nimport CreateExercise from './pages/create_exercise/CreateExercise'\nimport CreateSet from './pages/create_workout/create_set/CreateSet'\nimport AllWorkouts from './pages/carousel/AllWorkouts'\nimport AllWorkoutsCalendar from './pages/calendar/AllWorkoutsCalendar'\nimport Signup from './pages/login_signup/Signup'\nimport Signin from './pages/login_signup/Login'\n\n// import Test from './pages/Test'\n\nexport default () => (\n  <Switch>\n    {/* <Route path='/test' component={Test} /> */}\n\n    <Route path='/signup' component={Signup} />\n    <Route path='/signin' component={Signin} />\n\n    <PRoute exact path='/' component={FrontPage} />\n    <PRoute path='/workout/:id' component={ExecuteWorkout} />\n    <PRoute path='/create/program' component={CreateProgram} />\n    <PRoute path='/create/setup' component={SetupWorkout} />\n    <PRoute path='/create/workout/:id' component={CreateWorkout} />\n    <PRoute path='/create/exercise' component={CreateExercise} />\n    <PRoute path='/create/set' component={CreateSet} />\n    <PRoute exact path='/workouts' component={AllWorkouts} />\n    <PRoute path='/workouts/calendar' component={AllWorkoutsCalendar} />\n    <PRoute component={FrontPage} />\n  </Switch>\n)\n","import React from 'react'\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n","import React from 'react'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { LastLocationProvider } from 'react-router-last-location'\nimport NavBar from './components/navbar/NavBar'\nimport Routes from './Routes'\nimport ErrorBoundary from './components/ErrorBoundary'\nimport { graphcoolUri } from './keys'\n\n// // Set up Apollo client\nconst client = new ApolloClient({\n  uri: graphcoolUri,\n  request: operation => {\n    const token = localStorage.getItem('token')\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    })\n  },\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <LastLocationProvider>\n          <ErrorBoundary>\n            <div id='main' className='App'>\n              <NavBar />\n            </div>\n\n            <Routes />\n          </ErrorBoundary>\n        </LastLocationProvider>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","export const graphcoolUri = 'https://api.graph.cool/simple/v1/cjv06d4h4017f0176envsbvmi'\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}