{"version":3,"sources":["graphql/mutations/updateConditions.js","graphql/queries/getExercise.js","graphql/queries/getSetById.js","graphql/queries/getWorkoutById.js","graphql/queries/getUserById.js","components/navbar/WorkoutCreationLink.js","components/navbar/Logout.js","components/navbar/NavBar.js","components/ProtectedRoute.js","utils/formatInputLabel.js","graphql/mutations/deleteSet.js","pages/display_workout/display_set/Set.js","components/Loader.js","pages/display_workout/Workout.js","pages/front_page/TodaysWorkout.js","pages/front_page/FrontPage.js","components/NumberInputField.js","components/TextInputField.js","pages/execute_workout/execute_set/Mutations.js","pages/execute_workout/execute_set/CustomExerciseFieldInput.js","pages/execute_workout/execute_set/ExecuteSetFields.js","pages/execute_workout/execute_set/Checkbox.js","pages/execute_workout/execute_set/ExecuteSet.js","pages/execute_workout/Mutations.js","pages/execute_workout/WorkoutConditions.js","graphql/mutations/updateUserDefinedDataForWorkout.js","pages/execute_workout/UserDefinedDataForWorkout.js","components/Modal(improved).js","components/Collection.js","pages/execute_workout/ExecuteWorkout.js","components/TextAreaField.js","pages/create_program/Success.js","components/SuccessWrapper.js","pages/create_program/Mutations.js","pages/create_program/CreateProgram.js","components/Datepicker.js","graphql/mutations/deleteExercise.js","pages/create_workout/Mutations.js","pages/create_workout/SetupWorkout.js","pages/create_workout/ExerciseList.js","graphql/mutations/updateExerciseName.js","graphql/mutations/updateExerciseDescription.js","pages/create_workout/ExerciseDescription.js","pages/create_workout/create_set/CreateSetButtonsPanel.js","pages/create_workout/AddCustomDataToWorkout.js","pages/create_workout/CreateWorkout.js","pages/create_exercise/CreateNewField.js","pages/create_exercise/ExerciseFields.js","pages/create_exercise/Success.js","pages/create_exercise/Mutations.js","pages/create_exercise/CreateExercise.js","pages/create_workout/create_set/Mutations.js","pages/create_workout/create_set/CreateSet.js","pages/carousel/DropdownNotCompleted.js","pages/carousel/Mutations.js","pages/carousel/RepeatWorkout.js","pages/carousel/DropdownCompleted.js","graphql/mutations/deleteWorkout.js","graphql/mutations/updateWorkoutDate.js","pages/carousel/CarouselWorkout.js","pages/carousel/AllWorkouts.js","utils/getStartAndEndOfMonthAsUTC.js","pages/calendar/CalendarControls.js","pages/calendar/CalendarModal.js","pages/calendar/CalendarCell.js","pages/calendar/Calendar.js","graphql/queries/getWorkoutsByDate.js","pages/calendar/AllWorkoutsCalendar.js","pages/login_signup/Signup.js","pages/login_signup/Form.js","pages/login_signup/Login.js","pages/Test.js","Routes.js","components/ErrorBoundary.js","App.js","keys.js","serviceWorker.js","index.js"],"names":["conditionsFieldsFragment","gql","_templateObject","_templateObject2","exerciseFieldsFragment","getExercise_templateObject","getExercise_templateObject2","setFieldsFragment","getSetById_templateObject","getSetById_templateObject2","workoutFieldsFragment","getWorkoutById_templateObject","getWorkoutById_templateObject2","getUserById_templateObject","WorkoutCreationLink","id","localStorage","getItem","react_default","a","createElement","react_apollo_esm","query","GET_USER_QUERY","variables","_ref","loading","User","data","currentProgram","programs","length","renderLink","concat","name","programId","Fragment","className","text","state","react_router_dom","to","pathname","Logout","onClick","removeItem","withRouter","props","useEffect","M","AutoInit","location","href","data-target","userId","map","link","i","key","ProtectedRoute","Component","component","rest","Object","objectWithoutProperties","react_router","assign","render","formatLabel","label","replace","str","toUpperCase","deleteSet","deleteSet_templateObject","graphql","editable","set","setNumber","numSets","setNumSets","notes","exercise","then","err","console","log","_ref2","value","Wrapper","styled","div","Loader_templateObject","Anchor","Loader_templateObject2","bounce","keyframes","_templateObject3","colorize","_templateObject4","Ball","span","_templateObject5","Loader","GET_WORKOUT_QUERY","options","workoutId","sets","Workout","_useState","useState","_useState2","slicedToArray","idx","display_set_Set","TodaysWorkout","workoutsForToday","workouts","filter","workout","date","Date","today","getDate","getMonth","getFullYear","isToday","completed","getWorkoutsForToday","multiple","description","display_workout_Workout","FrontPage","lastLocation","useLastLocation","NumberInputField","defaultValue","icon","onChange","onBlur","htmlFor","type","TextInputField","UPDATE_SET_DATA_FIELD_MUTATION","Mutations_templateObject","ADD_FIELD_TO_EXERCISE_MUTATION","Mutations_templateObject2","ADD_DATA_FIELD_TO_SET_MUTATION","Mutations_templateObject3","UPDATE_SET_COMPLETED_MUTATION","Mutations_templateObject4","compose","getExercise","_props$getExercise","Exercise","newField","setNewField","fields","onSubmit","e","preventDefault","find","elem","toast","html","Promise","all","addFieldToExercise","exerciseId","refetchQueries","addFieldToSet","setId","GET_SET_QUERY","_ref2$1$data$createSe","createSetDataField","dispatch","document","getElementById","components_TextInputField","target","disabled","reducer","action","objectSpread","defineProperty","Number","Error","GET_EXERCISE_QUERY","updateSetDataField","showAddField","setShowAddField","initialState","toConsumableArray","reduce","acc","field","_useReducer","useReducer","_useReducer2","entries","_ref3","_ref4","_ref4$","components_NumberInputField","previousSibling","classList","remove","res","handleBlur","CustomExerciseFieldInput","checkboxStyles","width","height","margin","uncheckedStyles","border","checkedStyles","checkmarkStyles","fontSize","position","top","left","setCompleted","updateSetCompleted","style","getSetById","number","skip","Set","_useState3","_useState4","skipped","setSkipped","_useState5","_useState6","showExerciseDetails","setShowExerciseDetails","execute_set_Checkbox","execute_set_ExecuteSetFields","UPDATE_WORKOUT_COMPLETED_MUTATION","execute_workout_Mutations_templateObject","UPDATE_CONDITIONS_MUTATION","execute_workout_Mutations_templateObject2","getWorkoutById","conditions","Array","from","children","forEach","child","firstChild","nextSibling","nodeName","blur","updateConditions","keys","condition","updateUserDefinedDataForWorkout","updateUserDefinedDataForWorkout_templateObject","datum","_props$getWorkoutById","v","refetch","catch","handleSubmit","Modal","actions","content","labels","proceed","cancel","Collection","collapsible","header","items","collapsed","setCollapsed","match","params","user","done","setDone","skippedSets","setSkippedSets","modalText","nullConditions","incompleteSets","findIndex","s","everythingComplete","setEverythingComplete","c","formatModalText","updateSkippedSets","some","completeWorkout","updateWorkoutCompleted","String","setTimeout","history","push","execute_workout_WorkoutConditions","toLocaleDateString","execute_set_ExecuteSet","execute_workout_UserDefinedDataForWorkout","TextAreaField","Success","newProgram","SuccessWrapper","ADD_PROGRAM_TO_USER_MUTATION","create_program_Mutations_templateObject","CREATE_PROGRAM_MUTATION","create_program_Mutations_templateObject2","createProgram","addProgramToUser","setName","setDescription","setNewProgram","_useState7","_useState8","setLoading","_useState9","_useState10","success","setSuccess","_useState11","_useState12","addToUserPrograms","programsProgram","components_TextAreaField","Datepicker","inline","setDate","instance","init","querySelector","onSelect","newDate","getTime","defaultDate","setDefaultDate","destroy","display","deleteExercise","deleteExercise_templateObject","CREATE_WORKOUT_MUTATION","create_workout_Mutations_templateObject","CREATE_WORKOUT_FIELD_MUTATION","create_workout_Mutations_templateObject2","ADD_FIELD_TO_WORKOUT_MUTATION","create_workout_Mutations_templateObject3","DELETE_WORKOUT_DATA_FIELD_MUTATION","create_workout_Mutations_templateObject4","now","canceled","setCanceled","setWorkout","createWorkout","components_Datepicker","DELETE_EXERCISE_MUTATION","getUserById","setExercise","listVisible","setListVisible","exercises","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","updateExerciseName","updateExerciseName_templateObject","updateExerciseDescription","updateExerciseDescription_templateObject","getExerciseQuery","_props$data","react_contenteditable_default","textContent","CreateSetButtonsPanel","showForm","setShowForm","handleRemove","deleteField","createField","addFieldToWorkout","fieldId","createWorkoutData","create_workout_ExerciseDescription","create_set_CreateSetButtonsPanel","create_workout_ExerciseList","AddCustomDataToWorkout","CreateNewField","forwardedRef","ref","ExerciseFields","setFields","defaultFields","modalInput","useRef","removeField","f","previousElementSibling","current","create_exercise_Success","newExercise","CREATE_EXERCISE_MUTATION","create_exercise_Mutations_templateObject","CREATE_EXERCISE_FIELD_MUTATION","create_exercise_Mutations_templateObject2","ADD_EXERCISE_TO_USER_MUTATION","create_exercise_Mutations_templateObject3","ADD_FIELDS_TO_EXERCISE_MUTATION","create_exercise_Mutations_templateObject4","setNewExercise","_useState13","_useState14","goBack","createdExercise","createExercise","createdFields","toArray","slice","createExerciseField","addExerciseToUser","userid","addFieldsToExercise","CREATE_SET_MUTATION","create_set_Mutations_templateObject","_props$location$state","setNotes","numberOfSets","setNumberOfSets","ps","createSet","updatedFields","dropdownId","dropdownTriggers","querySelectorAll","instances","Dropdown","coverTrigger","constrainWidth","closeOnClick","setUpdateDateMode","tabIndex","carousel_Mutations_templateObject","RepeatWorkout","clonedWorkoutData","x","unit","clonedSets","y","mutation","REPEAT_WORKOUT_MUTATION","repeatWorkout","deleteWorkout","deleteWorkout_templateObject","updateWorkoutDate_templateObject","updateWorkoutDate","peers","setPeers","updateDateMode","changeWorkoutDate","sort","p1","p2","moment","format","DropdownCompleted","DropdownNotCompleted","p","carouselStyles","scrollSnapPointsY","scrollSnapType","overflowX","itemStyles","padding","minWidth","scrollSnapAlign","textAlign","buttonStyles","bottom","right","ownChildren","setOwnChildren","CarouselWorkout","getStartAndEndOfMonthAsUTC","month","year","valueOf","toString","daysInMonth","calInitState","calReducer","CalendarControls","_ref$state","flex","CalendarCell","_ref$date","numDays","isValidDate","currentMonth","currentYear","isPast","borderRadius","backgroundColor","calendar_CalendarModal","days","Calendar","firstDay","day","marginTop","flexWrap","dates","_loop","w","getDates","getWorkoutsByDate_templateObject","_useReducer2$","_getUTCDateRange","getUTCDateRange","_getUTCDateRange2","startDate","endDate","getWorkoutsByDate","error","allWorkouts","message","SIGNUP_USER","Signup_templateObject","withApollo","client","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setError","loggedIn","setLoggedIn","signupUser","setItem","token","includes","required","autoComplete","Form","buttonText","inputs","node","new","AUTHENTICATE_USER","Login_templateObject","emailInput","passwordInput","authenticateUser","divStyles","flexDirection","alignItems","background","transform","transition","labelStyles","color","fontStyle","inputStyles","Test","input","highlightLabel","fontWeight","unHighlightLabel","makePop","container","boxShadow","unPop","_Array$from$filter","el","addEventListener","removeEventListener","Routes","path","Signup","Signin","exact","ExecuteWorkout","CreateProgram","SetupWorkout","CreateWorkout","CreateExercise","CreateSet","AllWorkouts","AllWorkoutsCalendar","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","info","React","ApolloClient","uri","request","operation","setContext","headers","authorization","App","dist","ErrorBoundary_ErrorBoundary","NavBar","Boolean","window","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee7c7701.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\n\nexport const conditionsFieldsFragment = gql`\n  fragment conditionsFields on Conditions {\n    id\n    sleep\n    nutrition\n    stress\n    dayOfCycle\n    selfAssessmentBefore\n    selfAssessmentAfter\n  }\n`\n\nexport default gql`\n  mutation updateConditions(\n    $sleep: Int\n    $nutrition: Int\n    $stress: Int\n    $dayOfCycle: Int\n    $selfAssessmentBefore: Int\n    $selfAssessmentAfter: Int\n    $workoutId: ID!\n  ) {\n    updateConditions(\n      sleep: $sleep\n      nutrition: $nutrition\n      stress: $stress\n      dayOfCycle: $dayOfCycle\n      selfAssessmentBefore: $selfAssessmentBefore\n      selfAssessmentAfter: $selfAssessmentAfter\n      workoutId: $workoutId\n    ) {\n      id\n      conditions {\n        ...conditionsFields\n      }\n    }\n  }\n  ${conditionsFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\n\nexport const exerciseFieldsFragment = gql`\n  fragment exerciseFields on Exercise {\n    id\n    name\n    description\n    fields {\n      id\n      name\n    }\n  }\n`\n\nexport default gql`\n  query GET_EXERCISE_QUERY($id: ID) {\n    Exercise(id: $id) {\n      ...exerciseFields\n    }\n  }\n  ${exerciseFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\nimport { exerciseFieldsFragment } from './getExercise'\n\nexport const setFieldsFragment = gql`\n  fragment setFields on Set {\n    id\n    number\n    data {\n      id\n      name\n      value\n    }\n    notes\n    exercise {\n      ...exerciseFields\n    }\n    completed\n    workout {\n      id\n    }\n  }\n  ${exerciseFieldsFragment}\n`\n\nexport default gql`\n  query GET_SET_QUERY($id: ID) {\n    Set(id: $id) {\n      ...setFields\n    }\n  }\n  ${setFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\nimport { conditionsFieldsFragment } from '../mutations/updateConditions'\nimport { setFieldsFragment } from './getSetById'\n\nexport const workoutFieldsFragment = gql`\n  fragment workoutFields on Workout {\n    completed\n    conditions {\n      ...conditionsFields\n    }\n    date\n    description\n    id\n    program {\n      id\n    }\n    sets {\n      ...setFields\n    }\n    user {\n      id\n    }\n    data {\n      id\n      name\n      value\n    }\n  }\n  ${conditionsFieldsFragment}\n  ${setFieldsFragment}\n`\n\nexport default gql`\n  query GET_WORKOUT_QUERY($id: ID) {\n    Workout(id: $id) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from './getWorkoutById'\nimport { exerciseFieldsFragment } from './getExercise'\n\nexport default gql`\n  query GET_USER_QUERY($id: ID) {\n    User(id: $id) {\n      id\n      name\n      # preferences {\n      #   trackCycle\n      # }\n      programs {\n        id\n        name\n        # startDate\n      }\n      workouts(orderBy: date_ASC) {\n        ...workoutFields\n      }\n      exercises {\n        ...exerciseFields\n      }\n    }\n  }\n  ${workoutFieldsFragment}\n  ${exerciseFieldsFragment}\n`\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { NavLink } from 'react-router-dom'\n\nimport GET_USER_QUERY from '../../graphql/queries/getUserById'\n\nexport default () => {\n  const id = localStorage.getItem('id')\n  if (!id) return null\n  return (\n    <Query query={GET_USER_QUERY} variables={{ id }}>\n      {({ loading, data: { User } }) => {\n        if (loading) return <span>loading....</span>\n        if (!User) return null\n        const currentProgram = User.programs[User.programs.length - 1]\n\n        return currentProgram ? (\n          renderLink(`Add a new workout to \"${currentProgram.name}\"`, {\n            User,\n            programId: currentProgram.id,\n          })\n        ) : (\n          <>\n            <li className='subheader section'>\n              Looks like you don't have any programs yet.\n            </li>\n            {renderLink('Create a standalone workout?', { User })}\n          </>\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction renderLink(text, state) {\n  return (\n    <li className='section'>\n      <NavLink\n        className='sidenav-close'\n        to={{\n          pathname: '/create/setup',\n          state,\n        }}\n      >\n        {text}\n      </NavLink>\n    </li>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default () => {\n  const handleClick = () => {\n    localStorage.removeItem('id')\n    localStorage.removeItem('token')\n  }\n  return (\n    <li onClick={handleClick}>\n      <NavLink className='sidenav-close' to={'/signin'}>\n        Logout\n      </NavLink>\n    </li>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport M from 'materialize-css'\nimport './Navbar.css'\n\nimport WorkoutCreationLink from './WorkoutCreationLink'\nimport Logout from './Logout'\n\nexport default withRouter(props => {\n  const id = localStorage.getItem('id')\n\n  useEffect(() => {\n    M.AutoInit()\n  }, [props.location])\n\n  const links = [\n    { to: '/create/program', text: 'Start a new Program' },\n    { to: '/create/exercise', text: 'Create a new exercise' },\n    { to: '/workouts', text: 'My workouts' },\n  ]\n\n  return (\n    <nav className='nav-wrapper red darken-3 left-align'>\n      <div className='container'>\n        <NavLink to='/' className='brand-logo'>\n          Training Log\n        </NavLink>\n        {id && (\n          <>\n            <a\n              href='#!'\n              data-target='mobile-nav'\n              className='sidenav-trigger right show-on-large'\n            >\n              <i className='material-icons'>menu</i>\n            </a>\n\n            <ul className='sidenav grey lighten-3' id='mobile-nav'>\n              <li>\n                <div className='user-view grey darken-3 white-text z-depth-3'>\n                  <h4 className='center-align'>Main Menu</h4>\n                </div>\n              </li>\n              <WorkoutCreationLink userId={id} />\n              {links.map((link, i) => (\n                <li key={i} className='section'>\n                  <NavLink className='sidenav-close' to={link.to}>\n                    {link.text}\n                  </NavLink>\n                </li>\n              ))}\n              <Logout />\n            </ul>\n          </>\n        )}\n      </div>\n    </nav>\n  )\n})\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport default ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      const userId = localStorage.getItem('id')\n      return userId ? <Component {...props} userId={userId} /> : <Redirect to='/signin' />\n    }}\n  />\n)\n","export default function formatLabel(label) {\n  return label\n    .replace( /([A-Z])/g, ' $1' )\n    .replace( /^./, str => str.toUpperCase() )\n}","import { gql } from 'apollo-boost'\n\n\n const deleteSet = gql`\n  mutation ($id: ID!) {\n    deleteSet(id: $id) {\n      id\n    }\n  }\n`\n\nexport default deleteSet","import React from 'react'\nimport { graphql } from 'react-apollo'\nimport formatLabel from '../../../utils/formatInputLabel'\n\nimport deleteSet from '../../../graphql/mutations/deleteSet'\n\nfunction Set({ editable, set, setNumber, deleteSet, numSets, setNumSets }) {\n  const { data, notes } = set\n\n  const removeSet = id => {\n    deleteSet({\n      variables: { id },\n    }).then(() => setNumSets(numSets - 1), err => console.log(err))\n  }\n\n  const displayData = ({ id, name, value }) => {\n    if (value) {\n      return (\n        <div className='col s4 l2' key={id}>\n          <p>{formatLabel(name)}:</p>\n          <p>{value}</p>\n        </div>\n      )\n    } else return null\n  }\n\n  return (\n    <li className='collection-item'>\n      <div className='row valign-wrapper'>\n        <div className='col s1'>{setNumber}</div>\n        <div className='col s10'>\n          <h6>{set.exercise.name}</h6>\n        </div>\n        <div className='col s1'>\n          {editable && (\n            <i className='material-icons' onClick={() => removeSet(set.id)}>\n              close\n            </i>\n          )}\n        </div>\n      </div>\n      <div className='row'>{data.map(displayData)}</div>\n      <div className='row'>{notes && `Notes: ${notes}`}</div>\n    </li>\n  )\n}\n\nexport default graphql(deleteSet, { name: 'deleteSet' })(Set)\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst BALL_DIAMETER = '20px'\nconst BOUNCE_HEIGHT = 2\nconst SPREAD = 2\n\nconst Wrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 6rem;\n`\nconst Anchor = styled.div`\n  height: ${BALL_DIAMETER};\n  width: ${BALL_DIAMETER};\n  background: transparent;\n  position: relative;\n`\nconst bounce = keyframes`\n0%, 100% {\n  transform: translateY(calc(${BALL_DIAMETER} * ${BOUNCE_HEIGHT}));\n} \n50% {\n  transform: translateY(calc(${BALL_DIAMETER} * -${BOUNCE_HEIGHT}));\n}\n`\nconst colorize = keyframes`\n0%, 20% {\n  background: #ddd;\n}\n10% {\n  background: #c62828;\n}\n`\nconst Ball = styled.span`\n  display: block;\n  height: ${BALL_DIAMETER};\n  width: ${BALL_DIAMETER};\n  background: #ccc;\n  border-radius: 50%;\n  position: absolute;\n  top: 0;\n  transform-origin: center;\n  &:nth-child(1) {\n    left: calc(${BALL_DIAMETER} * -${SPREAD} * 2);\n    animation: ${bounce} 0.8s ease-in-out -0.2s infinite,\n      ${colorize} 0.8s ease-in-out -0.2s infinite;\n  }\n  &:nth-child(2) {\n    left: calc(${BALL_DIAMETER} * -${SPREAD});\n    animation: ${bounce} 0.8s ease-in-out -0.1s infinite,\n      ${colorize} 0.8s ease-in-out -0.1s infinite;\n  }\n  &:nth-child(3) {\n    animation: ${bounce} 0.8s ease-in-out 0s infinite,\n      ${colorize} 0.8s ease-in-out 0s infinite;\n  }\n  &:nth-child(4) {\n    left: calc(${BALL_DIAMETER} * ${SPREAD});\n    animation: ${bounce} 0.8s ease-in-out 0.1s infinite,\n      ${colorize} 0.8s ease-in-out 0.1s infinite;\n  }\n  &:nth-child(5) {\n    left: calc(${BALL_DIAMETER} * ${SPREAD} * 2);\n    animation: ${bounce} 0.8s ease-in-out 0.2s infinite,\n      ${colorize} 0.8s ease-in-out 0.2s infinite;\n  }\n`\n\nexport default () => (\n  <div className='container'>\n    <Wrapper>\n      <Anchor>\n        <Ball />\n        <Ball />\n        <Ball />\n        <Ball />\n        <Ball />\n      </Anchor>\n    </Wrapper>\n  </div>\n)\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\n\n// Components\nimport Set from './display_set/Set'\nimport Loader from '../../components/Loader'\n\nimport GET_WORKOUT_QUERY from '../../graphql/queries/getWorkoutById'\n\nfunction Workout(props) {\n  if (props.data.loading) return <Loader />\n\n  const { sets } = props.data.Workout\n  const [numSets, setNumSets] = useState(sets.length)\n\n  return (\n    <ul className='collection with-header z-depth-1'>\n      <li className='collection-header grey darken-3 white-text left-align'>\n        {!sets || sets.length === 0 ? 'No Sets Yet' : 'Workout:'}\n      </li>\n\n      {sets.map((set, idx) => (\n        <Set\n          editable={props.editable}\n          key={set.id}\n          set={set}\n          setNumber={idx + 1}\n          numSets={numSets}\n          setNumSets={setNumSets}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default graphql(GET_WORKOUT_QUERY, {\n  options: props => {\n    return {\n      variables: {\n        id: props.workoutId,\n      },\n    }\n  },\n})(Workout)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Workout from '../display_workout/Workout'\n\nexport default ({ workouts }) => {\n  const getWorkoutsForToday = workouts => {\n    return workouts.filter(workout => isToday(workout.date) && !workout.completed)\n\n    function isToday(date) {\n      date = new Date(+date)\n      const today = new Date()\n\n      return (\n        date.getDate() === today.getDate() &&\n        date.getMonth() === today.getMonth() &&\n        date.getFullYear() === today.getFullYear()\n      )\n    }\n  }\n\n  const workoutsForToday = getWorkoutsForToday(workouts)\n  const multiple = workoutsForToday.length > 1\n\n  return (\n    <>\n      {workoutsForToday.length ? (\n        <h3>Today's Workout{multiple && 's'}:</h3>\n      ) : (\n        <h5>No workout scheduled today</h5>\n      )}\n      {workoutsForToday.map(workout => (\n        <div className='card grey lighten-3' key={workout.id}>\n          <div className='card-content'>\n            <p>{workout.description}</p>\n            <Workout workoutId={workout.id} />\n          </div>\n          <div className='card-action'>\n            <Link to={`/workout/${workout.id}`}>Let's go!</Link>\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { useLastLocation } from 'react-router-last-location'\n\nimport TodaysWorkout from './TodaysWorkout'\nimport Loader from '../../components/Loader'\n\nimport GET_USER_QUERY from '../../graphql/queries/getUserById'\n\nexport default ({ userId: id }) => {\n  const lastLocation = useLastLocation()\n\n  return (\n    <Query query={GET_USER_QUERY} variables={{ id }}>\n      {({ loading, data: { User } }) => {\n        if (loading) return <Loader />\n        return (\n          <div className='container'>\n            <h1>\n              Welcome\n              {lastLocation && lastLocation.pathname === '/signup' ? ', ' : ' back, '}\n              {User.name}!\n            </h1>\n            <TodaysWorkout workouts={User.workouts || []} />\n          </div>\n        )\n      }}\n    </Query>\n  )\n}\n","import React from 'react'\n\n\nfunction NumberInputField({ defaultValue, icon, id, label, onChange, onBlur }) {\n  return (\n    <div className=\"input-field\">\n      {\n        icon &&\n        <i className=\"material-icons prefix\">{ icon }</i>\n      }\n      \n      <label htmlFor={ id }>{ label }</label>\n      <input\n        defaultValue={defaultValue}\n        type=\"number\"\n        id={ id }\n        onChange={onChange}\n        onBlur={onBlur}\n      >\n      </input>\n    </div>\n  )\n}\n\n\nexport default NumberInputField","import React from 'react'\n\n\nfunction TextInputField({ icon, id, label, onChange }) {\n  \n  return (\n    <div className=\"input-field\">\n      { \n        icon &&\n        <i className=\"material-icons prefix\">{ icon }</i>\n      }\n\n      <label htmlFor={ id }>{ label }</label>\n      \n      <input\n        id={ id }\n        type=\"text\"\n        onChange={ onChange }\n      >\n      </input>\n    </div>\n  )\n}\n\n\nexport default TextInputField","import { gql } from 'apollo-boost'\n\nexport const UPDATE_SET_DATA_FIELD_MUTATION = gql`\n  mutation UPDATE_SET_DATA_FIELD_MUTATION($id: ID!, $value: Float) {\n    updateSetDataField(id: $id, value: $value) {\n      id\n      name\n      value\n    }\n  }\n`\n\nexport const ADD_FIELD_TO_EXERCISE_MUTATION = gql`\n  mutation ADD_FIELD_TO_EXERCISE_MUTATION($exerciseId: ID!, $name: String!) {\n    createExerciseField(exerciseId: $exerciseId, name: $name) {\n      id\n      name\n      exercise {\n        id\n      }\n    }\n  }\n`\n\nexport const ADD_DATA_FIELD_TO_SET_MUTATION = gql`\n  mutation ADD_DATA_FIELD_TO_SET_MUTATION($setId: ID!, $name: String!) {\n    createSetDataField(setId: $setId, name: $name) {\n      id\n      name\n      set {\n        id\n      }\n    }\n  }\n`\n\nexport const UPDATE_SET_COMPLETED_MUTATION = gql`\n  mutation UPDATE_SET_COMPLETED_MUTATION($id: ID!, $completed: Boolean) {\n    updateSet(id: $id, completed: $completed) {\n      id\n      completed\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\nimport M from 'materialize-css'\n\n// Components\nimport TextInputField from '../../../components/TextInputField'\nimport Loader from '../../../components/Loader'\n\n// Queries\nimport {\n  ADD_FIELD_TO_EXERCISE_MUTATION,\n  ADD_DATA_FIELD_TO_SET_MUTATION,\n} from './Mutations'\nimport getExercise from '../../../graphql/queries/getExercise'\nimport GET_SET_QUERY from '../../../graphql/queries/getSetById'\n\nfunction AddCustomExerciseFields(props) {\n  const { loading, Exercise: exercise } = props.getExercise\n  if (loading) return <Loader />\n\n  const [newField, setNewField] = useState(null)\n  console.log('fields from CustomExerciseInput:', exercise.fields)\n  console.log('set from CustomExerciseInput:', props.set)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    // check for name duplication\n    if (exercise.fields.find(elem => elem.name === newField)) {\n      return M.toast({\n        html: `A field named \"${newField}\" already exists on this exercise! Please give your new field a unique name.`,\n      })\n    }\n    Promise.all([\n      props.addFieldToExercise({\n        variables: {\n          name: newField,\n          exerciseId: exercise.id,\n        },\n        refetchQueries: [{ query: getExercise, variables: { id: exercise.id } }],\n      }),\n      props.addFieldToSet({\n        variables: {\n          name: newField,\n          setId: props.set.id,\n        },\n        refetchQueries: [{ query: GET_SET_QUERY, variables: { id: props.set.id } }],\n      }),\n    ]).then(\n      ([\n        ,\n        {\n          data: {\n            createSetDataField: { name, id },\n          },\n        },\n      ]) => {\n        M.toast({\n          html: `Successfully created field: \"${name}!\"`,\n        })\n        setNewField(null)\n        props.dispatch({ type: 'NEW_FIELD', name, id })\n        document.getElementById('field-name').value = null\n      },\n      err => console.log(err)\n    )\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextInputField\n        id='field-name'\n        label='New field'\n        onChange={e => setNewField(e.target.value)}\n      />\n\n      {newField == null ? <button disabled>Save</button> : <button>Save</button>}\n    </form>\n  )\n}\n\nexport default withRouter(\n  compose(\n    graphql(ADD_FIELD_TO_EXERCISE_MUTATION, { name: 'addFieldToExercise' }),\n    graphql(ADD_DATA_FIELD_TO_SET_MUTATION, { name: 'addFieldToSet' }),\n    graphql(getExercise, {\n      options: props => {\n        return {\n          variables: {\n            id: props.set.exercise.id,\n          },\n        }\n      },\n      name: 'getExercise',\n    })\n  )(AddCustomExerciseFields)\n)\n","import React, { useReducer, useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport formatLabel from '../../../utils/formatInputLabel'\n\nimport NumberInputField from '../../../components/NumberInputField'\nimport CustomExerciseFieldInput from './CustomExerciseFieldInput'\n\nimport {\n  UPDATE_SET_DATA_FIELD_MUTATION,\n  // ADD_DATA_FIELD_TO_SET_MUTATION,\n} from './Mutations'\n// import GET_SET_QUERY from '../../../graphql/queries/getSetById'\nimport GET_EXERCISE_QUERY from './../../../graphql/queries/getExercise'\n\nfunction reducer(fields, action) {\n  switch (action.type) {\n    case 'UPDATE_VALUE':\n      return {\n        ...fields,\n        [action.name]: { ...fields[action.name], value: Number(action.value) },\n      }\n    case 'NEW_FIELD':\n      return {\n        ...fields,\n        [action.name]: { id: action.id, value: null },\n      }\n    default:\n      throw new Error('invalid action type on execute set fields reducer')\n  }\n}\n\nfunction ExecuteSetFields({ set, updateSetDataField, getExercise }) {\n  if (getExercise.loading) return null\n\n  const [showAddField, setShowAddField] = useState(false)\n  const initialState = [...getExercise.Exercise.fields, ...set.data].reduce(\n    (acc, field) => {\n      return {\n        ...acc,\n        [field.name]: { id: field.id, value: field.value },\n      }\n    },\n    {}\n  )\n\n  const [fields, dispatch] = useReducer(reducer, initialState)\n\n  const handleBlur = (e, { name, id, value }) => {\n    // gross, fix\n    e.target.value = null\n    e.target.previousSibling.classList.remove('active')\n\n    updateSetDataField({\n      variables: {\n        id,\n        value,\n      },\n    }).then(res => console.log(res), err => console.log(err))\n  }\n\n  return (\n    <>\n      {Object.entries(fields).map(([name, { id, value }]) => (\n        <NumberInputField\n          key={id}\n          id={name}\n          label={value ? `${formatLabel(name)}: ${value}` : formatLabel(name)}\n          onChange={e => dispatch({ type: 'UPDATE_VALUE', name, value: e.target.value })}\n          onBlur={e => handleBlur(e, { name, id, value })}\n        />\n      ))}\n      {showAddField && <CustomExerciseFieldInput dispatch={dispatch} set={set} />}\n      <i\n        className='align-right material-icons grey-text'\n        onClick={() => setShowAddField(!showAddField)}\n      >\n        {showAddField ? 'keyboard_arrow_up' : 'add'}\n      </i>\n    </>\n  )\n}\n\nexport default compose(\n  graphql(GET_EXERCISE_QUERY, {\n    name: 'getExercise',\n    options: props => {\n      return {\n        variables: {\n          id: props.set.exercise.id,\n        },\n      }\n    },\n  }),\n  // graphql(GET_SET_QUERY, { name: 'get set' }),\n  graphql(UPDATE_SET_DATA_FIELD_MUTATION, { name: 'updateSetDataField' })\n  // graphql(ADD_DATA_FIELD_TO_SET_MUTATION, { name: 'addDataFieldToSet' })\n)(ExecuteSetFields)\n","import React from 'react'\nimport { graphql } from 'react-apollo'\n\nimport { UPDATE_SET_COMPLETED_MUTATION } from './Mutations'\n\nconst checkboxStyles = {\n  width: '1.5rem',\n  height: '1.5rem',\n  margin: '0.5rem',\n}\n\nconst uncheckedStyles = {\n  border: '1px solid #c62828',\n  ...checkboxStyles,\n}\n\nconst checkedStyles = {\n  border: '1px solid #4caf50',\n  ...checkboxStyles,\n}\n\nconst checkmarkStyles = {\n  fontSize: '3rem',\n  position: 'relative',\n  top: '-1.25rem',\n  left: '-0.5rem',\n}\n\nconst Checkbox = ({ set, completed, setCompleted, updateSetCompleted }) => {\n  const { id } = set\n\n  const handleClick = () => {\n    updateSetCompleted({\n      variables: {\n        id,\n        completed: !completed,\n      },\n    }).then(() => setCompleted(!completed), err => console.log(err))\n  }\n\n  return (\n    <div\n      className='checkbox z-depth-2'\n      onClick={handleClick}\n      style={completed ? checkedStyles : uncheckedStyles}\n    >\n      {completed && (\n        <i className='material-icons green-text medium' style={checkmarkStyles}>\n          check\n        </i>\n      )}\n    </div>\n  )\n}\n\nexport default graphql(UPDATE_SET_COMPLETED_MUTATION, { name: 'updateSetCompleted' })(\n  Checkbox\n)\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport ExecuteSetFields from './ExecuteSetFields'\nimport Checkbox from './Checkbox'\n\n// Queries\nimport getSetById from '../../../graphql/queries/getSetById'\n\nfunction ExecuteSet({ set, getSetById, number, skip }) {\n  if (getSetById.loading) return null\n\n  const [completed, setCompleted] = useState(getSetById.Set.completed)\n  const [skipped, setSkipped] = useState(false)\n  const [showExerciseDetails, setShowExerciseDetails] = useState(false)\n\n  return (\n    <li className='collection-item'>\n      {skipped && (\n        <div\n          className='skipped-set grey-text text-darken-3'\n          onClick={() => {\n            setSkipped(false)\n            skip(set)\n          }}\n        >\n          -- Skipped --\n        </div>\n      )}\n\n      <div className='row valign-wrapper'>\n        <div className='col s2 pull-s1'>\n          {number}\n          <Checkbox set={set} completed={completed} setCompleted={setCompleted} />\n        </div>\n\n        <div className='col s9'>\n          <h6 onClick={() => setShowExerciseDetails(!showExerciseDetails)}>\n            {set.exercise.name}\n          </h6>\n        </div>\n\n        <div\n          className='col s1'\n          onClick={() => {\n            setSkipped(true)\n            skip(set)\n          }}\n        >\n          {!skipped && <i className='material-icons grey-text'>close</i>}\n        </div>\n      </div>\n\n      {showExerciseDetails && <div>{set.exercise.description}</div>}\n\n      <div className='row'>\n        <ExecuteSetFields set={set} />\n      </div>\n    </li>\n  )\n}\n\nexport default withRouter(\n  graphql(getSetById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.set.id,\n        },\n      }\n    },\n    name: 'getSetById',\n  })(ExecuteSet)\n)\n","import { gql } from 'apollo-boost'\n\nexport const UPDATE_WORKOUT_COMPLETED_MUTATION = gql`\n  mutation UPDATE_WORKOUT_COMPLETED_MUTATION($id: ID!, $completed: Boolean) {\n    updateWorkout(id: $id, completed: $completed) {\n      id\n      completed\n    }\n  }\n`\n\nexport const UPDATE_CONDITIONS_MUTATION = gql`\n  mutation UPDATE_CONDITIONS_MUTATION(\n    $id: ID!\n    $sleep: Int\n    $nutrition: Int\n    $stress: Int\n    $dayOfCycle: Int\n    $selfAssessmentBefore: Int\n    $selfAssessmentAfter: Int\n  ) {\n    updateConditions(\n      id: $id\n      sleep: $sleep\n      nutrition: $nutrition\n      stress: $stress\n      dayOfCycle: $dayOfCycle\n      selfAssessmentBefore: $selfAssessmentBefore\n      selfAssessmentAfter: $selfAssessmentAfter\n    ) {\n      id\n      sleep\n      nutrition\n      stress\n      dayOfCycle\n      selfAssessmentBefore\n      selfAssessmentAfter\n      workoutId {\n        id\n      }\n    }\n  }\n`\n","import React, { useEffect, useReducer } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport formatLabel from '../../utils/formatInputLabel'\n\n// Components\nimport NumberInputField from '../../components/NumberInputField'\n\n// Queries\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport { UPDATE_CONDITIONS_MUTATION } from './Mutations'\n\nfunction reducer(state, action) {\n  return {\n    ...state,\n    [action.type]: Number(action.value),\n  }\n}\n\nfunction WorkoutConditions(props) {\n  const { loading } = props.getWorkoutById\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  const { conditions } = props.getWorkoutById.Workout\n  const initialState = conditions\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    e.target.value = null\n    Array.from(e.target.children).forEach(child => {\n      const label = child.firstChild\n      const field = label.nextSibling\n      if (label && label.nodeName === 'LABEL') {\n        label.classList.remove('active')\n        field.blur()\n        field.value = null\n      }\n    })\n    props\n      .updateConditions({\n        variables: {\n          ...state,\n          id: props.workout.conditions.id,\n        },\n        refetchQueries: ['GET_WORKOUT_QUERY'],\n      })\n      .then(\n        res => {\n          console.log(res)\n        }, //props.setConditionsVisible(false),\n        err => console.log(err)\n      )\n  }\n\n  return (\n    <li className='collection-header grey darken-3 white-text'>\n      <form className='container' onSubmit={handleSubmit}>\n        {conditions &&\n          Object.keys(conditions)\n            .filter(name => name[0] !== '_' && name !== 'id')\n            .map((condition, i) => (\n              <NumberInputField\n                key={i}\n                label={\n                  conditions[condition]\n                    ? `${formatLabel(condition)}: ${conditions[condition]}`\n                    : formatLabel(condition)\n                }\n                id={condition}\n                onChange={e =>\n                  dispatch({\n                    type: condition,\n                    value: e.target.value,\n                  })\n                }\n              />\n            ))}\n\n        <button className='white-text'>Save</button>\n      </form>\n    </li>\n  )\n}\n\nexport default compose(\n  graphql(getWorkoutById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.workout.id,\n        },\n      }\n    },\n    name: 'getWorkoutById',\n  }),\n  graphql(UPDATE_CONDITIONS_MUTATION, { name: 'updateConditions' })\n)(WorkoutConditions)\n","import { gql } from 'apollo-boost'\n\n\nconst updateUserDefinedDataForWorkout = gql`\n  mutation ( $id: ID!, $datum: Float! ) {\n    updateUserDefinedDataForWorkout( id: $id, datum: $datum ) {\n      id\n      name\n      datum\n    }\n  }\n`\n\nexport default updateUserDefinedDataForWorkout","import React, { useEffect, useReducer } from 'react'\nimport { graphql, compose } from 'react-apollo'\n\n// Components\nimport NumberInputField from '../../components/NumberInputField'\n\n// Queries\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport updateUserDefinedDataForWorkout from '../../graphql/mutations/updateUserDefinedDataForWorkout'\n\nfunction reducer(state, action) {\n  return {\n    ...state,\n    [action.id]: { name: action.name, datum: Number(action.datum) },\n  }\n}\n\nfunction UserDefinedDataForWorkout(props) {\n  const { loading, Workout: workout } = props.getWorkoutById\n  if (loading) return <p>Loading...</p>\n\n  const { data } = workout\n  const initialState = data.reduce(\n    (a, v) => ({ ...a, [v.id]: { name: v.name, datum: v.datum } }),\n    {}\n  )\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    props.getWorkoutById.refetch().catch(err => console.log(err))\n  }, [])\n\n  const handleSubmit = (e, id) => {\n    e.preventDefault()\n    props\n      .updateUserDefinedDataForWorkout({\n        variables: {\n          id,\n          datum: state[id].datum,\n        },\n      })\n      .then(res => console.log(res), err => console.log(err))\n  }\n\n  return (\n    <li className='collection-header grey darken-3 white-text'>\n      {data.length ? 'Custom Fields:' : 'No custom fields'}\n\n      {!!data.length &&\n        data\n          .filter(name => name[0] !== '_')\n          .map(({ id, name, datum }) => (\n            <form className='container' onSubmit={e => handleSubmit(e, id)} key={id}>\n              <div className='row valign-wrapper'>\n                <div className='col s9 pull-s1'>\n                  <NumberInputField\n                    label={datum ? `${name}: ${datum}` : name}\n                    id={id}\n                    onChange={e =>\n                      dispatch({\n                        id,\n                        name,\n                        datum: e.target.value,\n                      })\n                    }\n                  />\n                </div>\n                <button className='white-text secondary-content'>Save</button>\n              </div>\n            </form>\n          ))}\n    </li>\n  )\n}\n\nexport default compose(\n  graphql(getWorkoutById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.workout.id,\n        },\n      }\n    },\n    name: 'getWorkoutById',\n  }),\n  graphql(updateUserDefinedDataForWorkout, { name: 'updateUserDefinedDataForWorkout' })\n)(UserDefinedDataForWorkout)\n","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\n\nexport default function Modal({ actions, content, id, labels }) {\n  useEffect(() => {\n    M.AutoInit()\n  }, [])\n\n  return (\n    <>\n      <div className=\"modal\" id={id}>\n        <div className=\"modal-content\">\n          { content }\n          <div className=\"modal-footer\">\n            <button\n              className=\"modal-close btn-flat\"\n              onClick={ actions.proceed }\n            >\n              {labels.proceed}\n            </button>\n            <button className=\"modal-close btn-flat\">{labels.cancel}</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\n\nexport default ({ collapsible, header, items }) => {\n  const [collapsed, setCollapsed] = useState(false)\n  return (\n    <ul className=\"collection with-header z-depth-1\">\n      <li className=\"collection-header grey darken-3 white-text left-align\">\n\n        {header}\n\n        { collapsible && \n          <i\n            className=\"material-icons secondary-content white-text\"\n            onClick={ () => setCollapsed(!collapsed) }\n          >\n\n            { collapsed\n              ? <i className=\"material-icons\">keyboard_arrow_up</i>\n              : <i className=\"material-icons\">keyboard_arrow_down</i>\n            }\n\n          </i>\n        }\n\n      </li>\n\n      { collapsible\n        ? collapsed\n          ? null\n          : items\n        : items\n      }  \n\n    </ul>\n  )\n}","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport ExecuteSet from './execute_set/ExecuteSet'\nimport WorkoutConditions from './WorkoutConditions'\nimport UserDefinedDataForWorkout from './UserDefinedDataForWorkout'\nimport Modal from '../../components/Modal(improved)'\nimport Collection from '../../components/Collection'\n\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport { UPDATE_WORKOUT_COMPLETED_MUTATION } from './Mutations'\n\n// Convert Conditions and UserDefinedData to be in drawers/tabs\n\nfunction ExecuteWokout(props) {\n  const { loading, Workout: workout } = props.getWorkoutById\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  console.log(workout)\n\n  const userId = workout.user.id\n  const [done, setDone] = useState(false)\n  const { sets, conditions } = workout\n  const [skippedSets, setSkippedSets] = useState([])\n  const date = new Date()\n\n  let modalText = null\n\n  const nullConditions = conditions\n    ? Object.keys(workout.conditions).filter(key => workout.conditions[key] === null)\n    : []\n\n  const incompleteSets = workout.sets\n    .filter(set => !set.completed)\n    .filter(set => skippedSets.findIndex(s => s.id === set.id) === -1)\n\n  const [everythingComplete, setEverythingComplete] = useState(\n    !nullConditions.length && !incompleteSets.length\n  )\n\n  if (!incompleteSets.length && !nullConditions.length) {\n    if (!everythingComplete) {\n      setEverythingComplete(true)\n    }\n  } else {\n    let text = {}\n    if (nullConditions.length) text.nullConditions = nullConditions\n    if (incompleteSets.length) text.incompleteSets = incompleteSets\n    if (everythingComplete) setEverythingComplete(false)\n    modalText = formatModalText(text)\n  }\n\n  const updateSkippedSets = set => {\n    if (skippedSets.some(s => s.id === set.id)) {\n      setSkippedSets(skippedSets.filter(s => s.id !== set.id))\n    } else {\n      setSkippedSets([...skippedSets, set])\n    }\n  }\n\n  const editWorkout = () => {\n    props.history.push({\n      pathname: `/create/workout/${workout.id}`,\n      state: {\n        userId,\n        from: `/workout/${workout.id}`,\n      },\n    })\n  }\n\n  const completeWorkout = () => {\n    props\n      .updateWorkoutCompleted({\n        variables: {\n          id: workout.id,\n          completed: true,\n          date: String(date),\n        },\n      })\n      .then(\n        res => {\n          setDone(true)\n          console.log('result:', res)\n          setTimeout(() => props.history.push('/workouts'), 750)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (!sets || !sets.length) {\n    return <div className='container'>There's nothing here!</div>\n  }\n  return (\n    <div className='container execute-workout-container'>\n      <Modal\n        actions={{ proceed: completeWorkout }}\n        content={modalText}\n        id='modal'\n        labels={{ proceed: 'Proceed', cancel: 'Cancel' }}\n      />\n\n      {done && (\n        <div className='execute-workout-complete'>\n          <i className='material-icons'>done_outline</i>\n        </div>\n      )}\n\n      <Collection\n        collapsible\n        header='Conditions:'\n        items={<WorkoutConditions workout={workout} />}\n      />\n\n      <Collection\n        header={\n          <>\n            <p>{date.toLocaleDateString('en-US')}</p>\n            <p>{workout.description}</p>\n          </>\n        }\n        items={\n          <>\n            {sets.map((set, idx) => (\n              <ExecuteSet\n                key={set.id}\n                number={idx + 1}\n                set={set}\n                skip={updateSkippedSets}\n              />\n            ))}\n            <UserDefinedDataForWorkout workout={workout} />\n          </>\n        }\n      />\n\n      <button className='btn-flat' onClick={editWorkout}>\n        Edit Workout\n      </button>\n\n      {everythingComplete ? (\n        <button className='btn-flat' onClick={completeWorkout}>\n          Complete Workout\n        </button>\n      ) : (\n        <button className='modal-trigger btn-flat' data-target='modal'>\n          Complete Workout\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default withRouter(\n  compose(\n    graphql(getWorkoutById, {\n      options: props => {\n        return {\n          variables: {\n            id: props.match.params.id,\n          },\n        }\n      },\n      name: 'getWorkoutById',\n    }),\n    graphql(UPDATE_WORKOUT_COMPLETED_MUTATION, { name: 'updateWorkoutCompleted' })\n  )(ExecuteWokout)\n)\n\nfunction formatModalText(modalText) {\n  return (\n    <div className='left-align'>\n      {modalText.nullConditions && (\n        <ul>\n          You haven't entered data for these conditions:\n          {modalText.nullConditions.map((c, i) => (\n            <li key={i}>{c}</li>\n          ))}\n        </ul>\n      )}\n      {modalText.incompleteSets && <p>Not all sets are complete!</p>}\n      <p>Are you sure you want to continue?</p>\n    </div>\n  )\n}\n","import React from 'react'\n\n\nfunction TextAreaField({ icon, id, label, onChange }) {\n  \n  return (\n    <div className=\"input-field\">\n      <i className=\"material-icons prefix\">{ icon || 'notes' }</i>\n      <label htmlFor={ id }>{ label }</label>\n      <textarea\n        className=\"materialize-textarea\"\n        id={ id }\n        onChange={ onChange }\n      >\n      </textarea>\n    </div>\n  )\n}\n\n\nexport default TextAreaField","import React from 'react'\n\nexport default ({ newProgram, setDone }) => (\n  <>\n    <h4>{newProgram.name}</h4>\n    <p>{newProgram.description}</p>\n  </>\n)\n","import React from 'react'\n\nexport default props => (\n  <div className='container'>\n    <div className='card blue-grey darken-1'>\n      <div className='card-content white-text'>\n        <span className='card-title'>Success!</span>\n        {props.children}\n      </div>\n      <div className='card-action'>\n        <button className='btn-flat' onClick={props.setDone}>\n          Done\n        </button>\n      </div>\n    </div>\n  </div>\n)\n","import { gql } from 'apollo-boost'\n\nexport const ADD_PROGRAM_TO_USER_MUTATION = gql`\n  mutation ADD_PROGRAM_TO_USER_MUTATION($programId: ID!, $userId: ID!) {\n    addToUserPrograms(programsProgramId: $programId, userUserId: $userId) {\n      programsProgram {\n        id\n        name\n        description\n      }\n    }\n  }\n`\n\nexport const CREATE_PROGRAM_MUTATION = gql`\n  mutation CREATE_PROGRAM_MUTATION($name: String!, $description: String) {\n    createProgram(name: $name, description: $description) {\n      name\n      description\n      id\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { Redirect } from 'react-router-dom'\n\n// Components\nimport TextInputField from '../../components/TextInputField'\nimport TextAreaField from '../../components/TextAreaField'\nimport Loader from '../../components/Loader'\nimport Success from './Success'\nimport Wrapper from '../../components/SuccessWrapper'\n\n// Queries\n// import addProgram from '../../graphql/mutations/addProgram'\nimport { ADD_PROGRAM_TO_USER_MUTATION, CREATE_PROGRAM_MUTATION } from './Mutations'\n\nfunction CreateProgram({ createProgram, addProgramToUser, userId }) {\n  const [name, setName] = useState(null)\n  const [description, setDescription] = useState(null)\n  const [newProgram, setNewProgram] = useState(null)\n\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [done, setDone] = useState(false)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    setLoading(true)\n\n    createProgram({\n      variables: {\n        name,\n        description,\n      },\n    })\n      .then(({ data: { createProgram: { id: programId } } }) => {\n        // console.log(res)\n        return addProgramToUser({\n          variables: {\n            userId,\n            programId, //: res.data.createProgram.id,\n          },\n        })\n      })\n      .then(\n        ({\n          data: {\n            addToUserPrograms: { programsProgram: newProgram },\n          },\n        }) => {\n          console.log(newProgram)\n          setLoading(false)\n          setNewProgram(newProgram)\n          setSuccess(true)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (done) return <Redirect to='/' />\n  if (loading) return <Loader />\n  if (success)\n    return (\n      <Wrapper setDone={setDone}>\n        <Success newProgram={newProgram} />\n      </Wrapper>\n    )\n  return (\n    <div className='container'>\n      <form onSubmit={handleSubmit}>\n        <TextInputField\n          id='program-name'\n          label='Give your new program a name:'\n          onChange={e => setName(e.target.value)}\n        />\n\n        <TextAreaField\n          id='program-description'\n          label='Describe your new program (optional):'\n          onChange={e => setDescription(e.target.value)}\n        />\n\n        <button className='btn red darken-3'>Create!</button>\n      </form>\n\n      {/* <button onClick={() => setDone(true)}>Home</button> */}\n    </div>\n  )\n}\n\nexport default compose(\n  graphql(CREATE_PROGRAM_MUTATION, { name: 'createProgram' }),\n  graphql(ADD_PROGRAM_TO_USER_MUTATION, { name: 'addProgramToUser' })\n)(CreateProgram)\n","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\n\nfunction Datepicker({ id, inline, label, setDate }) {\n  useEffect(() => {\n    //let elem = document.querySelector('.datepicker');\n    const instance = M.Datepicker.init(document.querySelector('.datepicker'), {\n      onSelect: newDate => setDate(String(newDate.getTime())),\n      defaultDate: new Date(),\n      setDefaultDate: true,\n    })\n\n    return () => instance.destroy()\n  }, [])\n\n  return (\n    <>\n      <div className='input-field' style={inline && { display: 'inline-block' }}>\n        <i className='material-icons prefix'>calendar_today</i>\n        <label htmlFor={id}>{label}</label>\n        <input className='datepicker' id={id} type='text' />\n      </div>\n    </>\n  )\n}\n\nexport default Datepicker\n","import { gql } from 'apollo-boost'\n\n\n const deleteExercise = gql`\n  mutation ($id: ID!) {\n    deleteExercise(id: $id) {\n      id\n      name\n    }\n  }\n`\n\nexport default deleteExercise","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from '../../graphql/queries/getWorkoutById'\n\nexport {\n  default as DELETE_EXERCISE_MUTATION,\n} from '../../graphql/mutations/deleteExercise'\n\nexport const CREATE_WORKOUT_MUTATION = gql`\n  mutation CREATE_WORKOUT_MUTATION(\n    $date: String!\n    $description: String\n    $userId: ID\n    $programId: ID\n  ) {\n    createWorkout(\n      date: $date\n      description: $description\n      userId: $userId\n      programId: $programId\n      conditions: {}\n    ) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n\nexport const CREATE_WORKOUT_FIELD_MUTATION = gql`\n  mutation CREATE_WORKOUT_FIELD_MUTATION($name: String!) {\n    createWorkoutData(name: $name) {\n      id\n      name\n      value\n    }\n  }\n`\n\nexport const ADD_FIELD_TO_WORKOUT_MUTATION = gql`\n  mutation ADD_FIELD_TO_WORKOUT_MUTATION($workoutId: ID!, $fieldId: ID!) {\n    addToDataOnWorkout(dataWorkoutDataId: $fieldId, workoutWorkoutId: $workoutId) {\n      workoutWorkout {\n        id\n        data {\n          id\n          name\n          value\n        }\n      }\n    }\n  }\n`\n\nexport const DELETE_WORKOUT_DATA_FIELD_MUTATION = gql`\n  mutation DELETE_WORKOUT_DATA_FIELD_MUTATION($id: ID!) {\n    deleteWorkoutData(id: $id) {\n      id\n      name\n      value\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\nimport { Redirect, withRouter } from 'react-router-dom'\n\n// Components\nimport Datepicker from '../../components/Datepicker'\nimport TextAreaField from '../../components/TextAreaField'\n\nimport { CREATE_WORKOUT_MUTATION } from './Mutations'\n\nfunction SetupWorkout(props) {\n  const [description, setDescription] = useState(null)\n  const [date, setDate] = useState(String(Date.now()))\n  const [canceled, setCanceled] = useState(false)\n  const [workout, setWorkout] = useState(null)\n\n  const { userId } = props\n  const { programId } = props.location.state\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    props\n      .createWorkout({\n        variables: {\n          date,\n          description,\n          userId,\n          programId: programId || null,\n        },\n      })\n      .then(\n        ({ data: { createWorkout: workout } }) => {\n          console.log(workout)\n          setWorkout(workout)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (canceled) {\n    return <Redirect to='/create' />\n  } else if (workout) {\n    return (\n      <Redirect\n        to={{\n          pathname: `/create/workout/${workout.id}`,\n          state: { userId, workout },\n        }}\n      />\n    )\n  }\n  return (\n    <div className='container'>\n      <form className='container' onSubmit={handleSubmit}>\n        <p>{props.programId}</p>\n\n        <Datepicker id='date' label='Date (defaults to today)' setDate={setDate} />\n\n        <TextAreaField\n          id='workout-description'\n          label='Description (optional)'\n          onChange={e => setDescription(e.target.value)}\n        />\n\n        <button className='btn red darken-3'>Let's Go!</button>\n      </form>\n\n      <div className='section'>\n        <button className='btn grey' onClick={() => setCanceled(true)}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(\n  graphql(CREATE_WORKOUT_MUTATION, { name: 'createWorkout' })(SetupWorkout)\n)\n","import React, { useState } from 'react'\nimport { compose, graphql } from 'react-apollo'\nimport M from 'materialize-css'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport '../../ListTransitions.css'\n\nimport Modal from '../../components/Modal(improved)'\n\nimport getUserById from '../../graphql/queries/getUserById'\nimport { DELETE_EXERCISE_MUTATION } from './Mutations'\n\nfunction ExerciseList({ data, setExercise, deleteExercise }) {\n  if (data.loading) {\n    return <p className='container'>Loading...</p>\n  }\n\n  const [listVisible, setListVisible] = useState(true)\n\n  const { exercises } = data.User\n\n  const displayExercise = exercise => (\n    <li className='collection-item' key={exercise.id}>\n      <span onClick={() => setExercise(exercise)}>{exercise.name}</span>\n      <i\n        className='material-icons secondary-content grey-text modal-trigger'\n        data-target={`delete-exercise-${exercise.id}-modal`}\n      >\n        remove\n      </i>\n\n      <Modal\n        id={`delete-exercise-${exercise.id}-modal`}\n        content={`Are you sure you want to delete \"${\n          exercise.name\n        }?\" This action will remove the exercise everywhere, and it cannot be undone.`}\n        actions={{ proceed: () => handleRemove(exercise.id) }}\n        labels={{ proceed: 'Delete', cancel: 'Cancel' }}\n      />\n    </li>\n  )\n\n  function handleRemove(id) {\n    deleteExercise({\n      variables: { id },\n      refetchQueries: ['GET_USER_QUERY'],\n    }).then(\n      ({\n        data: {\n          deleteExercise: { name },\n        },\n      }) => M.toast({ html: `Successfully deleted exercise \"${name}.\"` }),\n      err => console.log(err)\n    )\n  }\n\n  return (\n    <>\n      <ul className='collection with-header z-depth-1'>\n        <li className='collection-header grey darken-3 white-text left-align'>\n          Or Select an Exercise:\n          <span\n            className='secondary-content'\n            onClick={() => setListVisible(!listVisible)}\n          >\n            {listVisible ? (\n              <i className='material-icons white-text'>keyboard_arrow_up</i>\n            ) : (\n              <i className='material-icons white-text'>keyboard_arrow_down</i>\n            )}\n          </span>\n        </li>\n        <ReactCSSTransitionGroup\n          transitionName='list-transition'\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {listVisible && exercises.map(displayExercise)}\n        </ReactCSSTransitionGroup>\n      </ul>\n    </>\n  )\n}\n\nexport default compose(\n  graphql(DELETE_EXERCISE_MUTATION, { name: 'deleteExercise' }),\n  graphql(getUserById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.userId,\n        },\n      }\n    },\n  })\n)(ExerciseList)\n","import { gql } from 'apollo-boost'\n\n\nconst updateExerciseName = gql`\n  mutation ($name: String!, $id: ID!) {\n    updateExerciseName(name: $name, id: $id) {\n      name\n      id\n      description\n    }\n  }\n`\n\nexport default updateExerciseName","import { gql } from 'apollo-boost'\n\n\nconst updateExerciseDescription = gql`\n  mutation ($description: String!, $id: ID!) {\n    updateExerciseDescription(description: $description, id: $id) {\n      name\n      id\n      description\n    }\n  }\n`\n\nexport default updateExerciseDescription","import React from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport ContentEditable from 'react-contenteditable'\nimport Loader from '../../components/Loader'\n\n// Queries\nimport getExerciseQuery from '../../graphql/queries/getExercise'\nimport updateExerciseName from '../../graphql/mutations/updateExerciseName'\nimport updateExerciseDescription from '../../graphql/mutations/updateExerciseDescription'\n\nfunction ExerciseDescription(props) {\n  const { loading, Exercise: exercise } = props.data\n  if (loading) return <Loader />\n\n  const handleNameBlur = e => {\n    props\n      .updateExerciseName({\n        variables: {\n          name: e.target.textContent,\n          id: props.exerciseId,\n        },\n        refetchQueries: ['GET_USER_QUERY'],\n      })\n      .catch(err => console.log(err))\n  }\n\n  const handleDescriptionBlur = e => {\n    props\n      .updateExerciseDescription({\n        variables: {\n          description: e.target.textContent,\n          id: props.exerciseId,\n        },\n        refetchQueries: ['GET_USER_QUERY'],\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div className='card grey lighten-3'>\n      <div className='card-content'>\n        {exercise ? (\n          <>\n            <ContentEditable\n              className='card-title'\n              onBlur={handleNameBlur}\n              html={exercise.name}\n            />\n\n            <ContentEditable\n              onBlur={handleDescriptionBlur}\n              html={exercise.description || ''}\n            />\n          </>\n        ) : (\n          <div className='card-title'>Loading...</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default compose(\n  graphql(getExerciseQuery, {\n    options: props => {\n      return {\n        variables: {\n          id: props.exerciseId,\n        },\n      }\n    },\n  }),\n  graphql(updateExerciseName, { name: 'updateExerciseName' }),\n  graphql(updateExerciseDescription, { name: 'updateExerciseDescription' })\n)(ExerciseDescription)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nfunction CreateSetButtonsPanel({ setNumber, workout, exercise, setExercise }) {\n  return (\n    <div className=\"card grey lighten-3\">\n      <div className=\"card-action\">\n\n        <Link to={{\n          pathname: '/create/set',\n          state: { exercise, setNumber, workout }\n        }}>Create a set</Link>\n        {/* <button\n          // className=\"waves-effect waves-light btn-small grey darken-3\"\n          onClick={ () => setCreateSet(true) }\n        >\n          Create a set\n        </button> */}\n        <button \n          // className=\"waves-effect waves-light btn-small grey darken-3\"\n          onClick={ () => setExercise(null) }\n        >\n          Close description\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateSetButtonsPanel","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport '../../ListTransitions.css'\n\n// Components\nimport TextInputField from '../../components/TextInputField'\nimport Loader from '../../components/Loader'\n\nimport {\n  CREATE_WORKOUT_FIELD_MUTATION,\n  ADD_FIELD_TO_WORKOUT_MUTATION,\n  DELETE_WORKOUT_DATA_FIELD_MUTATION,\n} from './Mutations'\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\n\nfunction AddCustomFieldsToWorkout(props) {\n  const [newField, setNewField] = useState(null)\n  const [showForm, setShowForm] = useState(false)\n\n  const { loading, Workout: workout } = props.getWorkoutById\n  if (loading) {\n    return <Loader />\n  }\n  const fields = workout.data\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    props\n      .createField({\n        variables: {\n          name: newField,\n        },\n      })\n      .then(res => {\n        console.log(res)\n        return props.addFieldToWorkout({\n          variables: {\n            fieldId: res.data.createWorkoutData.id,\n            workoutId: workout.id,\n          },\n          refetchQueries: ['GET_WORKOUT_QUERY'],\n        })\n      })\n      .then(\n        res => {\n          console.log(res)\n          document.getElementById('field-name').value = null\n        },\n        err => console.log(err)\n      )\n  }\n\n  const handleRemove = e => {\n    props\n      .deleteField({\n        variables: {\n          id: e.target.id,\n        },\n        refetchQueries: ['GET_WORKOUT_QUERY'],\n      })\n      .then(res => console.log('deleted:', res), err => console.log(err))\n  }\n\n  return (\n    <>\n      <ul className='collection with-header z-depth-1'>\n        <li className='collection-header grey darken-3 white-text left-align'>\n          {fields && fields.length\n            ? 'Custom fields for this workout:'\n            : 'No custom fields for this workout'}\n\n          <i\n            className='material-icons secondary-content white-text'\n            onClick={() => setShowForm(!showForm)}\n          >\n            {showForm ? 'keyboard_arrow_up' : 'add'}\n          </i>\n\n          {showForm && (\n            <>\n              <form onSubmit={handleSubmit}>\n                <TextInputField\n                  id='field-name'\n                  label='Name'\n                  onChange={e => setNewField(e.target.value)}\n                />\n\n                <button className='btn-flat white-text'>Save</button>\n              </form>\n            </>\n          )}\n        </li>\n        <ReactCSSTransitionGroup\n          transitionName='list-transition'\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {fields &&\n            fields.map(field => (\n              <li className='collection-item' key={field.id}>\n                {field.name}\n                <i\n                  id={field.id}\n                  className='material-icons secondary-content grey-text'\n                  onClick={handleRemove}\n                >\n                  remove\n                </i>\n              </li>\n            ))}\n        </ReactCSSTransitionGroup>\n      </ul>\n    </>\n  )\n}\n\nexport default compose(\n  graphql(CREATE_WORKOUT_FIELD_MUTATION, { name: 'createField' }),\n  graphql(ADD_FIELD_TO_WORKOUT_MUTATION, { name: 'addFieldToWorkout' }),\n  graphql(DELETE_WORKOUT_DATA_FIELD_MUTATION, { name: 'deleteField' }),\n  graphql(getWorkoutById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.workout.id,\n        },\n      }\n    },\n    name: 'getWorkoutById',\n  })\n)(AddCustomFieldsToWorkout)\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter, Link, Redirect } from 'react-router-dom'\n\n// Components\nimport ExerciseList from './ExerciseList'\nimport ExerciseDescription from './ExerciseDescription'\nimport CreateSetButtonsPanel from './create_set/CreateSetButtonsPanel'\nimport Workout from '../display_workout/Workout'\n\nimport getUserById from '../../graphql/queries/getUserById'\nimport getWorkoutById from '../../graphql/queries/getWorkoutById'\nimport AddCustomFieldsToWorkout from './AddCustomDataToWorkout'\n\nfunction CreateWorkout(props) {\n  if (props.getUserById.loading || props.getWorkoutById.loading) {\n    return null\n  }\n\n  //console.log(props)\n  const [exercise, setExercise] = useState(props.location.state.exercise)\n  const [done, setDone] = useState(false)\n  const { Workout: workout } = props.getWorkoutById\n  const { userId } = props\n\n  if (done) {\n    if (props.location.state.from === `/workout/${workout.id}`) {\n      return <Redirect to={`/workout/${workout.id}`} />\n    }\n    return <Redirect to='/workouts' />\n  }\n  // return null\n  return (\n    <div className='container'>\n      <Workout editable workoutId={workout.id} />\n\n      {exercise && (\n        <>\n          <ExerciseDescription exerciseId={exercise.id} />\n          <CreateSetButtonsPanel\n            setExercise={setExercise}\n            exercise={exercise}\n            setNumber={workout.sets ? workout.sets.length : 0}\n            workout={workout}\n          />\n        </>\n      )}\n\n      <ul className='collection with-header z-depth-1'>\n        <li className='collection-header grey darken-3 white-text left-align'>\n          <Link\n            to={{\n              pathname: '/create/exercise',\n              state: { userId, workout },\n            }}\n          >\n            Create a new exercise\n          </Link>\n          <span className='secondary-content'>\n            <i className='material-icons white-text'>create</i>\n          </span>\n        </li>\n      </ul>\n\n      <ExerciseList userId={userId} setExercise={setExercise} />\n\n      <AddCustomFieldsToWorkout workout={workout} />\n\n      <button onClick={() => setDone(true)}>Done</button>\n    </div>\n  )\n}\n\nexport default withRouter(\n  compose(\n    graphql(getUserById, {\n      options: props => {\n        return {\n          variables: {\n            id: props.location.state.userId,\n          },\n        }\n      },\n      name: 'getUserById',\n    }),\n    graphql(getWorkoutById, {\n      options: props => {\n        return {\n          variables: {\n            id: props.match.params.id,\n          },\n        }\n      },\n      name: 'getWorkoutById',\n    })\n  )(CreateWorkout)\n)\n","import React from 'react'\n\nexport default ({ setNewField, forwardedRef }) => (\n  <>\n    <label htmlFor='name'>Name your custom field:</label>\n    <input type='text' ref={forwardedRef} onChange={e => setNewField(e.target.value)} />\n  </>\n)\n","import React, { useState, useRef } from 'react'\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\nimport '../../ListTransitions.css'\n\nimport Modal from '../../components/Modal(improved)'\nimport ModalContent from './CreateNewField'\n\nexport default ({ fields, setFields, defaultFields }) => {\n  const [newField, setNewField] = useState(null)\n  const modalInput = useRef(null)\n\n  const removeField = e => {\n    e.preventDefault()\n    setFields(fields.filter(f => f !== e.target.previousElementSibling.textContent))\n  }\n\n  const addField = e => {\n    e.preventDefault()\n    setFields([...fields, newField])\n    setNewField(null)\n    modalInput.current.value = null\n  }\n\n  const resetFields = e => {\n    e.preventDefault()\n    setFields(defaultFields)\n  }\n\n  return (\n    <div className='section'>\n      <ul className='container'>\n        <ReactCSSTransitionGroup\n          transitionName='list-transition'\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          <li className='row flow-text'>Fields to track for this exercise:</li>\n          {fields.map(field => (\n            <li key={field} className='row valign-wrapper'>\n              <span className='col s1'>-</span>\n              <span className='col s10 left-align'>{field}</span>\n              <i className='material-icons grey-text col s1' onClick={removeField}>\n                remove_circle_outline\n              </i>\n            </li>\n          ))}\n        </ReactCSSTransitionGroup>\n        <li className='row valign-wrapper'>\n          <span className='col s1'>-</span>\n          <span\n            className='col s10 left-align btn-flat modal-trigger'\n            data-target='new-field-modal'\n          >\n            Add custom field\n          </span>\n          <i className='material-icons grey-text col s1' onClick={resetFields}>\n            undo\n          </i>\n          {/* <button className='btn-flat'>Reset defaults</button> */}\n        </li>\n      </ul>\n\n      <Modal\n        id='new-field-modal'\n        actions={{ proceed: addField }}\n        content={<ModalContent setNewField={setNewField} forwardedRef={modalInput} />}\n        labels={{ proceed: 'Save', cancel: 'Cancel' }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ newExercise }) => (\n  <>\n    <h4>{newExercise.name}</h4>\n    <p>{newExercise.description}</p>\n    <ul>\n      {newExercise.fields.map(field => (\n        <li key={field}>{field}</li>\n      ))}\n    </ul>\n  </>\n)\n","import { gql } from 'apollo-boost'\n\nexport const CREATE_EXERCISE_MUTATION = gql`\n  mutation CREATE_EXERCISE_MUTATION($name: String!, $description: String) {\n    createExercise(name: $name, description: $description) {\n      name\n      description\n      id\n    }\n  }\n`\n\nexport const CREATE_EXERCISE_FIELD_MUTATION = gql`\n  mutation CREATE_EXERCISE_FIELD_MUTATION($name: String!) {\n    createExerciseField(name: $name) {\n      name\n      id\n    }\n  }\n`\n\nexport const ADD_EXERCISE_TO_USER_MUTATION = gql`\n  mutation ADD_EXERCISE_TO_USER_MUTATION($userId: ID!, $exerciseId: ID!) {\n    addToUserExercises(exercisesExerciseId: $exerciseId, userUserId: $userId) {\n      userUser {\n        name\n        id\n      }\n      exercisesExercise {\n        name\n        id\n      }\n    }\n  }\n`\n\nexport const ADD_FIELDS_TO_EXERCISE_MUTATION = gql`\n  mutation ADD_FIELDS_TO_EXERCISE_MUTATION($fieldId: ID!, $exerciseId: ID!) {\n    addToExerciseFieldsOnExercise(\n      fieldsExerciseFieldId: $fieldId\n      exerciseExerciseId: $exerciseId\n    ) {\n      exerciseExercise {\n        name\n        id\n      }\n      fieldsExerciseField {\n        name\n        id\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\n\n// Components\nimport TextInputField from '../../components/TextInputField'\nimport TextAreaField from '../../components/TextAreaField'\nimport ExerciseFields from './ExerciseFields'\nimport Loader from '../../components/Loader'\nimport Success from './Success'\nimport Wrapper from '../../components/SuccessWrapper'\n\nimport {\n  CREATE_EXERCISE_MUTATION,\n  CREATE_EXERCISE_FIELD_MUTATION,\n  ADD_EXERCISE_TO_USER_MUTATION,\n  ADD_FIELDS_TO_EXERCISE_MUTATION,\n} from './Mutations'\n\nfunction CreateExercise(props) {\n  const [name, setName] = useState(null)\n  const [description, setDescription] = useState(null)\n  const [newExercise, setNewExercise] = useState(null)\n  const defaultFields = ['Reps', 'Weight', 'Time']\n  const [fields, setFields] = useState(defaultFields)\n\n  const [loading, setLoading] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [done, setDone] = useState(false)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    console.log('submitting')\n    setLoading(true)\n    // create new exercise && create new exercise fields\n    const createdExercise = props.createExercise({\n      variables: {\n        name,\n        description,\n      },\n    })\n\n    const createdFields = fields.map(field =>\n      props.createField({\n        variables: {\n          name: field,\n        },\n      })\n    )\n\n    Promise.all([createdExercise, ...createdFields])\n      .then(\n        // link fields to exercise && link exercise to user\n        ([\n          {\n            data: { createExercise: exercise },\n          },\n          ...fields\n        ]) => {\n          setNewExercise({\n            name: exercise.name,\n            description: exercise.description,\n            fields: fields.map(f => f.data.createExerciseField.name),\n          })\n          return Promise.all([\n            props.addExerciseToUser({\n              variables: {\n                exerciseId: exercise.id,\n                userid: props.userId,\n              },\n            }),\n            ...fields.map(({ data: { createExerciseField: field } }) =>\n              props.addFieldsToExercise({\n                variables: {\n                  fieldId: field.id,\n                  exerciseId: exercise.id,\n                },\n              })\n            ),\n          ])\n        }\n      )\n      .then(\n        res => {\n          setLoading(false)\n          setSuccess(true)\n          console.log(newExercise)\n        },\n        err => console.log(err)\n      )\n  }\n\n  if (done) {\n    props.history.goBack()\n    return null\n  }\n  if (loading) return <Loader />\n  if (success)\n    return (\n      <Wrapper setDone={setDone}>\n        <Success newExercise={newExercise} />\n      </Wrapper>\n    )\n  else {\n    return (\n      <>\n        <form className='container' onSubmit={handleSubmit}>\n          <TextInputField\n            id='exercise-name'\n            label='Name'\n            onChange={e => setName(e.target.value)}\n          />\n\n          <TextAreaField\n            id='exercise-description'\n            label='Description (optional)'\n            onChange={e => setDescription(e.target.value)}\n          />\n\n          <ExerciseFields\n            fields={fields}\n            setFields={setFields}\n            defaultFields={defaultFields}\n          />\n          <button type='submit' className='btn red darken-3'>\n            Save\n          </button>\n        </form>\n\n        <div className='section'>\n          <button className='btn grey' onClick={() => setDone(true)}>\n            Cancel\n          </button>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(\n  compose(\n    graphql(CREATE_EXERCISE_MUTATION, { name: 'createExercise' }),\n    graphql(CREATE_EXERCISE_FIELD_MUTATION, { name: 'createField' }),\n    graphql(ADD_EXERCISE_TO_USER_MUTATION, { name: 'addExerciseToUser' }),\n    graphql(ADD_FIELDS_TO_EXERCISE_MUTATION, { name: 'addFieldsToExercise' })\n  )(CreateExercise)\n)\n","import { gql } from 'apollo-boost'\n\nexport const CREATE_SET_MUTATION = gql`\n  mutation CREATE_SET_MUTATION(\n    $number: Int!\n    $data: [SetdataSetDataField!]\n    $notes: String\n    $exerciseId: ID!\n    $workoutId: ID!\n  ) {\n    createSet(\n      number: $number\n      notes: $notes\n      exerciseId: $exerciseId\n      workoutId: $workoutId\n      data: $data\n    ) {\n      id\n      data {\n        id\n        name\n        value\n      }\n      number\n      notes\n      workout {\n        id\n      }\n      exercise {\n        id\n        name\n        description\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { graphql } from 'react-apollo'\nimport { withRouter, Redirect } from 'react-router-dom'\n\n// Components\nimport ExerciseDescription from '../ExerciseDescription'\nimport NumberInputField from '../../../components/NumberInputField'\nimport TextAreaField from '../../../components/TextAreaField'\n\nimport { CREATE_SET_MUTATION } from './Mutations'\n\nfunction CreateSet(props) {\n  const { exercise, setNumber, workout } = props.location.state\n\n  const [notes, setNotes] = useState(null)\n  const [fields, setFields] = useState(exercise.fields)\n  const [numberOfSets, setNumberOfSets] = useState(1)\n  const [done, setDone] = useState(false)\n\n  if (done) {\n    return (\n      <Redirect\n        to={{\n          pathname: `/create/workout/${workout.id}`,\n          state: { workout },\n        }}\n      />\n    )\n  }\n\n  function displayFields() {\n    return fields.map(({ name, id }, idx) => (\n      <div key={id}>\n        <NumberInputField\n          key={id}\n          id={`${name}-field`}\n          label={`${name} (optional)`}\n          onChange={e => {\n            const updatedFields = [...fields]\n            updatedFields[idx].value = Number(e.target.value)\n            setFields(updatedFields)\n          }}\n        />\n      </div>\n    ))\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n\n    const ps = []\n    const data = fields.map(({ name, value }) => {\n      return { name, value }\n    })\n    for (let i = 0; i < numberOfSets; i++) {\n      ps[i] = props.createSet({\n        variables: {\n          number: setNumber + i + 1,\n          data,\n          notes,\n          exerciseId: exercise.id,\n          workoutId: workout.id,\n        },\n      })\n    }\n\n    Promise.all(ps).then(() => setDone(true), err => console.log(err))\n  }\n\n  return (\n    <div className='container'>\n      <ExerciseDescription exerciseId={exercise.id} />\n\n      <form className='container' onSubmit={handleSubmit}>\n        {displayFields()}\n\n        <TextAreaField\n          id='notes-field'\n          label='Notes (optional)'\n          onChange={e => setNotes(e.target.value)}\n        />\n\n        <div className='row valign-wrapper'>\n          <div className='col s2 pull-s1'>\n            <button>Create</button>\n          </div>\n          <div className='col s2 pull-s4'>\n            <NumberInputField\n              defaultValue={numberOfSets}\n              id='number-of-sets-field'\n              onChange={e => setNumberOfSets(e.target.value)}\n            />\n          </div>\n        </div>\n      </form>\n\n      <button onClick={() => setDone(true)}>Cancel</button>\n    </div>\n  )\n}\n\nexport default withRouter(graphql(CREATE_SET_MUTATION, { name: 'createSet' })(CreateSet))\n","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\nimport { withRouter } from 'react-router-dom'\n\nconst Dropdown = ({ workout, actions, history }) => {\n  const { id } = workout\n  const dropdownId = `dropdown-${id}`\n\n  useEffect(() => {\n    const dropdownTriggers = document.querySelectorAll('.dropdown-trigger')\n    const instances = M.Dropdown.init(dropdownTriggers, {\n      coverTrigger: false,\n      constrainWidth: false,\n      closeOnClick: false,\n    })\n    return () => instances.forEach(i => i.destroy())\n  }, [])\n\n  return (\n    <>\n      <i\n        className='dropdown-trigger material-icons secondary-content grey-text'\n        data-target={dropdownId}\n      >\n        arrow_drop_down_circle\n      </i>\n\n      <ul id={dropdownId} className='dropdown-content grey-text'>\n        <li onClick={() => history.push(`/workout/${id}`)}>Let's do this</li>\n\n        <li onClick={() => actions.setUpdateDateMode(true)}>Change date</li>\n\n        <li className='divider' tabIndex='-1' />\n        <li>Save as template (coming soon)</li>\n\n        <li className='divider' tabIndex='-1' />\n        <li>\n          <i className='material-icons grey-text modal-trigger' data-target={id}>\n            delete\n          </i>\n        </li>\n      </ul>\n    </>\n  )\n}\n\nexport default withRouter(Dropdown)\n","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from '../../graphql/queries/getWorkoutById'\n\nexport default gql`\n  mutation REPEAT_WORKOUT_MUTATION(\n    $date: String!\n    $description: String\n    $userId: ID\n    $programId: ID\n    $data: [WorkoutdataWorkoutData!]\n    $sets: [WorkoutsetsSet!]\n  ) {\n    createWorkout(\n      date: $date\n      description: $description\n      userId: $userId\n      programId: $programId\n      sets: $sets\n      data: $data\n      conditions: {}\n    ) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import React from 'react'\nimport { Mutation } from 'react-apollo'\n\nimport REPEAT_WORKOUT_MUTATION from './Mutations'\n\nexport default ({ workout, history }) => {\n  const clonedWorkoutData = workout.data.map(x => ({\n    name: x.name,\n    value: x.value,\n    unit: x.unit,\n  }))\n\n  const clonedSets = workout.sets.map(x => ({\n    number: x.number,\n    notes: x.notes,\n    completed: false,\n    exerciseId: x.exercise.id,\n    data: x.data.map(y => ({ name: y.name, value: y.value })),\n  }))\n\n  return (\n    <Mutation mutation={REPEAT_WORKOUT_MUTATION}>\n      {repeatWorkout => (\n        <span\n          onClick={() => {\n            repeatWorkout({\n              variables: {\n                date: new Date(),\n                description: workout.description,\n                userId: workout.user.id,\n                programId: null, // get current program\n                data: clonedWorkoutData,\n                sets: clonedSets,\n              },\n            }).then(\n              ({\n                data: {\n                  createWorkout: { id },\n                },\n              }) => history.push(`/workout/${id}`),\n              err => console.log(err)\n            )\n          }}\n        >\n          Repeat this workout\n        </span>\n      )}\n    </Mutation>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport M from 'materialize-css'\nimport RepeatWorkout from './RepeatWorkout'\n\nexport default withRouter(({ workout, history }) => {\n  const dropdownId = `dropdown-${workout.id}`\n\n  useEffect(() => {\n    const dropdownTriggers = document.querySelectorAll('.dropdown-trigger')\n    const instances = M.Dropdown.init(dropdownTriggers, {\n      coverTrigger: false,\n      constrainWidth: false,\n      closeOnClick: false,\n    })\n    return () => instances.forEach(i => i.destroy())\n  }, [])\n\n  return (\n    <>\n      <i\n        className='dropdown-trigger material-icons secondary-content green-text'\n        data-target={dropdownId}\n      >\n        check\n      </i>\n\n      <ul id={dropdownId} className='dropdown-content grey-text'>\n        <RepeatWorkout workout={workout} history={history} />\n\n        <li className='divider' tabIndex='-1' />\n        <li>Save as template</li>\n      </ul>\n    </>\n  )\n})\n","import { gql } from 'apollo-boost'\n\n\n const deleteWorkout = gql`\n  mutation ($id: ID!) {\n    deleteWorkout(id: $id) {\n      id\n    }\n  }\n`\n\nexport default deleteWorkout","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from '../queries/getWorkoutById'\n\nexport default gql`\n  mutation UPDATE_WORKOUT_DATE_MUTATION($id: ID!, $date: String!) {\n    updateWorkout(id: $id, date: $date) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import React, { useState } from 'react'\nimport { graphql, compose } from 'react-apollo'\nimport moment from 'moment'\n\nimport Modal from '../../components/Modal(improved)'\nimport Workout from '../display_workout/Workout'\nimport DropdownNotCompleted from './DropdownNotCompleted'\nimport DropdownCompleted from './DropdownCompleted'\nimport Datepicker from '../../components/Datepicker'\n\nimport deleteWorkout from '../../graphql/mutations/deleteWorkout'\nimport getUserById from '../../graphql/queries/getUserById'\nimport updateWorkoutDate from '../../graphql/mutations/updateWorkoutDate'\n\nfunction WorkoutScheduled({\n  workout,\n  deleteWorkout,\n  peers,\n  setPeers,\n  updateWorkoutDate,\n}) {\n  const [date, setDate] = useState(workout.date)\n  const [updateDateMode, setUpdateDateMode] = useState(false)\n\n  const removeWorkout = id => {\n    deleteWorkout({\n      variables: { id },\n      refetchQueries: ['GET_USER_QUERY'],\n    }).then(\n      ({ data: { deleteWorkout } }) => {\n        console.log('deleted:', deleteWorkout)\n        setPeers(peers.filter(p => p.id !== deleteWorkout.id))\n      },\n      err => console.log(err)\n    )\n  }\n\n  const changeWorkoutDate = (id, date) => {\n    updateWorkoutDate({\n      variables: {\n        id,\n        date,\n      },\n      refetchQueries: [{ query: getUserById }],\n    }).then(\n      res => {\n        console.log(res)\n        setDate(date)\n        setUpdateDateMode(false)\n        setPeers(peers.sort((p1, p2) => Number(p1.date) - Number(p2.date)))\n        console.log(peers)\n      },\n      err => console.log(err)\n    )\n  }\n\n  return (\n    <div className='card grey lighten-3' key={workout.id}>\n      <div className='card-content'>\n        <div className='card-title'>\n          {updateDateMode ? (\n            <Datepicker inline setDate={date => changeWorkoutDate(workout.id, date)} />\n          ) : (\n            moment(Number(date)).format('LL')\n          )}\n          {workout.completed ? (\n            <DropdownCompleted workout={workout} />\n          ) : (\n            <DropdownNotCompleted workout={workout} actions={{ setUpdateDateMode }} />\n          )}\n        </div>\n\n        <p>{workout.description}</p>\n\n        <Workout workoutId={workout.id} />\n      </div>\n\n      <Modal\n        actions={{ proceed: () => removeWorkout(workout.id) }}\n        content={`Are you sure you want to delete workout for ${moment(\n          Number(date)\n        ).format('LL')}? This cannot be undone.`}\n        id={workout.id}\n        labels={{ proceed: 'Delete', cancel: 'Cancel' }}\n      />\n    </div>\n  )\n}\n\nexport default compose(\n  graphql(deleteWorkout, { name: 'deleteWorkout' }),\n  graphql(updateWorkoutDate, { name: 'updateWorkoutDate' })\n)(WorkoutScheduled)\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { graphql } from 'react-apollo'\n\nimport getUserById from '../../graphql/queries/getUserById'\n\nimport CarouselWorkout from './CarouselWorkout'\nimport Loader from '../../components/Loader'\n\nconst carouselStyles = {\n  // scrollSnapType: 'mandatory',\n  scrollSnapPointsY: 'repeat(100vw)',\n  scrollSnapType: 'x mandatory',\n  display: 'flex',\n  overflowX: 'scroll',\n}\n\nconst itemStyles = {\n  padding: '1rem',\n  minWidth: '100vw',\n  //height: '100vh',\n  scrollSnapAlign: 'start',\n  textAlign: 'center',\n  position: 'relative',\n}\n\nexport const buttonStyles = {\n  position: 'fixed',\n  bottom: '1.5rem',\n  right: '1.5rem',\n}\n\nfunction AllWorkouts({ getUserById, history }) {\n  const { loading, User: user } = getUserById\n  if (loading) return <Loader />\n\n  const { workouts } = user\n  //const workoutIds = workouts.map(workout => workout.id)\n  const [ownChildren, setOwnChildren] = useState(workouts)\n\n  useEffect(() => {\n    getUserById.refetch()\n  }, [ownChildren])\n\n  return (\n    <>\n      <div style={carouselStyles}>\n        {workouts.map(workout => (\n          <div key={workout.id} style={itemStyles}>\n            <CarouselWorkout\n              workout={workout}\n              peers={ownChildren}\n              setPeers={setOwnChildren}\n            />\n          </div>\n        ))}\n      </div>\n\n      <button\n        className='btn-floating red darken-3 z-depth-2'\n        style={buttonStyles}\n        onClick={() => history.push('/workouts/calendar')}\n      >\n        <i className='material-icons'>calendar_today</i>\n      </button>\n    </>\n  )\n}\n\nexport default withRouter(\n  graphql(getUserById, {\n    options: props => {\n      return {\n        variables: {\n          id: props.userId,\n        },\n      }\n    },\n    name: 'getUserById',\n  })(AllWorkouts)\n)\n","import moment from 'moment'\n\nexport default ({ month, year }) => {\n  const startDate = moment([year, month, 1])\n    .valueOf()\n    .toString()\n  const endDate = moment([\n    year,\n    month,\n    moment([year, month]).daysInMonth(),\n    23,\n    59,\n    59,\n    999,\n  ])\n    .valueOf()\n    .toString()\n\n  return [startDate, endDate]\n}\n","import React from 'react'\nimport moment from 'moment'\n\n\nexport const calInitState = { month: moment().month(), year: moment().year() }\n\nexport const calReducer = (state, action) => {\n  switch(action) {\n    case 'inc_month':\n      if (state.month === 11) return { month: 0, year: state.year + 1 }\n      else return { ...state, month: state.month + 1 }\n    case 'dec_month':\n      if (state.month === 0) return { month: 11, year: state.year - 1}\n      else return { ...state, month: state.month - 1 }\n    case 'inc_year':\n      return { ...state, year: state.year + 1 }\n    case 'dec_year':\n      return { ...state, year: state.year - 1 }\n    case 'reset':\n      return calInitState\n    default:\n      return state\n  }\n}\n\nexport default ({ state: { month, year }, dispatch }) => (\n  <>   \n    <div\n      className=\"valign-wrapper\"\n      style={{ padding: '1rem 1rem 0 1rem' }}\n    >\n      <i className=\"material-icons\" onClick={ () => dispatch('dec_year') } style={{flex: '10%'}}>\n        keyboard_arrow_left\n      </i>\n      <span style={{ flex: '10%' }}></span>\n      <h6 style={{flex: '60%'}}>{year}</h6>\n      <span style={{ flex: '10%' }}>{\n        month === calInitState.month && year === calInitState.year ? \n          null : \n          <i\n            className=\"material-icons white-text\"\n            \n            onClick={ () => dispatch('reset') }\n          >\n            refresh\n          </i>\n      }</span>\n      <i\n        className=\"material-icons\" onClick={ () => dispatch('inc_year') } style={{flex: '10%'}}>\n        keyboard_arrow_right\n      </i>\n    </div>\n\n    <div\n      className=\"valign-wrapper\"\n      style={{ padding: '1rem', position: 'relative' }}\n    >\n      <i\n        className=\"material-icons\"\n        onClick={ () => dispatch('dec_month') }\n        style={{ flex: '10%' }}\n      >\n        keyboard_arrow_left\n      </i>\n      <h4 style={{ flex: '80%' }}>{ moment().month(month).format('MMMM') }</h4>\n      <i\n        className=\"material-icons\"\n        onClick={ () => dispatch('inc_month') }\n        style={{ flex: '10%' }}\n      >\n        keyboard_arrow_right\n      </i>\n    </div>\n  </>\n)","import React, { useEffect } from 'react'\nimport M from 'materialize-css'\nimport { withRouter } from 'react-router-dom'\n\nimport RepeatWorkout from '../carousel/RepeatWorkout'\n\nconst CalendarModal = ({ content, history, id, workout }) => {\n  useEffect(() => {\n    M.AutoInit()\n  }, [])\n\n  return (\n    <>\n      <div className='modal' id={id}>\n        <div className='modal-content'>\n          {content}\n          <div className='modal-footer'>\n            <button className='modal-close btn-flat'>\n              {workout.completed ? (\n                <RepeatWorkout workout={workout} history={history} />\n              ) : (\n                <span onClick={() => history.push(`/workout/${id}`)}>Let's do this</span>\n              )}\n            </button>\n            <button className='modal-close btn-flat'>Close</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(CalendarModal)\n","import React from 'react'\nimport moment from 'moment'\n\nimport Modal from './CalendarModal'\nimport Workout from '../display_workout/Workout'\n\nexport default ({ date: { date, workout }, numDays }) => {\n  const isValidDate = date.date > 0 && numDays >= date.date\n  const currentMonth = moment().month()\n  const currentYear = moment().year()\n  const isPast =\n    (date.date < moment().date() &&\n      date.month <= currentMonth &&\n      date.year <= currentYear) ||\n    (date.month < currentMonth && date.year <= currentYear) ||\n    date.year < currentYear\n\n  return (\n    <>\n      <div\n        data-target={workout.id}\n        className={`left-align ${workout && 'modal-trigger'}`}\n        style={{\n          height: '6rem',\n          border: isValidDate ? '1px solid #424242' : '1px solid #bdbdbd',\n          borderRadius: '5%',\n          padding: '0 0.25em',\n          flex: 'calc(100% / 7)',\n          backgroundColor: !workout\n            ? 'none'\n            : workout.completed\n            ? '#a5d6a7'\n            : isPast\n            ? '#bdbdbd'\n            : '#ef9a9a',\n        }}\n      >\n        {isValidDate && date.date}\n      </div>\n\n      {workout && (\n        <Modal\n          id={workout.id}\n          content={\n            <>\n              <div>{workout.description}</div>\n              <Workout workoutId={workout.id} />\n            </>\n          }\n          workout={workout}\n        />\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport moment from 'moment'\n\nimport CalendarControls from './CalendarControls'\nimport CalendarCell from './CalendarCell'\n\n\nconst days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\n\nexport default ({ state: { month, year }, dispatch, workouts }) => {\n  const firstDay = moment().year(year).month(month).date(1).day()\n  const numDays = moment({ year, month }).daysInMonth()\n\n  const getDates = () => {\n    const dates = []\n    for (let i = 0; i < numDays + firstDay || dates.length % 7 !== 0; i++) {\n      dates[i] = { date: { date: i + 1 - firstDay, month, year }, workout: false }\n      const workout = workouts.find(w =>\n        moment(+w.date).date() === dates[i].date.date\n      )\n      if (workout) dates[i].workout = workout\n    }\n    return dates\n  }\n\n  return (\n    <div className=\"z-depth-2\" style={{ marginTop: '1rem'}}>\n      \n      <div className=\"grey darken-3 white-text\">\n        <CalendarControls state={{ month, year }} dispatch={dispatch} />\n\n        <div style={{ display: 'flex' }}>{ \n          days.map(day =>\n            <div key={day} style={{ flex: 'calc(100% / 7)' }}>{day}</div>\n          )\n        }</div>\n      </div>\n      \n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>{\n        getDates().map(date => (\n          <CalendarCell\n            key={date.workout? date.workout.id : date.date.date}\n            date={date}\n            numDays={numDays}\n          />\n        ))\n      }</div>\n\n    </div>\n  )\n}\n","import { gql } from 'apollo-boost'\nimport { workoutFieldsFragment } from './getWorkoutById'\n\nexport default gql`\n  query GET_WORKOUTS_BY_DATE_RANGE($userId: ID!, $startDate: String!, $endDate: String!) {\n    allWorkouts(\n      filter: {\n        AND: [{ user: { id: $userId } }, { date_gte: $startDate }, { date_lte: $endDate }]\n      }\n    ) {\n      ...workoutFields\n    }\n  }\n  ${workoutFieldsFragment}\n`\n","import React, { useReducer } from 'react'\nimport { Query } from 'react-apollo'\nimport { withRouter } from 'react-router-dom'\nimport getUTCDateRange from '../../utils/getStartAndEndOfMonthAsUTC'\n\nimport Calendar from './Calendar'\nimport Loader from '../../components/Loader'\nimport { calReducer, calInitState } from './CalendarControls'\nimport { buttonStyles } from '../carousel/AllWorkouts'\n\nimport getWorkoutsByDate from '../../graphql/queries/getWorkoutsByDate'\n\nfunction AllWorkoutsCalendar({ history, userId }) {\n  const [{ month, year }, dispatch] = useReducer(calReducer, calInitState)\n  const [startDate, endDate] = getUTCDateRange({ month, year })\n\n  return (\n    <Query query={getWorkoutsByDate} variables={{ userId, startDate, endDate }}>\n      {({ loading, error, data: { allWorkouts } }) => {\n        if (loading) return <Loader />\n        if (error) return `Error! ${error.message}`\n        return (\n          <div className='container'>\n            <Calendar\n              state={{ month, year }}\n              dispatch={dispatch}\n              workouts={allWorkouts}\n            />\n\n            <button\n              className='btn-floating red darken-3 z-depth-2'\n              style={buttonStyles}\n              onClick={() => history.push('/workouts')}\n            >\n              <i className='material-icons'>view_carousel</i>\n            </button>\n          </div>\n        )\n      }}\n    </Query>\n  )\n}\n\nexport default withRouter(AllWorkoutsCalendar)\n","import React, { useState } from 'react'\nimport { gql } from 'apollo-boost'\nimport { Mutation, withApollo } from 'react-apollo'\nimport { Redirect, Link } from 'react-router-dom'\nimport Loader from '../../components/Loader'\n\nconst SIGNUP_USER = gql`\n  mutation signupUserMutation($email: String!, $name: String!, $password: String!) {\n    signupUser(email: $email, name: $name, password: $password) {\n      id\n      token\n    }\n  }\n`\n\nexport default withApollo(({ client }) => {\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const [error, setError] = useState(null)\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('id'))\n\n  if (loggedIn) return <Redirect to='./' />\n\n  return (\n    <Mutation mutation={SIGNUP_USER}>\n      {(signupUser, { loading }) => {\n        const handleSubmit = e => {\n          e.preventDefault()\n          if (password !== confirmPassword) {\n            setError(\"Passwords don't match!\")\n            return\n          }\n          signupUser({\n            variables: {\n              email,\n              name,\n              password,\n            },\n          }).then(\n            ({ data: { signupUser } }) => {\n              setEmail('')\n              setName('')\n              setPassword('')\n              setConfirmPassword('')\n              localStorage.setItem('id', signupUser.id)\n              localStorage.setItem('token', signupUser.token)\n              setLoggedIn(true)\n            },\n            err => {\n              console.log(err.message)\n              if (err.message.includes('Email already in use')) {\n                setError('Email already in use')\n              }\n            }\n          )\n        }\n        if (loading) return <Loader />\n        return (\n          <div className='container'>\n            {error && <h5>{error}</h5>}\n            <form onSubmit={handleSubmit}>\n              <div className='input-field'>\n                <label htmlFor='email' className={email && 'active'}>\n                  Email\n                </label>\n                <input\n                  required\n                  id='email'\n                  type='email'\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                  autoComplete='username'\n                />\n              </div>\n\n              <div className='input-field'>\n                <label htmlFor='name' className={name && 'active'}>\n                  Name\n                </label>\n                <input\n                  required\n                  id='name'\n                  type='text'\n                  value={name}\n                  onChange={e => setName(e.target.value)}\n                />\n              </div>\n\n              <div className='input-field'>\n                <label htmlFor='password' className={password && 'active'}>\n                  Password\n                </label>\n                <input\n                  required\n                  id='password'\n                  type='password'\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                  autoComplete='new-password'\n                />\n              </div>\n\n              <div className='input-field'>\n                <label htmlFor='confirm' className={confirmPassword && 'active'}>\n                  Confirm password\n                </label>\n                <input\n                  required\n                  id='confirm'\n                  type='password'\n                  value={confirmPassword}\n                  onChange={e => setConfirmPassword(e.target.value)}\n                  autoComplete='new-password'\n                />\n              </div>\n              <button className='btn red darken-3' type='submit'>\n                Submit\n              </button>\n            </form>\n            <p>\n              Already have an account?\n              <Link className='btn-flat' to='./signin'>\n                Log in here\n              </Link>\n            </p>\n          </div>\n        )\n      }}\n    </Mutation>\n  )\n})\n","import React from 'react'\n\nexport default ({ buttonText, handleSubmit, inputs }) => (\n  <form onSubmit={handleSubmit}>\n    {inputs.map((i, idx) => (\n      <div key={idx} className='input-field'>\n        <label htmlFor={`input-${idx}`}>{i.label || i.type}</label>\n\n        <input\n          required\n          id={`input-${idx}`}\n          type={i.type}\n          ref={node => (i.node = node)}\n          autoComplete={\n            i.type === 'email'\n              ? 'username'\n              : i.type === 'password' && i.new\n              ? 'new-password'\n              : i.type === 'password'\n              ? 'current-password'\n              : null\n          }\n        />\n      </div>\n    ))}\n\n    <button className='btn red darken-3' type='submit'>\n      {buttonText}\n    </button>\n  </form>\n)\n","import React, { useState } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport { withApollo, Mutation } from 'react-apollo'\nimport { gql } from 'apollo-boost'\nimport Form from './Form'\nimport Loader from '../../components/Loader'\n\nconst AUTHENTICATE_USER = gql`\n  mutation authenticateUserMutation($email: String!, $password: String!) {\n    authenticateUser(email: $email, password: $password) {\n      id\n      token\n    }\n  }\n`\n\nexport default withApollo(({ client }) => {\n  const emailInput = { type: 'email', node: null },\n    passwordInput = { type: 'password', node: null }\n\n  const [loggedIn, setLoggedIn] = useState(!!localStorage.getItem('id'))\n\n  if (loggedIn) return <Redirect to='./' />\n\n  return (\n    <div className='container'>\n      <Mutation mutation={AUTHENTICATE_USER}>\n        {(authenticateUser, { loading }) => {\n          const handleSubmit = e => {\n            e.preventDefault()\n            authenticateUser({\n              variables: {\n                email: emailInput.node.value,\n                password: passwordInput.node.value,\n              },\n            }).then(\n              ({ data: { authenticateUser } }) => {\n                emailInput.node.value = passwordInput.node.value = null\n                localStorage.setItem('id', authenticateUser.id)\n                localStorage.setItem('token', authenticateUser.token)\n                setLoggedIn(true)\n              },\n              err => console.log(err)\n            )\n          }\n          if (loading) return <Loader />\n          return (\n            <div className='container'>\n              <Form\n                handleSubmit={handleSubmit}\n                inputs={[emailInput, passwordInput]}\n                buttonText='Sign in'\n              />\n              <p>\n                Don't have an account yet?\n                <Link className='btn-flat' to='./signup'>\n                  Sign up here\n                </Link>\n              </p>\n            </div>\n          )\n        }}\n      </Mutation>\n    </div>\n  )\n})\n","import React, { useEffect } from 'react'\n//import Collection from '../components/Collection';\nimport Checkbox from './execute_workout/execute_set/Checkbox'\nimport Loader from '../components/Loader'\n\nconst divStyles = {\n  margin: '1rem',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  background: '#424242',\n  padding: '1rem',\n  width: '8rem',\n  // height: '8rem'\n  transform: 'scale(1)',\n  transition: 'transform 0.25s, box-shadow 0.25s',\n}\n\nconst labelStyles = {\n  color: '#eee',\n  fontSize: '0.9rem',\n  fontStyle: 'italic',\n}\n\nconst inputStyles = {\n  border: 'none',\n  color: 'white',\n  fontSize: '1.85rem',\n  textAlign: 'center',\n  marginTop: '0.25rem',\n}\n\nexport default () => {\n  //<Collection collapsible header={'header'} />\n  const id = 'test'\n  let input\n\n  useEffect(() => {\n    input = document.getElementById(id)\n    const [label] = Array.from(document.querySelectorAll('label')).filter(\n      el => el.htmlFor === id\n    )\n    const container = document.getElementById(`${id}-container`)\n    input.addEventListener('focus', () => {\n      highlightLabel(label)\n      makePop(container)\n    })\n    input.addEventListener('blur', () => {\n      unHighlightLabel(label)\n      unPop(container)\n    })\n    return () => {\n      input.removeEventListener('focus', () => {\n        highlightLabel(label)\n        makePop(container)\n      })\n      input.removeEventListener('blur', () => {\n        unHighlightLabel(label)\n        unPop(container)\n      })\n    }\n  }, [input])\n\n  function highlightLabel(label) {\n    label.style.color = 'white'\n    label.style.fontWeight = 'bold'\n  }\n\n  function unHighlightLabel(label) {\n    label.style.color = '#bdbdbd'\n    label.style.fontWeight = 'normal'\n  }\n\n  function makePop(container) {\n    container.style.boxShadow = '-2px 2px 24px 0px #212121'\n    //container.style.border = '2px solid gray'\n    // container.style.height = (parseInt(container.clientHeight) * (9/8)) + 'px'\n    // console.log(parseInt(container.style.height))\n    // container.style.width = (parseInt(container.style.width) + 1) + 'rem'\n    container.style.transform = 'scale(1.1)'\n  }\n\n  function unPop(container) {\n    container.style.boxShadow = 'none'\n    container.style.border = 'none'\n    // container.style.height = (parseInt(container.clientHeight) * (8/9)) + 'px'\n    // container.style.width = (parseInt(container.style.width) - 1) + 'rem'\n    container.style.transform = 'scale(1)'\n  }\n\n  const set = { completed: false, id: 3 }\n\n  return (\n    <>\n      <Loader />\n      <Checkbox set={set} />\n      <form>\n        <div id={`${id}-container`} style={divStyles}>\n          <label htmlFor={id} style={labelStyles}>\n            Label for the things\n          </label>\n          <input id={id} type='number' style={inputStyles} />\n        </div>\n      </form>\n    </>\n  )\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport PRoute from './components/ProtectedRoute'\n\n// Components\nimport FrontPage from './pages/front_page/FrontPage'\nimport ExecuteWorkout from './pages/execute_workout/ExecuteWorkout'\nimport CreateProgram from './pages/create_program/CreateProgram'\nimport SetupWorkout from './pages/create_workout/SetupWorkout'\nimport CreateWorkout from './pages/create_workout/CreateWorkout'\nimport CreateExercise from './pages/create_exercise/CreateExercise'\nimport CreateSet from './pages/create_workout/create_set/CreateSet'\nimport AllWorkouts from './pages/carousel/AllWorkouts'\nimport AllWorkoutsCalendar from './pages/calendar/AllWorkoutsCalendar'\nimport Signup from './pages/login_signup/Signup'\nimport Signin from './pages/login_signup/Login'\n\nimport Test from './pages/Test'\n\nexport default () => (\n  <>\n    <Route path='/test' component={Test} />\n\n    <Route path='/signup' component={Signup} />\n    <Route path='/signin' component={Signin} />\n\n    <PRoute exact path='/' component={FrontPage} />\n    <PRoute path='/workout/:id' component={ExecuteWorkout} />\n    <PRoute path='/create/program' component={CreateProgram} />\n    <PRoute path='/create/setup' component={SetupWorkout} />\n    <PRoute path='/create/workout/:id' component={CreateWorkout} />\n    <PRoute path='/create/exercise' component={CreateExercise} />\n    <PRoute path='/create/set' component={CreateSet} />\n    <PRoute exact path='/workouts' component={AllWorkouts} />\n    <PRoute path='/workouts/calendar' component={AllWorkoutsCalendar} />\n  </>\n)\n","import React from 'react'\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(error, info)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>\n    }\n\n    return this.props.children\n  }\n}\n","import React from 'react'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { LastLocationProvider } from 'react-router-last-location'\nimport NavBar from './components/navbar/NavBar'\nimport Routes from './Routes'\nimport ErrorBoundary from './components/ErrorBoundary'\nimport { graphcoolUri } from './keys'\n\n// // Set up Apollo client\nconst client = new ApolloClient({\n  uri: graphcoolUri,\n  request: operation => {\n    const token = localStorage.getItem('token')\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    })\n  },\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <LastLocationProvider>\n          <ErrorBoundary>\n            <div id='main' className='App'>\n              <NavBar />\n            </div>\n\n            <Routes />\n          </ErrorBoundary>\n        </LastLocationProvider>\n      </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","export const graphcoolUri = 'https://api.graph.cool/simple/v1/cjv06d4h4017f0176envsbvmi'\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}